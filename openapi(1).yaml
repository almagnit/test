openapi: 3.0.3
info:
  title: Secret Cloud Enterprise API
  description: Secret Cloud Enterprise application
  version: v0.4.28-SNAPSHOT
servers:
  - url: http://192.168.1.89:8080
    description: Generated server url
tags:
  - name: System Logs
    description: Методы администратора - служебные логи
  - name: Download
    description: Выгрузка файлов
  - name: Reports
    description: Журналы
  - name: File Tree Node Event
    description: События по загрузке файлов
  - name: Role
    description: Методы администратора - роли
  - name: Resumable File Upload
    description: Возобновляемая загрузка файлов
  - name: Check Routine
    description: Управление сценариями проверок
  - name: Check Scenario Instance Share
    description: Модерация проверок публикаций пользователя
  - name: Hash
    description: Управление хэшами для контроля по хэшу
  - name: Admin User
    description: Методы администратора - пользователи
  - name: Check Stage Routine
    description: Шаблоны автоматических проверок
  - name: Short Links
    description: Создание и редирект коротких ссылок
  - name: Admin Group
    description: Администрирование групп
  - name: User Registration
    description: Регистрация пользователей
  - name: File
    description: Загрузка файлов
  - name: Authority
    description: Методы администратора
  - name: Check Scenario
    description: Управление сценариями проверок
  - name: Folder
    description: Управление папками и файлами
  - name: Hash Setting
    description: Управление настройками контроля по хэшу
  - name: User
    description: Поиск пользователей
  - name: User Gost Cert
    description: Управления сертификатами шифрования по ГОСТ
  - name: Check Routine Report
    description: Модерация проверок результатов проверок
  - name: Test Metrics
    description: Метрики загрузки файлов
  - name: OnlyOffice
    description: Интерфейс работы с OnlyOffice
  - name: IntegrationExchangeUser
    description: Управление пользователями MS Exchange
  - name: Settings
    description: Управление настройками
  - name: License
    description: Лицензии
  - name: Version
    description: Информация о версии
  - name: Report Export
    description: Экспорт событий
  - name: Ldap Settings
    description: Управление настройками каталогов
  - name: Counterpart File Request
    description: Управление запросами на загрузку файлов контрагентами
  - name: Auth
    description: Сессия пользователя
  - name: User Settings
    description: Пользовательские настройки
  - name: Hash File
    description: Управление файлами с хэшами для контроля по хэшу
  - name: Two Factor Authentication
    description: Двухфакторная аутентификация
  - name: IntegrationExchangeRecipients
    description: Получатели MS Exchange
  - name: Mail Check
    description: Интеграция с почтой
  - name: Siem Check
    description: Управление настройками SIEM
  - name: Captcha
    description: Каптча
  - name: Icap Check
    description: Управление настройками ICAP
  - name: Share
    description: Доступ к файлам других пользователей
  - name: Template
    description: Редактирование шаблонов
  - name: Counterpart Request
    description: Управление запросами контрагентов (пользователь)
  - name: Group
    description: Поиск групп
  - name: Logo
    description: Лого
  - name: Integration Exchange Files
    description: Передача файлов через MS Exchange
  - name: Security
    description: Методы СБ
  - name: Hash File Upload
    description: Загрузка файлов для контроля по хэшу
  - name: Check Scenario Instance
    description: Модерация проверок
  - name: Websocket
    description: Websocketы
  - name: Share Permission Template
    description: Шаблоны политик безопасности
  - name: Counterpart Settings
    description: Управление дополнительным полем контрагентов
  - name: Counterpart
    description: Управление контрагентами
  - name: Check Stage Staff Report
    description: Модерация проверок действий модераторов
  - name: Public Upload Controller
    description: Загрузка файлов по публичной ссылке на папку
  - name: Dashboard
    description: Дашборд
  - name: Dashboard Export
    description: Дашборд - экспорт
  - name: User Interconnection Setting
    description: Параметры интеграции контуров - пользователь
  - name: Interconnection Setting
    description: Настройки интеграции контуров
  - name: Interconnection Slave
    description: Интеграция с внешним контуром
  - name: User Link
    description: Синхронизация пользователей между контурами
  - name: File Sync Request
    description: Запросы на синхронизацию файлов между контурами
  - name: Marks
    description: Метки
  - name: Marks Requests
    description: Запросы изменения меток
paths:
  /storage/v2/api/upload/check:
    get:
      tags:
        - Resumable File Upload
      summary: "Проверяет файл и если его уже пытались загрузить, то возвращает оффсеты для каждого чанка"
      operationId: checkUpload
      parameters:
        - name: fileName
          in: query
          required: true
          schema:
            type: string
        - name: parentHash
          in: query
          required: true
          schema:
            type: string
        - name: lastPartNumber
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckResumableUploadResponseDto'
        "416":
          description: Requested range not satisfiable
    options:
      tags:
        - Resumable File Upload
      summary: "Проверяет файл и если его уже пытались загрузить, то возвращает оффсеты для каждого чанка"
      operationId: checkUpload_1
      parameters:
        - name: fileName
          in: query
          required: true
          schema:
            type: string
        - name: parentHash
          in: query
          required: true
          schema:
            type: string
        - name: lastPartNumber
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /storage/v2/api/users/secret/received:
    put:
      tags:
        - User
      summary: Получение сикрета для формирование пароля для двухфакторной авторизации
      operationId: markUserSecretKeyAsReceived
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates:
    put:
      tags:
        - Share Permission Template
      summary: Обновление шаблона
      operationId: updateTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsTemplate'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PermissionsTemplate'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Share Permission Template
      summary: Создание нового шаблона
      operationId: createTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsTemplate'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PermissionsTemplate'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates/{hash}/permission:
    put:
      tags:
        - Share Permission Template
      summary: Переназначение шаблона
      operationId: setPermissionForUser
      parameters:
        - name: hash
          in: path
          description: Hash самой папки
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareNodeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/integration/exchange/user:
    get:
      tags:
        - IntegrationExchangeUser
      summary: Получение пользователя для MS Exchange
      operationId: get_4
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationExchangeUser'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - IntegrationExchangeUser
      summary: Обновление пользователя для MS Exchange
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationExchangeUserDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationExchangeUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash:
    get:
      tags:
        - Hash
      summary: Получение всех хэшей
      operationId: findAll
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperHashDto'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Hash
      summary: Обновление хэша
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/HashDto'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Hash
      summary: Добавление хэша
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/HashDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash/setting:
    get:
      tags:
        - Hash Setting
      summary: Получение все настроек контроля по хэшу
      operationId: findAll_1
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperHashSettingDto'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Hash Setting
      summary: Изменение настроек контроля по хэшу
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashSettingDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/HashSettingDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/counterpart/groups:
    put:
      tags:
        - Counterpart
      summary: Изменение контрагентской группы пользователем
      operationId: updateUserCounterpartGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupUpdate'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartGroup'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Counterpart
      summary: Создание новой контрагентской группы пользователем
      operationId: createUserCounterpartGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/scenarios/{id}:
    get:
      tags:
        - Check Scenario
      summary: Получение информации о сценарии
      operationId: getScenario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Сценарий не найден
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Check Scenario
      summary: Изменение сценария проверки
      operationId: updatedScenarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckScenario'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Сценарий проверки с таким именем уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "416":
          description: Requested range not satisfiable
        "400     ":
          description: Сценарий не может содержать проверки с одинаковым названием
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400  ":
          description: Не указан тип сценария
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400   ":
          description: Не указаны настройки ICAP
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400      ":
          description: Сценарий не найден
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400       ":
          description: Нельзя изменить тип сценария
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400    ":
          description: Этап проверки не может быть пустым
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400 ":
          description: Сценарий для MS Exchange не может содержать ручные проверки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
    delete:
      tags:
        - Check Scenario
      summary: Удаление сценария
      operationId: deleteScenario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/routines/{routineId}/stages/templates/{templateId}:
    put:
      tags:
        - Check Stage Routine
      summary: Редактирование шаблона автоматической проверки
      operationId: updateStageRoutineTemplate
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckStageRoutine'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Шаблон не найден
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "416":
          description: Requested range not satisfiable
        "400   ":
          description: Один из элементов пуст
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "400 ":
          description: Название не может быть пустым
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "400  ":
          description: Шаблон проверки с таким названием уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
    delete:
      tags:
        - Check Stage Routine
      summary: Удаление шаблона автоматической проверки
      operationId: deleteStageRoutineTemplate
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Шаблон не найден
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/{id}:
    get:
      tags:
        - Admin User
      summary: Информация о пользователе
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Admin User
      summary: Обновление пользователя
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularUser'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Нельзя снять с себя право управления администраторами
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
        "400  ":
          description: Пользователь с email уже есть в системе
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "400 ":
          description: Неправильный формат личных данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
  /storage/v2/api/admin/users/{id}/public-link/{bool}:
    put:
      tags:
        - Admin User
      summary: Обновление возможности создавать публичные ссылки
      operationId: updatePublicLink
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: bool
          in: path
          required: true
          schema:
            type: boolean
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/{id}/public-link/expire:
    put:
      tags:
        - Admin User
      summary: Обновление даты истечения публичной ссылки
      operationId: updateExpirePublicLink
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserExpirePublicLinkRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/{id}/password:
    put:
      tags:
        - Admin User
      summary: Обновление пароля пользователя
      operationId: updateUsersPassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordChangeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно найти данного пользователя среди локальных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/template/{tag}:
    get:
      tags:
        - Template
      summary: Получение шаблона
      operationId: getTemplate
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Template
      summary: Сохранение шаблона
      operationId: saveTemplate
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/templates/{tag}:
    get:
      tags:
        - Template
      summary: Получение шаблона
      operationId: getTemplate_1
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
    put:
      tags:
        - Template
      summary: Сохранение шаблона
      operationId: saveTemplate_1
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}:
    put:
      tags:
        - Ldap Settings
      summary: Обновление настроек каталога
      operationId: updateLdapSource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapSource'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LdapSource'
        "416":
          description: Requested range not satisfiable
    delete:
      tags:
        - Ldap Settings
      summary: Удаление каталога
      operationId: deleteLdapSource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/test:
    put:
      tags:
        - Ldap Settings
      summary: Обновление настроек каталога и проверка статуса подключения
      operationId: updateLdapSourceAndConnect
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapSource'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusLdapSourceConnectionResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/retrievedGroups/loggable:
    put:
      tags:
        - Ldap Settings
      summary: "Список групп данного каталога, для которых разрешен вход"
      operationId: setLoggableGroups
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Ldap Settings
      summary: "Добавление групп, доступных для логина"
      operationId: addOrEnableLoggableLdapGroups
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/core/mail/template/restore:
    put:
      tags:
        - Settings
      summary: Возвращение параметра основной шаблон к дефолтному значению
      operationId: restoreGenericSetting
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CoreSettings'
  /storage/v2/api/admin/roles/{id}:
    put:
      tags:
        - Role
      summary: Обновление роли
      operationId: updateRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Role'
        "416":
          description: Requested range not satisfiable
    delete:
      tags:
        - Role
      summary: Удаление роли
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "200":
          description: OK
  /storage/v2/api/admin/groups/{id}/scenarios:
    put:
      tags:
        - Admin Group
      summary: Обновление cценариев группы
      operationId: updateGroupScenarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateScenariosDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Группа не найдена
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/groups/{id}/quota:
    put:
      tags:
        - Admin Group
      summary: Настройка квот группы
      operationId: updateQuota
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupQuotaSettingsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
        "400       ":
          description: Такой группы не существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400      ":
          description: Квота группы не может быть пустой
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400 ":
          description: "Количество файлов, которые может загрузить контрагент в одном запросе не может быть меньше 1"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400    ":
          description: Время доступа к файлу для контрагента не может быть меньше 1 часа
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400  ":
          description: Время жизни запроса файлов от контрагента нем может быть меньше 1 часа
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400   ":
          description: Количество скачиваний контрагентом не может быть меньше 1
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400     ":
          description: Время доступа к файлу для контрагента не может быть меньше 1 часа
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
  /storage/v2/api/admin/groups/many:
    put:
      tags:
        - Admin Group
      summary: Обновление групп
      operationId: updateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateManyDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Должен быть включен хотя бы один тип шифрования
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
    delete:
      tags:
        - Admin Group
      summary: Множественное удаление групп
      operationId: deleteManyGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteManyGroupsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Группа не найдена
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
        "400 ":
          description: Невозможно удалить системную группу
  /storage/v2/api/admin/groups/ldap/loggable:
    put:
      tags:
        - Admin Group
      summary: "Обновление у группы параметра, отвечающего за возможность входа в приложение"
      description: "Если значение у группы было true, то станет false и наоборот"
      operationId: setLoggableGroups_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/group/{id}:
    put:
      tags:
        - Admin Group
      summary: Обновление группы
      description: После обновления группы у старых пользователей сбрасывается авторизация
      operationId: updateGroup_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Должен быть включен хотя бы один тип шифрования
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
        "400   ":
          description: Нельзя изменить разрешенные типы шифрования для контрагентов
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400 ":
          description: Вы не можете переименовать встроенную группу
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400  ":
          description: Группа с таким названием уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
    delete:
      tags:
        - Admin Group
      summary: Удаление группы
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно удалить системную группу
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
        "400 ":
          description: Группа не найдена
  /storage/v2/api/admin/groups/{id}:
    put:
      tags:
        - Admin Group
      summary: Обновление группы
      description: После обновления группы у старых пользователей сбрасывается авторизация
      operationId: updateGroup_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Должен быть включен хотя бы один тип шифрования
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
        "400   ":
          description: Нельзя изменить разрешенные типы шифрования для контрагентов
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400 ":
          description: Вы не можете переименовать встроенную группу
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "400  ":
          description: Группа с таким названием уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
    delete:
      tags:
        - Admin Group
      summary: Удаление группы
      operationId: deleteGroup_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно удалить системную группу
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
        "400 ":
          description: Группа не найдена
  /storage/v2/api/admin/counterpart/groups:
    put:
      tags:
        - Admin Group
      summary: Изменение контрагентской группы пользователем
      operationId: updateUserCounterpartGroup_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupUpdate'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartGroup'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Admin Group
      summary: Создание новой группы конрагентов
      description: "Уникальность группы определеяется не только именем, но и владельцем"
      operationId: createCounterpartGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Должен быть указан владелец группы
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/{userId}/settings:
    get:
      tags:
        - User Settings
      summary: Получение настроек пользователя по тегу по умолчанию
      operationId: get
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - User Settings
      summary: Сохранение настроек пользователя по тегу по умолчанию
      operationId: save
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/{userId}/settings/{tag}:
    get:
      tags:
        - User Settings
      summary: Получение настроек пользователя по заданному тегу
      operationId: get_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tag
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - User Settings
      summary: Сохранение настроек пользователя по заданному тегу
      operationId: save_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tag
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/search:
    post:
      tags:
        - User
      summary: Поиск активных пользователей по email
      operationId: getSearchUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperShortInfoRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/requests/{requestId}/decline:
    post:
      tags:
        - User
      summary: Отклонение пользователей
      operationId: rejectUser
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffReplyDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/requests/{requestId}/accept:
    post:
      tags:
        - User
      summary: Подтверждение пользователей
      operationId: acceptUser
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffReplyDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/users/requests/decline/many:
    post:
      tags:
        - User
      summary: Отклонение пользователей
      operationId: declineManyUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuarantineDecisionDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuarantineResponseDto'
  /storage/v2/api/users/requests/accept/many:
    post:
      tags:
        - User
      summary: Подтверждение пользователей
      operationId: acceptManyUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuarantineDecisionDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuarantineResponseDto'
  /storage/v2/api/users/global/settings:
    get:
      tags:
        - User Settings
      summary: Получение глобальных настроек по тегу по умолчанию
      operationId: getGlobal
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - User Settings
      summary: Сохранение глобальных настроек по тегу по умолчанию
      operationId: saveGlobal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/global/settings/{tag}:
    get:
      tags:
        - User Settings
      summary: Получение глобальных настроек по заданному тегу
      operationId: getGlobal_1
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - User Settings
      summary: Сохранение глобальных настроек по заданному тегу
      operationId: saveGlobal_1
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/user/profile/avatar/upload:
    post:
      tags:
        - User Profile
      summary: Загрузка аватара пользователя
      operationId: uploadUsersAvatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAvatarUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно найти данного пользователя среди локальных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/user/profile/avatar/delete:
    delete:
      tags:
        - User Profile
      summary: Удаляет аватарку пользователя
      operationId: deleteUsersAvatar
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/user/profile/language:
    put:
      tags:
        - User Profile
      summary: Смена языка интерфейса, по факту хранение настроек языка пользователя для приложений
      operationId: changeUsersLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLanguageChangeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно найти данного пользователя среди локальных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/user/security/password:
    put:
      tags:
        - User Security
      summary: Обновление пароля пользователя
      operationId: changeUsersPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordChangeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Невозможно найти данного пользователя среди локальных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  # не верно введен старый пароль
                  # старый и новый пароль совпадают
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/user/settings/gost-cert:
    get:
      tags:
        - User Gost Cert
      summary: Получить сертификат
      operationId: getCert
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserGostCert'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - User Gost Cert
      summary: Загрузить сертификат
      operationId: addCert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGostCertRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserGostCert'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/user/settings/gost-cert/user-present:
    get:
      tags:
        - User Gost Cert
      summary: Проверка наличия сертификата пользователя
      operationId: isCertExist
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserGostCertResponseDto'
  /storage/v2/api/user/settings/gost-cert/server-present:
    get:
      tags:
        - User Gost Cert
      summary: Получение сертификата сервера
      operationId: getServerCert
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserGostCertResponseDto'
  /storage/v2/api/user/settings/gost-cert/server-expiration:
    get:
      tags:
        - User Gost Cert
      summary: Получение срока действия сертификата
      operationId: getServerCertificateExpirationDate
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: date-time
  /storage/v2/api/user/settings/gost-cert/server-hash:
    get:
      tags:
        - User Gost Cert
      summary: Получение хэша сертификата
      operationId: getServerCertHash
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserGostCertResponseDto'
  /storage/v2/api/user/settings/gost-cert/file:
    get:
      tags:
        - User Gost Cert
      summary: Получение сессионного ключа
      operationId: getSessionKey
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/GostSessionKey'
  /storage/v2/api/user/settings/gost-cert/secret-keys:
    get:
      tags:
        - User Gost Cert
      summary: Получение сессионного ключа пользователя
      operationId: getSessionKeysForUser
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SessionKeysAndServerCertDto'
  /storage/v2/api/user/settings/gost-cert/secret-keys-new:
    post:
      tags:
        - User Gost Cert
      summary: Обновление сессионного ключа
      operationId: saveNewSessionKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionKeysDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
  /storage/v2/api/user/settings/gost-cert/settings/activate:
    post:
      tags:
        - User Gost Cert
      summary: Активация настроек
      operationId: activateSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
  /storage/v2/api/user/settings/gost-cert/settings:
    get:
      tags:
        - User Gost Cert
      summary: Получение текущих настроек
      operationId: getCurrentActiveSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CryptoSettings'
    post:
      tags:
        - User Gost Cert
      summary: Сохранение текущих настроек
      operationId: saveNewSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptoSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CryptoSettings'
    delete:
      tags:
        - User Gost Cert
      summary: Удаление настроек
      operationId: deleteOldContainer
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
  /storage/v2/api/user/settings/gost-cert/old-new-keys:
    get:
      tags:
        - User Gost Cert
      summary: Получение старого и нового ключей
      operationId: getOldAndNewKeys
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OldAndNewEncryptionKeys'
  /storage/v2/api/upload/create:
    post:
      tags:
        - Resumable File Upload
      summary: "Создает временную папку, в которой будут хранится чанки перед конкатенацией в полный файл"
      operationId: createUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResumableUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/upload/complete:
    post:
      tags:
        - Resumable File Upload
      summary: Вызывается после успешной загрузки всех чанков - конкатенирует чанки в полный файл
      operationId: completeUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteResumableUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/short-link/create:
    post:
      tags:
        - Short Links
      summary: Создание короткой ссылки
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShortLink'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/shares/share:
    post:
      tags:
        - Share
      summary: 'Добавление владельца папки/файла '
      operationId: internalShareFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareNodeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SharedNode'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/shares/share/public:
    post:
      tags:
        - Share
      summary: Публично поделиться файлом
      operationId: publicShareFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharePublicNodeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PublicSharedNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/shares/public/max-time:
    get:
      tags:
        - Share
      summary: Время жизни публичной ссылки на файл
      operationId: getPublicShareMaxTime
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer

  /storage/v2/api/shares/expires:
    get:
      tags:
        - Share
      summary: Список завершающихся расшаренных элементов
      description: >
        В результате сервер отдает не более 20 записей, относящихся к файлам,
        которыми пользователь поделился с кем-то. Список отсортирован по дате
        завершения предоставления доступа в начиная от NOW(). Запрос без 
        параметров т.к. это фиксированный список из 20 записей.
      operationId: getExpiresShares
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/shares/content:
    post:
      tags:
        - Share
      summary: Список расшаренных от определённого пользователя элементов
      operationId: getAvailableShares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentInShareFolder'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/share/permissions/templates/reassign:
    post:
      tags:
        - Share Permission Template
      summary: Замена одного шаблона другим
      operationId: reassignSharedNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReassignPermissionsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates/paged:
    post:
      tags:
        - Share Permission Template
      summary: Список шаблонов
      operationId: getTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperPermissionsTemplate'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/security/files/trashed/paged:
    post:
      tags:
        - Security
      summary: Файлы в корзине
      operationId: getRootFolderContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/security/files/published/paged:
    post:
      tags:
        - Security
      summary: Опубликованные файлы
      operationId: getPublishedStoredFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/registration/restore:
    post:
      tags:
        - User Registration
      summary: Восстановление пароля
      operationId: restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationParametersDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/registration/register:
    post:
      tags:
        - User Registration
      summary: Регистрация
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationParametersDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/registration/new-password:
    post:
      tags:
        - User Registration
      summary: Создание пароля для пользователя
      operationId: createNewPasswordForUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/registration/confirm-registration:
    post:
      tags:
        - User Registration
      summary: Подтверждение e-mail
      operationId: activator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/registration/approve:
    post:
      tags:
        - User Registration
      summary: Подтверждение нового контрагента через ссылку
      operationId: approveCounterpartByToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/onlyoffice/{fileHash}/callback:
    post:
      tags:
        - OnlyOffice
      summary: Обновление файла
      operationId: handleUpdateCallback
      parameters:
        - name: fileHash
          in: path
          description: Хеш файла
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlyOfficeCallbackRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OnlyOfficeCallbackResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/onlyoffice/new:
    post:
      tags:
        - OnlyOffice
      summary: Создание нового файла
      operationId: createNewFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlyOfficeNewFileRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OnlyOfficeNewFileResponse'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/logo/upload:
    post:
      tags:
        - Logo
      summary: Загрузка логотипа доступно только admin
      operationId: up
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: byte
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/registration/paged:
    post:
      tags:
        - Reports
      summary: Журнал регистрация
      operationId: getRegistrationEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperLogEntry'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/logins:
    post:
      tags:
        - Reports
      summary: Журнал попыток авторизации
      operationId: getLoginEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PageWrapperLoginEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/files:
    post:
      tags:
        - Reports
      summary: Журнал событий файлов
      operationId: getNodeEvenFts
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - SUB_FILE_IN_ZIP_CREATED
                - FILE_CREATED
                - FILE_TTL_CHANGED
                - FOLDER_CREATED
                - CREATED_ZIP
                - ZIPPING
                - ZIPPING_SUCCESS
                - CREATED_ENCRYPTED
                - ENCRYPTING
                - TAG_CREATED
                - PERMISSIONS_TEMPLATE_CREATED
                - PERMISSIONS_TEMPLATE_DELETED
                - PERMISSIONS_TEMPLATE_UPDATED
                - PERMISSIONS_TEMPLATE_REASSIGNED
                - UPLOADED
                - UPLOAD_FAILED
                - UPDATED
                - UPDATED_UPLOADED
                - UPDATE_ACCEPTED
                - UPDATED_DECLINED
                - USER_CHOSE_SCENARIO
                - PERMISSION_GRANTED
                - CHECK_MANUAL
                - CHECK_STARTED
                - CHECK_FINISHED
                - POLICY_APPLIED
                - COUNTERPART_UNSHARE_NODE_AFTER_FILE_DOWNLOAD_LIMIT_EXCEEDED
                - SHARE_ACCEPTED
                - SHARE_DECLINED
                - USER_SHARE_ACCEPTED
                - USER_SHARE_DECLINED
                - ACCEPTED
                - DECLINED
                - FILE_RENAMED
                - FOLDER_RENAMED
                - FILE_COMMENT_CHANGED
                - FOLDER_COMMENT_CHANGED
                - FILE_TRASHED
                - FOLDER_TRASHED
                - FOLDER_RESTORED
                - FILE_RESTORED
                - FILE_REMOVED
                - FOLDER_REMOVED
                - AVAILABLE
                - FILE_COPIED
                - AVAILABLE_AFTER_COPYING
                - OVER_CAPACITY
                - TRANSFER_ACCEPTED
                - TRANSFER_DECLINED
                - USER_REQUESTED_FILES
                - COUNTERPART_TRANSFER
                - PASSWORD
                - DOWNLOADED_BY_PUBLIC_LINK
                - DOWNLOADED_BY_EXTERNAL_LINK
                - DOWNLOADED
                - DOWNLOADED_BY_ANOTHER_USER
                - PREVIEW_FILE_DOWNLOADED
                - FILE_MOVED
                - FOLDER_MOVED
                - PASSWD_RECIEVED
                - PASSWD_DECLINED
                - DECLINE_SHARE
                - SHARE_MANUAL
                - SENDER
                - FILE_SHARED
                - FILE_PUBLIC_SHARED
                - FILE_PUBLIC_UNSHARED
                - FOLDER_SHARED
                - FILE_SHARED_TO_COUNTERPART
                - FOLDER_SHARED_TO_COUNTERPART
                - FILE_SHARED_TO_COUNTERPART_GROUP
                - FOLDER_SHARED_TO_COUNTERPART_GROUP
                - FILE_UNSHARED
                - FOLDER_UNSHARED
                - FILE_UNSHARED_FROM_COUNTERPART
                - FILE_UNSHARED_FROM_COUNTERPART_GROUP
                - FOLDER_UNSHARED_FROM_COUNTERPART
                - FOLDER_UNSHARED_FROM_COUNTERPART_GROUP
                - FILE_SHARED_INFO_ACCEPTED_TO_COUNTERPART
                - FILE_SHARED_INFO_ACCEPTED_TO_COUNTERPART_GROUP
                - FILE_IN_FOLDER_SHARED_INFO_ACCEPTED_TO_COUNTERPART
                - FILE_IN_FOLDER_SHARED_INFO_ACCEPTED_TO_COUNTERPART_GROUP
                - FILE_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART
                - FILE_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART_GROUP
                - FOLDER_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART
                - FOLDER_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART_GROUP
                - DOWNLOAD_DECLINED
                - DOWNLOAD_COUNTER_INCREASED
                - IN_QUARANTINE
                - COUNTERPART_REQUEST_DELETED
                - COUNTERPART_REQUEST_CLOSED_BY_COUNTERPART
                - MAIL_INTEGRATION_IS_DISABLED_USER_NOTIFICATION_ON_NODE_EVENT
                - MAIL_INTEGRATION_IS_DISABLED_ADMIN_NOTIFICATION_ON_NODE_EVENT
                - MAIL_INTEGRATION_NO_CONNECT_USER_NOTIFICATION_ON_NODE_EVENT
                - MAIL_INTEGRATION_NO_CONNECT_ADMIN_NOTIFICATION_ON_NODE_EVENT
                - DOWNLOADED_BY_ADMIN
                - TRASHED_BY_AUTOCLEAN
                - DELETED_BY_AUTOCLEAN
                - DOWNLOADED_EXPIRE_COUNT
                - DOWNLOADED_EXPIRE_TIME
                - PUBLIC_UPLOAD_REQUEST_CREATED
                - PUBLIC_UPLOAD_REQUEST_DELETED
                - PUBLIC_UPLOAD_FILE_TRANSFERRED
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNodeEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/files/logs:
    post:
      tags:
        - Reports
      summary: "События по всем файлам пользователя и файлам, для которых он является администратором"
      operationId: getUserFileEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNodeEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/export:
    post:
      tags:
        - Report Export
      summary: Экспорт событий
      operationId: exportLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ExportResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/counterparts/paged/user:
    post:
      tags:
        - Reports
      summary: Журнал утвержденных контрагентов
      operationId: getCounterpartsLogForUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperLogEntry'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/counterparts/paged/admin:
    post:
      tags:
        - Reports
      summary: Журнал утвержденных контрагентов
      operationId: getCounterpartsLogForAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperLogEntry'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/actions/paged:
    post:
      tags:
        - Reports
      summary: Журнал действий администраторов
      operationId: getStaffActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperLogEntry'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/log/sce-integration/paged:
    post:
      tags:
        - Reports
      summary: События SCE интеграции
      operationId: getSceIntegrationEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperLogEntry'

  /storage/v2/api/licenses/upload:
    post:
      tags:
        - License
      summary: Загрузка файла лицензии
      operationId: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Ошибка при загрузке файла лицензии
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/integration/exchange/share:
    post:
      tags:
        - Integration Exchange Files
      summary: Передача файла для MS Exchange
      operationId: shareFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationExchangeShareRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationExchangeShareResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/integration/exchange/recipients:
    post:
      tags:
        - IntegrationExchangeRecipients
      summary: Подготовка получателей для MS Exchange
      operationId: prepareRecipients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationExchangeRecipients'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationExchangeRecipientsResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/integration/exchange/files:
    post:
      tags:
        - Integration Exchange Files
      operationId: uploadFile
      parameters:
        - name: sender
          in: query
          description: Отправитель
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: Название файла
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Дата отправки запроса
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationExchangeFilesResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash/files/upload:
    post:
      tags:
        - Hash File Upload
      summary: Загрузка файлов в с хэшами
      operationId: upload_1
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResultDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/groups/search:
    post:
      tags:
        - Group
      summary: Поиск групп
      operationId: getSearchGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperShortInfoGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2:
    post:
      tags:
        - Folder
      summary: Создание новой папки
      description: "Если parentHash отсутствует в запросе, то папка создается в корне"
      operationId: createFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/version/restore:
    post:
      tags:
        - Folder
      summary: Поставить выбранную версию файла во главу
      operationId: updateVersionOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVersionsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoredFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/trash:
    post:
      tags:
        - Folder
      summary: Перемещение нескольких файлов в корзину
      description: "В случае если какие-то файлы не переместились, операция продолжится, о неперемещенных файлах придет информация в ответе"
      operationId: trashManyFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrashManyFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FilesMoveToTrashResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/tags:
    post:
      tags:
        - Folder
      summary: Обновление тэгов для файла или папки
      operationId: updateFileTreeNodeTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagsRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/restore:
    post:
      tags:
        - Folder
      summary: Восстановление элементов из корзины
      operationId: restore_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreManyFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RestoreManyFilesResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/request/external/info:
    post:
      tags:
        - Folder
      summary: "Запрос информации о папки, в которую контрагент по внешней ссылке будет загружать файлы"
      operationId: getFileTreeCounterpartUploadRequest
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeCounterpartUploadRequestShortDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/rename:
    post:
      tags:
        - Folder
      summary: Переименование папки или файла
      operationId: rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/move:
    post:
      tags:
        - Folder
      summary: Перемещение файлов и папок
      operationId: moveMany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleMoveFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MultipleMoveFilesResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/load:
    post:
      tags:
        - Folder
      summary: Запрос о занятом месте для текущего пользователя
      description: "Возвращает квоту, использованое место в корзине, в моих файлах и сколько осталось неиспользованного места"
      operationId: getSpaceBytes
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserSpaceBytes'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/folder/by-parent-and-name:
    post:
      tags:
        - Folder
      summary: Получение папки по родительскому хэшу и имени
      operationId: getFolderByParentHashAndName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNodeClientDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/copy:
    post:
      tags:
        - Folder
      summary: Копирование файлов и папок
      operationId: copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/content:
    post:
      tags:
        - Folder
      summary: Содержимое папки по её хэшу или особых папок
      operationId: getRootFolderContent_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode_FolderContent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/comment:
    post:
      tags:
        - Folder
      summary: Изменение комментария ноды в шаре
      operationId: setCommentInShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCommentChangeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/{hash}/uploadV2:
    post:
      tags:
        - File
      operationId: uploadFileV2
      parameters:
        - in: query
          name: storagePolicy
          required: false
          schema:
            $ref: '#/components/schemas/StoragePolicy'
        - name: hash
          in: path
          description: "Хэш папки, в которую загружаем файл; для загрузки в корневую папку передавать 'root'"
          required: true
          schema:
            type: string
        - name: zipName
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoredFileTreeNodeResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/{hash}/duplicates:
    post:
      tags:
        - File
      operationId: findDuplicates
      parameters:
        - name: hash
          in: path
          description: "Папка, в которой нужно искать дубликаты"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilesDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/uploaded/paged:
    post:
      tags:
        - File Tree Node Event
      summary: "Файлы, загруженные данным пользователем"
      operationId: getUploadedFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNodeEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/upload/request/{id}:
    post:
      tags:
        - File
      summary: "Запрос файлов, которые загрузил контрагент и которые находятся на проверке"
      operationId: getContentenOfCounterpartFileUploadRequestFolder
      parameters:
        - name: id
          in: path
          description: ID запроса на файлы
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/upload/link:
    post:
      tags:
        - File
      summary: Загрузка файла по ссылке
      operationId: uploadByLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadLinkRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/transfer/{hash}:
    post:
      tags:
        - File
      summary: Передача непереданных файлов запросившему
      operationId: transferFilesFromCounterpartToUser
      parameters:
        - name: hash
          in: path
          description: "Хэш папки, файлы из которой мы хотим передать пользователю"
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/requested/paged:
    post:
      tags:
        - File Tree Node Event
      summary: "Файлы, запрошенные данным пользователем"
      operationId: getRequestedFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNodeEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/exchange:
    post:
      tags:
        - File
      operationId: createFileAndShareWithExchange
      parameters:
        - name: hash
          in: path
          description: Hash загруженного файла
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/stream+json:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/drag-and-drop/create/folder:
    post:
      tags:
        - File
      summary: Создание папки драг энд дропом
      operationId: createFolderTreeDragAndDrop
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DragAndDropFolderTreeDTO'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DragAndDropFolderTreeDTO'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/check:
    post:
      tags:
        - File
      summary: "Проверка, может ли пользователь загрузить определенные файлы"
      operationId: checkIfCanUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadCheckRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileUploadCheckResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts:
    get:
      tags:
        - Counterpart
      summary: Список одобренных контрагентов - deprecated
      operationId: getApprovedCounterparts
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegularUser'
        "416":
          description: Requested range not satisfiable
      deprecated: true
    post:
      tags:
        - Counterpart
      summary: Создание нового контрагента - deprecated
      operationId: createCounterpart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/counterparts/search:
    post:
      tags:
        - Counterpart Request
      summary: Поиск контрагентов по email
      description: подстрока для поиска находится в поле search запроса
      operationId: searchForApprovedCounterparts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/requests:
    post:
      tags:
        - Counterpart Request
      summary: Создание запроса на подтверждение нового контрагента
      operationId: createNewCounterpartRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartRequest'
      deprecated: true
  /storage/v2/api/counterparts/requests/many:
    post:
      tags:
        - Counterpart Request
      summary: Создание нескольких запросов на подтверждение новых контрагентов
      operationId: requestCounterpart
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CounterpartRequest'
  /storage/v2/api/counterparts/requests/many/delete:
    post:
      tags:
        - Counterpart Request
      summary: Удаление запроса на контрагента
      description: "Удаляется только запрос для данного пользователя, сам контрагент остается активным"
      operationId: disableCounterpartsRequestsForUser
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/requests/import:
    post:
      tags:
        - Counterpart Request
      operationId: requestCounterpartsFromFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartsRequestResultDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/requests/from/user/paged:
    post:
      tags:
        - Counterpart Request
      summary: Список запрошенных контрагентов данным пользователем
      operationId: getCounterpartsRequestsPaged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCounterpartRequest'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/requests/file:
    post:
      tags:
        - Counterpart File Request
      summary: Создание запроса на получение файла от контрагента
      operationId: requestFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "204":
          description: No Content
  /storage/v2/api/counterparts/requests/export/csv:
    post:
      tags:
        - Counterpart Request
      summary: Запрос на экспорт новых контрагентов в формате csv
      operationId: requestCounterpartstoCsv
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartExportRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/repeat/email:
    post:
      tags:
        - Counterpart Request
      summary: "Повторная отправка письма контрагенту или пользователю, для активации пароля"
      operationId: repeatEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartRequestDetails'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/counterpart/groups/paged:
    post:
      tags:
        - Counterpart
      summary: "Поиск всех групп, созданных данным пользователем"
      operationId: getAllCounterpartGroupsByOwnerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCounterpartGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/counterpart/groups/delete:
    post:
      tags:
        - Counterpart
      summary: Удаление контрагентской группы пользователем
      operationId: deleteUserCounterpartGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupDeleteRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/scenarios:
    get:
      tags:
        - Check Scenario
      summary: Получение всех сценариев проверок - deprecated
      operationId: findAll_3
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckScenario'
        "416":
          description: Requested range not satisfiable
      deprecated: true
    post:
      tags:
        - Check Scenario
      summary: Создание сценария проверки
      operationId: createScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckScenario'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Сценарий проверки с таким именем уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "416":
          description: Requested range not satisfiable
        "400     ":
          description: Сценарий не может содержать проверки с одинаковым названием
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400  ":
          description: Не указан тип сценария
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400   ":
          description: Не указаны настройки ICAP
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400    ":
          description: Этап проверки не может быть пустым
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
        "400 ":
          description: Сценарий для MS Exchange не может содержать ручные проверки
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckScenario'
  /storage/v2/api/checks/scenarios/{scenarioType}/paged:
    post:
      tags:
        - Check Scenario
      summary: Получение сценариев проверки по типу
      operationId: getScenarios
      parameters:
        - name: scenarioType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ScenarioType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCheckScenario'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/routines/{routineId}/stages/templates:
    post:
      tags:
        - Check Stage Routine
      summary: Создание шаблона автоматической проверки
      operationId: createStageRoutineTemplate
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateForCheckStageRoutineDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "416":
          description: Requested range not satisfiable
        "400 ":
          description: Название не может быть пустым
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "400   ":
          description: Один из элементов пуст
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "400    ":
          description: Проверка не выбрана
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
        "400  ":
          description: Список не должен быть пустым
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckStageRoutine'
  /storage/v2/api/checks/routines/{routineId}/stages/templates/paged:
    post:
      tags:
        - Check Stage Routine
      summary: Получение шаблонов для данной автоматической проверки
      operationId: getStageRoutineTemplates
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCheckStageRoutine'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/reports/staff/all/actions/paged:
    post:
      tags:
        - Check Stage Staff Report
      summary: Все действия модераторов
      operationId: getReviewersActions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRoutineReportDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/reports/routines/reports/paged:
    post:
      tags:
        - Check Routine Report
      summary: Результаты проверок по примененным политикам и карантину для отчетов администратора
      operationId: getRoutinesReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRoutineReportDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/instances/scenarios/decline:
    post:
      tags:
        - Check Scenario Instance
      summary: Отказ сценария
      operationId: declineScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuarantineDecisionDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuarantineResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/instances/scenarios/accept:
    post:
      tags:
        - Check Scenario Instance
      summary: Разрешение сценария
      operationId: acceptScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuarantineDecisionDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuarantineResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users:
    post:
      tags:
        - Admin User
      summary: Создание нового пользователя
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularUser'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Пароль не соответствует политикам
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RegularUser'
        "416":
          description: Requested range not satisfiable
        "400 ":
          description: Регистрация отключена
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "400   ":
          description: Пользователь с email уже есть в системе
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "400  ":
          description: Неправильный формат личных данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - Admin User
      summary: Удаление пользователя
      operationId: deleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeletionRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/{id}/groups/update:
    post:
      tags:
        - Admin User
      summary: Назначение новый группы
      operationId: assignGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupUpdateDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Группа не найдена
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/unblock:
    post:
      tags:
        - Admin User
      summary: Разблокирование пользователей
      description: "В теле запроса массив с айдишниками пользователей, которых нужно разблокировать"
      operationId: unblockUser
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: integer
                  format: int64
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/search/counterpart/for-user/{requesterId}:
    post:
      tags:
        - Admin User
      summary: Список контрагентов для конкретного пользователя
      operationId: searchForApprovedCounterpartsForUser
      parameters:
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/mobile/update:
    post:
      tags:
        - Admin User
      summary: Изменение прав доступа с мобильного клиента
      operationId: updateMobile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoginFromClientRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserIdAndLoginAuthTypeRequestDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/local/paged:
    post:
      tags:
        - Admin User
      summary: Список обычных пользователей
      operationId: getUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/export/csv:
    post:
      tags:
        - Admin User
      summary: Экспорт пользователей csv
      operationId: exportUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserExportCsvDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Пользователь не найден в базе данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/desctop/update:
    post:
      tags:
        - Admin User
      summary: Изменение прав доступа с десктопного клиента
      operationId: updateDesktop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoginFromClientRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserIdAndLoginAuthTypeRequestDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/delete/many:
    post:
      tags:
        - Admin User
      summary: Групповое удаление пользователей
      operationId: deleteUsers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/counterpart/paged:
    post:
      tags:
        - Admin User
      summary: Список контрагентов
      operationId: getCounterpartsPaged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/block:
    post:
      tags:
        - Admin User
      summary: Блокирование пользователей
      description: "В теле запроса массив с айдишниками пользователей, которых нужно заблокировать"
      operationId: blockUser
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/users/admin/paged:
    post:
      tags:
        - Admin User
      summary: Список админов
      operationId: getAdminPaged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/user_groups/paged:
    post:
      tags:
        - Admin Group
      summary: Список групп пользователей
      operationId: getUserGroupsPaged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/template/{tag}/preview:
    post:
      tags:
        - Template
      summary: Предпросмотр шаблона
      operationId: previewTemplate
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFormDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/templates/{tag}/preview:
    post:
      tags:
        - Template
      summary: Предпросмотр шаблона
      operationId: previewTemplate_1
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CommonTemplateTag'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateFormDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/watermark:
    post:
      tags:
        - Settings
      summary: Сохранение настроек предосмотра
      operationId: setWatermarkSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePreviewSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FilePreviewSettings'
  /storage/v2/api/admin/settings/storage_reserve:
    get:
      tags:
        - Settings
      summary: Получение текущих настроек резерва хранилища
      operationId: getStorageReserveSetting
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StorageReserveSettings'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Settings
      summary: Сохранение настроек резерва хранилища
      operationId: saveStorageReserveSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageReserveSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StorageReserveSettings'
  /storage/v2/api/admin/settings/siem:
    get:
      tags:
        - Siem Check
      summary: Получение текущих настроек SIEM
      operationId: getSiemSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusSiemSettingsSiemConnectResult'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Siem Check
      summary: Сохранение настроек SIEM
      operationId: saveSiemSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiemSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/siem/connect:
    post:
      tags:
        - Siem Check
      summary: Попробовать подключиться к SIEM
      operationId: testSiem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiemSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusSiemSettingsSiemConnectResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/desktop:
    get:
      tags:
        - Settings
      summary: Получение настроек клиента для юзера
      operationId: getUserSettingsDesktop
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DesktopSettings'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/desktop/save:
    post:
      tags:
        - Settings
      summary: Обновление декстопных настроек
      operationId: saveDesktopSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesktopSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DesktopSettings'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/preview:
    get:
      tags:
        - Settings
      summary: Получение настроек предосмотра
      operationId: getFilePreviewSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FilePreviewSettings'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Settings
      summary: Сохранение настроек предосмотра
      operationId: setFilePreviewSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePreviewSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FilePreviewSettings'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/preview/watermarks:
    get:
      tags:
        - Settings
      summary: Получение водяных знаков
      operationId: getWatermarks
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WatermarkRequestDto'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Settings
      summary: Сохранение водяных знаков
      operationId: saveWatermarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatermarkRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WatermarkRequestDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/mail:
    get:
      tags:
        - Mail Check
      summary: Получение текущих настроек smtp
      operationId: getMailSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatus'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Mail Check
      summary: Сохранение настроек smtp
      operationId: saveMailSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/mail/connect:
    post:
      tags:
        - Mail Check
      summary: Проверка настроек smtp
      operationId: testConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusMailSettingsMailTestResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/logging:
    get:
      tags:
        - Settings
      summary: Получение текущих настроек логгирования
      operationId: getLoggingSetting
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LoggingSettings'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Settings
      summary: Сохранение настроек логгирования
      operationId: saveLoggingSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/test:
    post:
      tags:
        - Ldap Settings
      summary: Проверка каталога и статуса подключения
      operationId: checkSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapSource'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusLdapSourceConnectionResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources:
    get:
      tags:
        - Ldap Settings
      summary: Получение текущих настроек каталогов
      operationId: getLdapSources
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationStatusLdapSourceConnectionResult'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Ldap Settings
      summary: Добавление каталога
      operationId: addLdapSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapSource'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LdapSource'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/sync:
    post:
      tags:
        - Ldap Settings
      summary: Синхронизация данных из каталога
      operationId: syncLdapSource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SyncResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/sync/start:
    post:
      tags:
        - Ldap Settings
      summary: Фоновая синхронизация данных из каталога
      operationId: syncLdapSourceInBackground
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SyncStatus'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/enable:
    post:
      tags:
        - Ldap Settings
      summary: Включение каталога
      operationId: enableLdapSource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/enable/test:
    post:
      tags:
        - Ldap Settings
      summary: Включение каталога и проверка настроек
      operationId: enableLdapSourceAndConnect
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConnectionResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/disable:
    post:
      tags:
        - Ldap Settings
      summary: Отключение каталога
      operationId: disableLdapSource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/test:
    post:
      tags:
        - Ldap Settings
      summary: Добавление каталога и проверка статуса подключения
      operationId: addLdapSourceAndConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapSource'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusLdapSourceConnectionResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/icap:
    post:
      tags:
        - Icap Check
      summary: Сохранение настроек ICAP
      operationId: saveIcapSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IcapSettingsEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/icap/paged:
    post:
      tags:
        - Icap Check
      summary: Получение текущих настроек ICAP
      operationId: getIcapSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperIntegrationStatus'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/icap/connect:
    post:
      tags:
        - Icap Check
      summary: Проверка настроек ICAP
      operationId: saveIcapSettingsImmediately
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IcapSettingsEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusIcapSettingsEntityIcapConnectResult'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/core:
    get:
      tags:
        - Settings
      summary: Получение текущих настроек хранилища
      operationId: getCoreSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CoreSettings'
        "416":
          description: Requested range not satisfiable
    post:
      tags:
        - Settings
      summary: Сохранение настроек хранилища
      operationId: saveCoreSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreSettings'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/admins_whitelist/{targetUserType}:
    post:
      tags:
        - Settings
      summary: Получение белого списка сетей для доступа администраторов
      operationId: findAdminsWhiteListSettings
      parameters:
        - name: targetUserType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/TargetUserType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperAdminAccessSetting'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/settings/restrictions:
    get:
      tags:
        - Settings
      summary: Получение ограничений по белому списку сетей
      operationId: getUserWhitelistRestrictions
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRestrictions'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/admins_whitelist/many:
    delete:
      tags:
        - Settings
      summary: Удаление элемента из белого списка сетей
      operationId: deleteAdminsWhiteListSettingsMany
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/DeleteWhitelistSettingsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/admins_whitelist:
    post:
      tags:
        - Settings
      summary: Сохранение элемента из белого списка сетей
      operationId: saveAdminsWhiteListSettings
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/AdminAccessSetting'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AdminAccessSetting'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/admins_whitelist/{id}:
    delete:
      tags:
        - Settings
      summary: Удаление элемента из белого списка сетей
      operationId: deleteAdminsWhiteListSettings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/admin/settings/labels:
    post:
      tags:
        - Settings
      summary: Сохранение настроек меток
      operationId: saveLabelSettings
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LabelsSettings'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LabelsSettings'
    get:
      tags:
        - Settings
      summary: Получение  настроек меток
      operationId: getLabelSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LabelsSettings'

  /storage/v2/api/admin/settings/lock-copying:
    post:
      tags:
        - Settings
      summary: Сохранение настроек блокирования копирования
      operationId: saveLockCopyingSettings
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LockCopyingSettings'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LockCopyingSettings'
    get:
      tags:
        - Settings
      summary: Получение настроек запрета копирования
      operationId: getLockCopyingSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LockCopyingSettings'

  /storage/v2/api/admin/settings/lock-screenshot:
    post:
      tags:
        - Settings
      summary: Сохранение настроек блокирования скриншотов
      operationId: saveLockScreenshotSettings
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LockScreenshotSettings'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LockScreenshotSettings'
    get:
      tags:
        - Settings
      summary: Получение настроек запрета скриншотов
      operationId: getLockScreenshotSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LockScreenshotSettings'


  /storage/v2/api/admin/roles:
    post:
      tags:
        - Role
      summary: Создание новой роли
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Role'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/roles/paged:
    post:
      tags:
        - Role
      summary: Список ролей
      operationId: getRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRole'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/groups:
    post:
      tags:
        - Admin Group
      summary: Создание новой группы
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Группа с таким названием уже существует
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/counterpart/groups/sc_counterparts:
    post:
      tags:
        - Admin Group
      summary: Получение группы Контрагенты SecretCloud
      operationId: getScCounterpartsGroup
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/counterpart/groups/paged:
    post:
      tags:
        - Admin Group
      summary: Список всех групп контрагентов
      operationId: getAllCounterpartGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCounterpartGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/counterpart/groups/delete:
    post:
      tags:
        - Admin Group
      summary: Удаление группы контрагентов
      operationId: deleteCounterpartGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartGroupDeleteRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/all_groups/paged:
    post:
      tags:
        - Admin Group
      summary: Список всех групп
      operationId: getAllGroupsPaged
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/upload/patch:
    patch:
      tags:
        - Resumable File Upload
      summary: "Обновляем чанк, наполняя его контентом"
      operationId: updateUpload
      parameters:
        - name: fileName
          in: header
          required: true
          schema:
            type: string
        - name: partNumber
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: uploadOffset
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: uploadLength
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: fileSize
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: parentHash
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UpdateResumableUploadResponseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates/{id}/toggle:
    patch:
      tags:
        - Share Permission Template
      summary: включение/выключение шаблона
      operationId: enablePermissionsTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PermissionsTemplate'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/update-ttl:
    patch:
      tags:
        - File
      summary: Обновляет время жизни для файла или каталога
      operationId: updateTtlForFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTtlRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/groups/multiple/quota:
    patch:
      tags:
        - Admin Group
      summary: Обновление квот множества групп
      operationId: patchQuotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsUpdateRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/qr:
    get:
      tags:
        - Download
      summary: Скачивание QR кода для аутентификации
      operationId: downloadQrCode
      parameters:
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "307":
          description: Temporary Redirect
        "416":
          description: Requested range not satisfiable
  /storage/v2/internal/ws/poke:
    get:
      tags:
        - Websocket
      operationId: testWs
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/{hash}/dl/public:
    get:
      tags:
        - Download
      summary: Скачивание файла по публичной ссылке
      operationId: publicGetResource
      parameters:
        - name: hash
          in: path
          description: Хэш скачиваемого файла
          required: true
          schema:
            type: string
        - name: range
          in: header
          required: false
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
        - name: versionId
          in: query
          description: Версия скачиваемого файла. Если null - скачивается последняя
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/files/{hash}/dl/log:
    get:
      tags:
        - Download
      summary: Загрузка лог файла
      operationId: getLogDump
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "307":
          description: Temporary Redirect
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/{hash}/dl/external:
    get:
      tags:
        - Download
      summary: Скачивание файла через внешнюю публикацию
      operationId: externalGetResource
      parameters:
        - name: hash
          in: path
          description: Хэш скачиваемого файла
          required: true
          schema:
            type: string
        - name: range
          in: header
          required: false
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
        - name: versionId
          in: query
          description: Версия скачиваемого файла. Если null - скачивается последняя
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/trashed/many/dl:
    get:
      tags:
        - Download
      summary: Скачать архивом файлы в корзине
      operationId: downloadSelectedTrashedFilesAsArchiveByAdmin
      parameters:
        - name: hashes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
      security:
        - cookieAuth: [ ]
  /storage/v2/files/trashed/many/dl/client:
    get:
      tags:
        - Download
      summary: Скачать архивом файлы в корзине через клиентское приложение
      operationId: downloadSelectedTrashedFilesAsArchiveViaClient
      parameters:
        - name: hashes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/trashed/dl:
    get:
      tags:
        - Download
      summary: Скачать файл в корзине
      operationId: getResourceByAdmin
      parameters:
        - name: hash
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
      security:
        - cookieAuth: [ ]
  /storage/v2/files/trashed/dl/client:
    get:
      tags:
        - Download
      summary: Скачать файл в корзине  через клиентское приложение
      operationId: downloadTrashedFileViaClient
      parameters:
        - name: hash
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/stream/{hash}:
    get:
      tags:
        - Download
      summary: Скачивание видеофайла
      operationId: streamVideo
      parameters:
        - name: Range
          in: header
          required: false
          schema:
            type: string
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "204":
          description: No Content
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/MonoResponseEntityByteArray"
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/preview/{type}/{hash}/{page}:
    get:
      tags:
        - Download
      summary: Получение превью для файла
      operationId: getPreviewForImage
      parameters:
        - name: hash
          in: path
          description: Хэш файла для превью
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: "Тип превью - если origin, то полное png, иначе тамбнейл"
          required: true
          schema:
            type: string
        - name: page
          in: path
          description: Страница превью
          required: true
          schema:
            type: integer
            format: int32
        - name: range
          in: header
          required: false
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "307":
          description: Temporary Redirect
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/preview/{hash}:
    get:
      tags:
        - Download
      summary: "Загрузка превью для файла, если есть - deprecated"
      operationId: preview
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "307":
          description: Temporary Redirect
      deprecated: true
  /storage/v2/files/preview/pdf/{hash}:
    get:
      tags:
        - Download
      summary: Получение PDF превью для файла
      operationId: getPreviewForImage_1
      parameters:
        - name: hash
          in: path
          description: Хэш файла для превью
          required: true
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
        - name: range
          in: header
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "307":
          description: Temporary Redirect
  /storage/v2/files/many/dl:
    get:
      tags:
        - Download
      summary: Множественное скачивание файлов
      description: "Файлы скачиваются в виде архива без указания, когда скачивание завершится"
      operationId: downloadSelectedFilesAsArchive
      parameters:
        - name: hashes
          in: query
          description: Хэши скачиваемых файлов
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
      security:
        - cookieAuth: [ ]
  /storage/v2/files/many/dl/client:
    get:
      tags:
        - Download
      summary: Множественное скачивание файлов через клиентское приложение
      description: "Файлы скачиваются в виде архива без указания, когда скачивание завершится"
      operationId: downloadSelectedFilesAsArchiveViaClient
      parameters:
        - name: hashes
          in: query
          description: Хэши скачиваемых файлов
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/files/dl:
    get:
      tags:
        - Download
      summary: Скачивание файла
      operationId: getResource
      parameters:
        - name: hash
          in: query
          description: Хэш скачиваемого файла
          required: true
          schema:
            type: string
        - name: versionId
          in: query
          description: Версия скачиваемого файла. Если null - скачивается последняя
          required: false
          schema:
            type: integer
            format: int64
        - name: customName
          in: query
          description: "Имя, с которым скачается файл"
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "416":
          description: Requested range not satisfiable
      security:
        - cookieAuth: [ ]
  /storage/v2/files/dl/client:
    get:
      tags:
        - Download
      summary: Скачивание файла через клиентское приложение
      operationId: downloadFileViaClient
      parameters:
        - name: hash
          in: query
          description: Хэш скачиваемого файла
          required: true
          schema:
            type: string
        - name: versionId
          in: query
          description: Версия скачиваемого файла. Если null - скачивается последняя
          required: false
          schema:
            type: integer
            format: int64
        - name: customName
          in: query
          description: "Имя, с которым скачается файл"
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/settings/password:
    get:
      tags:
        - User Settings
      summary: Получение настроек пароля
      operationId: getPasswordSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PasswordSettings'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/secret:
    get:
      tags:
        - User
      summary: Получение сикрета для формирование пароля для двухфакторной авторизации
      operationId: getSecretKey
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/requests/paged:
    post:
      tags:
        - User
      summary: Текущие запросы на подтверждение пользователей
      operationId: getCurrentRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperUserRequest'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/requests/count:
    get:
      tags:
        - User
      summary: Количество пользователей на подтверждение
      operationId: getCountPendingUsers
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int32
        "416":
          description: Requested range not satisfiable


  /storage/v2/api/users/password/request/paged:
    post:
      tags:
        - User
      description: "Постраничный список запросов на изменение паролей"
      operationId: listPasswordRequests
      parameters:
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PasswordChangeRequestStatus'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperPasswordChangeRequest'

  /storage/v2/api/users/password/request/approve:
    put:
      tags:
        - User
      description: "Подтверждение запроса на изменение пароля"
      operationId: approvePasswordRequest
      parameters:
        - name: requestId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PasswordChangeRequest'

  /storage/v2/api/users/password/request/reject:
    put:
      tags:
        - User
      description: "Отклонение запроса на изменение пароля"
      operationId: rejectPasswordRequest
      parameters:
        - name: requestId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PasswordChangeRequest'


  /storage/v2/api/users/countes:
    get:
      tags:
        - User
      summary: Получение общих счетчиков
      operationId: getCountersUser
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Counters'

  /storage/v2/api/users/paged:
    get:
      tags:
        - User
      summary: Получение активных пользователей
      operationId: getActiveLocalUsers
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/current/settings:
    get:
      tags:
        - User Settings
      summary: Получение настроек текущего пользователя по тегу по умолчанию
      operationId: get_2
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/users/current/settings/{tag}:
    get:
      tags:
        - User Settings
      summary: Получение настроек текущего пользователя по заданному тегу
      operationId: get_3
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JsonNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/short-link/{link}:
    get:
      tags:
        - Short Links
      summary: Получение короткой ссылки
      operationId: from
      parameters:
        - name: link
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShortLink'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/shares:
    get:
      tags:
        - Share
      summary: Список расшаренных элементов
      operationId: getAvailableShares_1
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/shares/search:
    post:
      tags:
        - Share
      summary: Поиск расшаренных файлов и папок по имени
      description: "Если хэш папки не передан, поиск производится с корня"
      operationId: searchIn
      parameters:
        - name: fromUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: parentFolderNodeHash
          in: query
          required: false
          schema:
            type: string
        - name: ignoreCase
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/shares/{templateId}/usage:
    get:
      tags:
        - Share
      summary: Проверка. используется ли этот шаблон
      operationId: isTemplateUsed
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: boolean
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates/active:
    get:
      tags:
        - Share Permission Template
      summary: Список активных шаблонов
      operationId: getActiveTemplates
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionsTemplate'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/session/me:
    get:
      tags:
        - Auth
      summary: Текущая авторизация (principal)
      operationId: me
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  name:
                    type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/session/logout:
    get:
      tags:
        - Auth
      summary: Завершение своей сессии
      operationId: logout
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/session/current:
    get:
      tags:
        - Auth
      summary: Текущий пользователь
      operationId: currentUser
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/registration/settings:
    get:
      tags:
        - User Registration
      summary: Получение настроек отображения форм регистрации и восстановления пароля
      operationId: getSettings
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserRegistrationSettingsResultDto'
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/onlyoffice/file/{hash}:
    get:
      tags:
        - OnlyOffice
      summary: Получить файл
      operationId: getFile
      parameters:
        - name: hash
          in: path
          description: Хэш файла
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: binary
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/onlyoffice/file/generate-index:
    get:
      tags:
        - OnlyOffice
      summary: Генерация index.html для мобильного телефона
      operationId: generateIndexHtmlForMobile
      parameters:
        - name: hostName
          in: query
          description: хост
          required: true
          schema:
            type: string
        - name: entityHash
          in: query
          description: Хеш
          required: true
          schema:
            type: string
        - name: access_token
          in: query
          description: Токен доступа
          required: true
          schema:
            type: string
        - name: extension
          in: query
          description: Расширение
          required: true
          schema:
            type: string
        - name: displayName
          in: query
          description: Отображаемое имя
          required: true
          schema:
            type: string
        - name: versionHash
          in: query
          description: Хеш версии
          required: true
          schema:
            type: string
        - name: canDownload
          in: query
          description: Можно скачивать
          required: true
          schema:
            type: boolean
        - name: isEditDocumentEnable
          in: query
          description: Можно изменять
          required: true
          schema:
            type: string
        - name: userDisplayName
          in: query
          description: Пользовательское отображаемое имя
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: Id пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: locale
          in: query
          description: Язык
          required: true
          schema:
            type: string
        - name: fileType
          in: query
          description: Тип файла
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/metrics/files/trashed:
    get:
      tags:
        - Test Metrics
      summary: "Возвращает количество всех файлов, находящихся в корзине"
      operationId: getTotalFilesTrashed
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int64
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/metrics/files/regular:
    get:
      tags:
        - Test Metrics
      summary: "Возвращает количество всех файлов - активных, замороженных, заблокированных, находящихся в корзине"
      operationId: getTotalFilesCount
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int64
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/metrics/files/pending:
    get:
      tags:
        - Test Metrics
      summary: "Возвращает количество всех файлов, находящихся в очереди публикации"
      operationId: getTotalFilePending
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int64
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/logo/{id}:
    get:
      tags:
        - Logo
      summary: Поток байтов логотипа по id
      operationId: setImage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/logo/list:
    get:
      tags:
        - Logo
      summary: Список файлов из таблицы logo
      operationId: getImage
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Logo'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/logo/default:
    get:
      tags:
        - Logo
      summary: Получение последнего загруженного логотипа по умолчанию из базы данных
      operationId: getLogoDefault
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/logo/default-static:
    get:
      tags:
        - Logo
      summary: Получение логотипа по умолчанию из папки
      operationId: getImageWithMediaType
      parameters:
        - name: logoName
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/log/files/{hash}/logs:
    get:
      tags:
        - Reports
      summary: События элемента
      operationId: getFileTreeNodeEvents
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNodeEvent'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/licenses:
    get:
      tags:
        - License
      summary: Получение параметров лицензии
      operationId: getLicense
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Лицензия не найдена
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/licenses/verify:
    get:
      tags:
        - License
      summary: Проверка лицензии
      operationId: verify
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: boolean
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash/files:
    get:
      tags:
        - Hash File
      summary: Получение всех файлов хэшей
      operationId: findAll_2
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperHashFileDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/{hash}:
    get:
      tags:
        - Folder
      summary: Получение элемента
      operationId: getNode
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/{hash}/shares:
    get:
      tags:
        - Folder
      summary: Информация о предоставлении файла или папки другим пользователям
      operationId: getNodeShares
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNodeShareInfo'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/{hash}/password:
    get:
      tags:
        - Folder
      summary: Получение пароля от файла
      operationId: getCredential
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/search:
    post:
      tags:
        - Folder
      summary: Поиск файлов и папок по имени
      description: "Если хэш папки не передан, поиск производится с корня"
      operationId: searchInFolder
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: ignoreCase
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: parentFolderNodeHash
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/search/tags:
    get:
      tags:
        - Folder
      summary: Поиск тэгов для файла или папки по подстроке
      operationId: searchFileTreeNodeTags
      parameters:
        - name: substring
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNodeTag'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/all-content:
    get:
      tags:
        - Folder
      summary: Личнае и пошаренные файлы пользователя для синхронизации на клиенте
      operationId: getRootFolderContent_2
      parameters:
        - name: hash
          in: query
          required: false
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserFilesContentDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/{hash}/preview:
    get:
      tags:
        - File
      operationId: getPreview
      parameters:
        - name: hash
          in: path
          description: "Хэш файла, для которого нужно получить превью"
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FilePreviewDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/share/name/{name}:
    get:
      tags:
        - File
      summary: Получение текущей версии файла по имени ноды
      operationId: findBySharedNodeName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StoredFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/files/available/paged:
    get:
      tags:
        - File
      summary: "Файлы, доступные для скачивания данным пользователем"
      operationId: getAvailableFiles
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperStoredFile'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/foldersv2/pinned:
    post:
      tags:
        - Folder
      summary: Список закрепленных документов пользователя
      description: >
        Список из файлов и папок которые пользователь закрепил на главной 
        панели раздела "Мои файлы"
      operationId: getPinnedContent
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/dash/steps/week:
    get:
      tags:
        - Dashboard
      summary: данные для графиков с аггрегацией по неделям
      operationId: getStatRecordsByWeek
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: till
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatRecord'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/steps/month:
    get:
      tags:
        - Dashboard
      summary: данные для графиков с аггрегацией по месяцам
      operationId: getStatRecordsByMonth
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: till
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatRecord'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/steps/day:
    get:
      tags:
        - Dashboard
      summary: данные для графиков с аггрегацией по дням
      operationId: getStatRecordsByDay
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: till
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatRecord'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByUploads/{groupId}/{period}:
    get:
      tags:
        - Dashboard
      summary: 25 (ИТ) Топ пользователей по числу загруженых файлов в группе
      operationId: getTopUsersByUploadsInGroup
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: period
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserUploads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByUploads/week:
    get:
      tags:
        - Dashboard
      summary: 17 (ИТ) Топ пользователей по числу закачиваний(на сервер) файлов за неделю
      operationId: getTopUsersByUploadsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserUploads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByUploads/month:
    get:
      tags:
        - Dashboard
      summary: 17 (ИТ) Топ пользователей по числу закачиваний(на сервер) файлов за месяц
      operationId: getTopUsersByUploadsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserUploads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByUploads/day:
    get:
      tags:
        - Dashboard
      summary: 17 (ИТ) Топ пользователей по числу закачиваний(на сервер) файлов за день
      operationId: getTopUsersByUpoadsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserUploads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersBySents/{groupId}/{period}:
    get:
      tags:
        - Dashboard
      summary: 26 (ИТ) Топ пользователей по числу пересылки контрагентам файлов в группе
      operationId: getTopUsersBySentsInGroup
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: period
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserSents'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersBySents/week:
    get:
      tags:
        - Dashboard
      summary: 18 (ИТ) Топ пользователей по числу пересылки контрагентам файлов за неделю
      operationId: getTopUsersBySentsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserSents'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersBySents/month:
    get:
      tags:
        - Dashboard
      summary: 18 (ИТ) Топ пользователей по числу пересылки контрагентам файлов за месяц
      operationId: getTopUsersBySentsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserSents'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersBySents/day:
    get:
      tags:
        - Dashboard
      summary: 18 (ИТ) Топ пользователей по числу пересылки контрагентам файлов за день
      operationId: getTopUsersBySentsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserSents'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByDownloads/{groupId}/{period}:
    get:
      tags:
        - Dashboard
      summary: 24 (ИТ) Топ пользователей по числу скачиваний файлов в группе
      operationId: getTopUsersDownloadsInGroup
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: period
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserDownloads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByDownloads/week:
    get:
      tags:
        - Dashboard
      summary: 16 (ИТ) Топ пользователей по числу скачиваний файлов за неделю
      operationId: getTopUsersByDownloadsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserDownloads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByDownloads/month:
    get:
      tags:
        - Dashboard
      summary: 16 (ИТ) Топ пользователей по числу скачиваний файлов за месяц
      operationId: getTopUsersByDownloadsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserDownloads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/usersByDownloads/day:
    get:
      tags:
        - Dashboard
      summary: 16 (ИТ) Топ пользователей по числу скачиваний файлов за день
      operationId: getTopUsersByDownloadsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserDownloads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedFiles/week:
    get:
      tags:
        - Dashboard
      summary: 15 (ИТ) Топ расшаренных файлов за неделю
      operationId: getTopSharedFilesWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedFiles/month:
    get:
      tags:
        - Dashboard
      summary: 15 (ИТ) Топ расшаренных файлов за месяц
      operationId: getTopSharedFilesMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedFiles/day:
    get:
      tags:
        - Dashboard
      summary: 15 (ИТ) Топ расшаренных файлов за день
      operationId: getTopSharedFilesDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedCounterpartsFiles/week:
    get:
      tags:
        - Dashboard
      summary: 23 (ИТ) Топ расшаренных файлов за неделю
      operationId: getTopSharedCounterpartsFilesWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedCounterpartsFiles/month:
    get:
      tags:
        - Dashboard
      summary: 23 (ИТ) Топ расшаренных файлов за месяц
      operationId: getTopSharedCounterpartsFilesMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/sharedCounterpartsFiles/day:
    get:
      tags:
        - Dashboard
      summary: 23 (ИТ) Топ расшаренных файлов за день
      operationId: getTopSharedCounterpartsFilesDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopSharedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/largeFiles:
    get:
      tags:
        - Dashboard
      summary: "2 (ИТ) ТОП-5 файлов самого большого размера (сортировка) \n"
      operationId: getTopFilesBySize
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileSize'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/largeFiles/week:
    get:
      tags:
        - Dashboard
      summary: "2 (ИТ) ТОП-5 файлов самого большого размера за неделю (сортировка) \n"
      operationId: getTopFilesBySizeWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileSize'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/largeFiles/month:
    get:
      tags:
        - Dashboard
      summary: "2 (ИТ) ТОП-5 файлов самого большого размера за месяц (сортировка) \n"
      operationId: getTopFilesBySizeMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileSize'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/largeFiles/day:
    get:
      tags:
        - Dashboard
      summary: "2 (ИТ) ТОП-5 файлов самого большого размера за день (сортировка) \n"
      operationId: getTopFilesBySizeDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileSize'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/groupsByUploads/week:
    get:
      tags:
        - Dashboard
      summary: 21 (ИТ) Топ групп по числу скачиваний файлов за неделю - deprecated
      operationId: getTopGroupByUploadsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupUploads'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsByUploads/month:
    get:
      tags:
        - Dashboard
      summary: 21 (ИТ) Топ групп по числу скачиваний файлов за месяц
      operationId: getTopGroupByUploadsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupUploads'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/groupsByUploads/day:
    get:
      tags:
        - Dashboard
      summary: 21 (ИТ) Топ групп по числу скачиваний файлов за день - deprecated
      operationId: getTopGroupByUploadsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupUploads'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsBySents/week:
    get:
      tags:
        - Dashboard
      summary: 19 (ИТ) Топ групп по числу пересылки контрагентам файлов за неделю - deprecated
      operationId: getTopGroupBySentsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupSents'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsBySents/month:
    get:
      tags:
        - Dashboard
      summary: 19 (ИТ) Топ групп по числу пересылки контрагентам файлов за месяц - deprecated
      operationId: getTopGroupBySentsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupSents'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsBySents/day:
    get:
      tags:
        - Dashboard
      summary: 19 (ИТ) Топ групп по числу пересылки контрагентам файлов за день - deprecated
      operationId: getTopGroupBySentsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupSents'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsByDownloads/week:
    get:
      tags:
        - Dashboard
      summary: 20 (ИТ) Топ групп по числу скачиваний файлов за неделю - deprecated
      operationId: getTopGroupByDownloadsWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupDownloads'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsByDownloads/month:
    get:
      tags:
        - Dashboard
      summary: 20 (ИТ) Топ групп по числу скачиваний файлов за месяц - deprecated
      operationId: getTopGroupByDownloadsMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupDownloads'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/groupsByDownloads/day:
    get:
      tags:
        - Dashboard
      summary: 20 (ИТ) Топ групп по числу скачиваний файлов за день - deprecated
      operationId: getTopGroupByDownloadsDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopGroupDownloads'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/dash/it/top/{count}/downloadedFiles/week:
    get:
      tags:
        - Dashboard
      summary: 14 (ИТ) Топ скачиваемых файлов за неделю
      operationId: getTopDownloadedFilesWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/downloadedFiles/month:
    get:
      tags:
        - Dashboard
      summary: 14 (ИТ) Топ скачиваемых файлов за месяц
      operationId: getTopDownloadedFilesMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/downloadedFiles/day:
    get:
      tags:
        - Dashboard
      summary: 14 (ИТ) Топ скачиваемых файлов за день
      operationId: getTopDownloadedFilesDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/counterpartsDownloadedFiles/week:
    get:
      tags:
        - Dashboard
      summary: 22 (ИТ) Топ скачиваемых контрагентом файлов за неделю
      operationId: getTopCounterpartsDownloadedFilesWeek
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/counterpartsDownloadedFiles/month:
    get:
      tags:
        - Dashboard
      summary: 22 (ИТ) Топ скачиваемых контрагентом файлов за месяц
      operationId: getTopCounterpartsDownloadedFilesMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/counterpartsDownloadedFiles/day:
    get:
      tags:
        - Dashboard
      summary: 22 (ИТ) Топ скачиваемых контрагентом файлов за день
      operationId: getTopCounterpartsDownloadedFilesDay
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDownloadedFile'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/awaitingVerification:
    get:
      tags:
        - Dashboard
      summary: 12 (ИТ) ТОП-10 файлов ожидающих утверждения
      operationId: getTopAwaitingVerification
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileItem'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/top/{count}/activeUsers:
    get:
      tags:
        - Dashboard
      summary: 1 (ИТ) ТОП-5 самых активных пользователей (сортировка по количеству заходов на портал)
      operationId: getTopUsersByLogins
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserLogIns'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/systemInfo:
    get:
      tags:
        - Dashboard
      summary: 9 (ИТ) Средняя загрузка оперативной памяти и процессора
      operationId: getSystemInfo
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/dash/it/storageInfo:
    get:
      tags:
        - Dashboard
      summary: 8 (ИТ) Количество свободного места в хранилище
      operationId: getStorageInfo
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StorageInfo'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/dash/it/storageDynamics:
    get:
      tags:
        - Dashboard
      summary: 10 (ИТ) Динамика роста хранилища в ГБ в День/неделю месяц
      operationId: getStorageDynamics
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StorageDynamics'
        "416":
          description: Requested range not satisfiable

  /storage/v2/api/dash/it/next/{count}/expiringFiles:
    get:
      tags:
        - Dashboard
      summary: "7 (ИТ) Файлы, которые будут скоро уничтожены"
      operationId: getNextDeletedFiles
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileItem'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/last/{count}/uploadedFiles:
    get:
      tags:
        - Dashboard
      summary: 6 (ИТ) Последние загруженные файлы
      operationId: getLastStoredFiles
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileItem'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/it/last/{count}/fileVerificationTimes:
    get:
      tags:
        - Dashboard
      summary: 13 (ИТ) Последние 5 сроков ожидания пользователем утверждения файлов
      operationId: getLastFileVerificationTimes
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileVerificationTime'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/is/top/{reasonsCount}/declinedReasonsByLast/{daysCount}/days:
    get:
      tags:
        - Dashboard
      summary: "4 (ИБ) ТОП - 5 причин запрещения файлов по дням (вирусы, вручную, настройки)"
      operationId: getTopDeclinedReasonsByDay
      parameters:
        - name: reasonsCount
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: daysCount
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopDeclineReasonByDay'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/is/top/{count}/userWithMostDeclinedFiles:
    get:
      tags:
        - Dashboard
      summary: |
        5 (ИБ) ТОП – 5 пользователей с наибольшим количеством запрещенных файлов
      operationId: getTopUsersByDeclines
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUserDeclines'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/is/top/{count}/declinedFilesByMonth:
    get:
      tags:
        - Dashboard
      summary: 11 (ИБ) ТОП - 20 запрещенных файлов за месяц
      operationId: getTopDeclinedByMonth
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileItem'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/is/last/{count}/declinedFiles:
    get:
      tags:
        - Dashboard
      summary: 3 (ИБ) Последние запрещенные файлы
      operationId: getLastDeclinedFiles
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFileItem'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/filesize/group:
    get:
      tags:
        - Dashboard
      summary: заполненность хранилища по группам
      operationId: getStoredFilesSizeForGroups
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StoredFilesSizeWrapperStoredFilesSizeForGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/dash/filesize/group/{groupId}:
    get:
      tags:
        - Dashboard
      summary: заполненность хранилища по пользователям(для конкретной группы)
      operationId: getStoredFilesSizeForUsers
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StoredFilesSizeWrapperStoredFilesSizeForUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/requests/{id}/files:
    post:
      tags:
        - Counterpart File Request
      summary: Список всех запросов на загрузку файлов контрагентом по request id
      operationId: getAllCounterpartRequestsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/paged:
    get:
      tags:
        - Counterpart
      summary: Список контрагентов - deprecated
      operationId: getApprovedCounterparts_1
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/counterparts/global/search:
    get:
      tags:
        - Counterpart
      summary: Глобальный поиск по почте
      description: Работает если введены 2 символа после @
      operationId: getAllApprovedCounterpartsWithLongEmail
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
        - name: emailSubstring
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/email-occupied:
    get:
      tags:
        - Counterpart Request
      summary: Существет ли данный Email среди доступных пользователю контрагентов или локальных пользователей
      operationId: isExistCounterpartRequestOrRegularUserWithThisEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EmailOccupationResultDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/custom-field-name:
    get:
      tags:
        - Counterpart Settings
      summary: Получение названия поля для дополнительной инфомарции
      operationId: getCustomInfoFieldName
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CounterpartCustomInfoFieldNameDto'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/allSearch:
    get:
      tags:
        - Counterpart
      summary: Поиск среди всех контрагентов по email - deprecated
      operationId: getAllApprovedCounterparts
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
        - name: emailSubstring
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperRegularUser'
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/checks/scenarios/share/check/{domain}:
    get:
      tags:
        - Check Scenario
      summary: "Проверка, существуют ли выбираемые сценарии для данного пользователя "
      operationId: checkForAvailableScenarios
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckScenario'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/routines:
    get:
      tags:
        - Check Routine
      summary: Получение доступных автоматизированных проверок
      operationId: findAll_4
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckRoutine'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/routines/scenarioType/{scenarioType}:
    get:
      tags:
        - Check Routine
      summary: Получение доступных автоматизированных проверок по типу сценария
      operationId: getRoutinesForScenario
      parameters:
        - name: scenarioType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ScenarioType'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckRoutine'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/instances/share/scenarios/inProgress/{sharedNodeId}/paged:
    post:
      tags:
        - Check Scenario Instance Share
      summary: Получение проверок для данного пользователя по sharedNode
      operationId: getScenariosInProgressForCurrentUser
      parameters:
        - name: sharedNodeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCheckScenarioInstanceShare'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/instances/scenarios/inProgress/{type}/paged:
    post:
      tags:
        - Check Scenario Instance
      summary: Получение определённых проверок
      operationId: getScenariosInProgressForCurrentUser_1
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ScenarioType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperCheckScenarioInstance_Embedded'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/checks/instances/scenarios/inProgress/count:
    get:
      tags:
        - Check Scenario Instance
      summary: Количество доступных суммарно проверок
      operationId: getAvailableCount
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/captcha/token:
    get:
      tags:
        - Captcha
      summary: Получение токена для капчи
      operationId: getCaptchaToken
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaptchaTokenDto'
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/captcha/image/{token}:
    get:
      tags:
        - Captcha
      summary: Получение изображения капчи
      operationId: getCaptchaImage
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        "416":
          description: Requested range not satisfiable
      security: []
  /storage/v2/api/auth/qr:
    get:
      tags:
        - Two Factor Authentication
      summary: Полчение QR-кода
      operationId: downloadQrCode_1
      parameters:
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/version:
    get:
      tags:
        - Version
      summary: Версия приложения
      operationId: getVersion
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/template/paged:
    get:
      tags:
        - Template
      summary: Получение шаблонов
      operationId: getTemplates_1
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/templates/paged:
    post:
      tags:
        - Template
      summary: Получение шаблонов
      operationId: getTemplates_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/ErrorMessageDto'
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperTemplate'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/template:
    get:
      tags:
        - Template
      summary: Получение шаблонов
      operationId: getTemplates_3
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/templates:
    get:
      tags:
        - Template
      summary: Получение шаблонов
      operationId: getTemplates_4
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/mail/status:
    get:
      tags:
        - Mail Check
      summary: Получение текущего статуса интеграции с почтой
      operationId: getMailStatus
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusShortInfo'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/sync/status:
    get:
      tags:
        - Ldap Settings
      summary: Статус последней cинхронизации данных из каталога
      operationId: getSyncStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SyncStatus'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/retrievedGroups:
    get:
      tags:
        - Ldap Settings
      summary: "Список групп, полученных из данного каталога"
      operationId: getLdapRetrievedGroups
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/retrievedGroups/paged:
    get:
      tags:
        - Ldap Settings
      summary: "Список групп, полученных из данного каталога"
      operationId: getLdapGroupsPaged
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/{id}/groups:
    get:
      tags:
        - Ldap Settings
      summary: Получение всех групп каталога
      operationId: getLdapGroups
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/ldap/sources/paged:
    get:
      tags:
        - Ldap Settings
      summary: Получение текущих настроек каталогов с пагинацией
      operationId: getLdapSources_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperIntegrationStatus'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/logs/archive:
    get:
      tags:
        - System Logs
      summary: Архив со служебными логами
      operationId: getSystemLogs
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
      deprecated: true
  /storage/v2/api/admin/groups/ldap/paged:
    get:
      tags:
        - Admin Group
      summary: Список групп из всех каталогов
      operationId: getLdapGroupsPaged_1
      parameters:
        - name: pageRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageRequest'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperGroup'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/authorities/user:
    get:
      tags:
        - Authority
      summary: Список прав доступа пользователя
      operationId: getUserAuthorities
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authority'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/authorities:
    get:
      tags:
        - Authority
      summary: Список прав доступа администратора
      operationId: getAuthorities
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authority'
        "416":
          description: Requested range not satisfiable
  /storage/v2/admin-files/{hash}/dl:
    get:
      tags:
        - Download
      summary: Скачивание файла администратором
      operationId: getStoredFile
      parameters:
        - name: hash
          in: path
          description: Хэш скачиваемого файла
          required: true
          schema:
            type: string
        - name: range
          in: header
          required: false
          schema:
            type: string
        - name: user-agent
          in: header
          required: false
          schema:
            type: string
            default: unknown
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/upload/delete:
    delete:
      tags:
        - Resumable File Upload
      summary: Удаляет временные файлы
      operationId: deleteUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckResumableUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/shares/unshare:
    delete:
      tags:
        - Share
      summary: Удаление владельца папки
      operationId: unShareFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnshareNodeRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileTreeNode'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/shares/unshare/public/{hash}:
    delete:
      tags:
        - Share
      summary: Удалить публичную публикацю файла
      operationId: publicUnShareFile
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/share/permissions/templates/{id}:
    delete:
      tags:
        - Share Permission Template
      summary: Удаление шаблона
      operationId: deleteTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash/{id}:
    delete:
      tags:
        - Hash
      summary: Удаление хэша
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/hash/files/{id}:
    delete:
      tags:
        - Hash File
      summary: Удаление файла хэшей по его id
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "202":
          description: Accepted
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/delete:
    delete:
      tags:
        - Folder
      summary: Множественное удаление FileTreeNode с содержимым
      description: "В случае пользователя принимает хэши не FileTreeNode, а FileTreeNode, т.е. результат от запроса /trashА в случае контрагента принимает хэши FileTreeNode, которая имеет состояние uploaded или declined"
      operationId: delete_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteManyFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/delete/force:
    delete:
      tags:
        - Folder
      summary: Множественное удаление FileTreeNode с содержимым форсированно
      description: "В случае пользователя принимает хэши не FileTreeNode, а FileTreeNode, т.е. результат от запроса /trashА в случае контрагента принимает хэши FileTreeNode, которая имеет состояние uploaded или declined"
      operationId: deleteForce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteManyFilesRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/foldersv2/request/public:
    post:
      tags:
        - Folder
      summary: Создание запроса на загрузку файлов по публичной ссылке на папку
      operationId: getPublicUploadLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PublicUploadRequestInfo'
  /storage/v2/api/foldersv2/request/public/{requestHash}:
    delete:
      tags:
        - Folder
      summary: Удаление запроса на загрузку файлов по публичной ссылке на папку
      operationId: closePublicUploadRequest
      parameters:
        - name: requestHash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: OK
  /storage/v2/api/counterparts/requests/files:
    delete:
      tags:
        - Counterpart File Request
      summary: Множественное удаление запросов на загрузку файлов контрагентом
      operationId: removeRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartCloseUploadRequestsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
  /storage/v2/api/counterparts/counterpart_requests/files:
    delete:
      tags:
        - Counterpart File Request
      summary: Множественное удаление запросов на загрузку файлов самим контрагентом
      operationId: closeRequestsByCounterpart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartCloseUploadRequestsDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/counterparts/counterpart_requests/file/{hash}:
    delete:
      tags:
        - Counterpart File Request
      summary: Закрытие запроса на загрузку файлов самим контрагентом
      operationId: closeRequestByCounterpart
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
  /storage/v2/api/counterparts/active_requests/file/{hash}:
    delete:
      tags:
        - Counterpart File Request
      summary: Закрытие запроса на загрузку файлов контрагентом
      operationId: closeRequest
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "416":
          description: Requested range not satisfiable
        "202":
          description: Accepted
  /storage/v2/api/admin/settings/ldap/desynchronize:
    delete:
      tags:
        - Ldap Settings
      summary: Десинхронизация группы и ее пользователей
      operationId: desynchronizeLdapGroup
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/admin/settings/icap/{id}:
    delete:
      tags:
        - Icap Check
      summary: Удаление настройки ICAP
      operationId: deleteIcapSettings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /storage/v2/api/public/request/info/{hash}:
    get:
      tags:
        - Public Upload Controller
      summary: "Получение информации по запросу на загрузку файлов по публичной ссылке"
      operationId: getPublicUploadRequest
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PublicUploadRequestInfo'
      security: []
  /storage/v2/api/public/check/{hash}/{requesterId}:
    post:
      tags:
        - Public Upload Controller
      summary: "Проверка возможности загрузки файла"
      operationId: checkIfCanPublicUpload
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadCheckRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FileUploadCheckResponseDto'
      security: []
  /storage/v2/api/public/upload/check/{requesterId}:
    get:
      tags:
        - Public Upload Controller
      summary: "Получение информации по запросу на загрузку файлов по публичной ссылке"
      operationId: checkPublicUpload
      parameters:
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: query
          required: true
          schema:
            type: string
        - name: parentHash
          in: query
          required: true
          schema:
            type: string
        - name: lastPartNumber
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CheckResumableUploadResponseDto'
      security: []
  /storage/v2/api/public/upload/create/{requesterId}:
    post:
      tags:
        - Public Upload Controller
      summary: "Создание загрузки файлов по публичной ссылке"
      operationId: createPublicUpload
      parameters:
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResumableUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
      security: []
  /storage/v2/api/public/upload/patch/{requesterId}:
    patch:
      tags:
        - Public Upload Controller
      summary: "Загрузка чанков файлов по публичной ссылке"
      operationId: updatePublicUpload
      parameters:
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: header
          required: true
          schema:
            type: string
        - name: partNumber
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: uploadOffset
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: uploadLength
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: fileSize
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: parentHash
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UpdateResumableUploadResponseDto'
      security: []
  /storage/v2/api/public/upload/complete/{requesterId}:
    post:
      tags:
        - Public Upload Controller
      summary: "Объединение чанков при загрузке файлов по публичной ссылке"
      operationId: completePublicUpload
      parameters:
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteResumableUploadRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileTreeNode'
      security: []
  /storage/v2/api/public/transfer/{folderHash}/{requesterId}:
    post:
      tags:
        - Public Upload Controller
      summary: "Передача файлов, загруженных по публичной ссылке"
      operationId: transferPublicUploadedFiles
      parameters:
        - name: folderHash
          in: path
          required: true
          schema:
            type: string
        - name: requesterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
      security: []

  /storage/v2/api/users/interconnection/settings:
    get:
      tags:
        - User Interconnection Setting
      description: "Получение параметров интеграции контуров"
      operationId: getUserInterconnectionSettings
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserInterconnectionSettings'
      security: []

  /storage/v2/api/admin/settings/interconnection:
    get:
      tags:
        - Interconnection Setting
      description: "Получение параметров интеграции контуров"
      operationId: getInterconnectionSettings
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusInterconnectionSettingsConnectionResult'

    post:
      tags:
        - Interconnection Setting
      description: "Сохранение параметров интеграции контуров"
      operationId: setInterconnectionSettings
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/InterconnectionSettings'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusInterconnectionSettingsConnectionResult'

  /storage/v2/api/admin/settings/interconnection/connect:
    post:
      tags:
        - Interconnection Setting
      description: "Проверка параметров интеграции контуров"
      operationId: checkInterconnectionConnect
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/InterconnectionSettings'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IntegrationStatusInterconnectionSettingsConnectionResult'

  /storage/v2/api/admin/settings/interconnection/token:
    get:
      tags:
        - Interconnection Setting
      description: "Создание токена безопасности интеграции контуров"
      operationId: getToken
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string

  /storage/v2/api/admin/interconnection/subdivision/connect:
    get:
      tags:
        - Interconnection Slave
      description: "Проверка соединения"
      operationId: checkConnection
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConnectionResult'
      security: []

  /storage/v2/api/admin/interconnection/subdivision/user/search:
    get:
      tags:
        - Interconnection Slave
      description: "Поиск пользователя"
      operationId: getExternalUsers
      parameters:
        - name: value
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncUser'
      security: []

  /storage/v2/api/admin/interconnection/subdivision/user/status:
    post:
      tags:
        - Interconnection Slave
      description: "Обновление статуса синхронизации пользователя"
      operationId: updateSyncStatus
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserLink'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
      security: []

  /storage/v2/api/admin/interconnection/subdivision/request/status:
    post:
      tags:
        - Interconnection Slave
      description: "Статус запросов на синхронизацию файлов"
      operationId: getFileSyncRequestsStatuses
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileSyncRequestStatusDto'
      security: []

  /storage/v2/api/admin/interconnection/subdivision/request/status/update:
    post:
      tags:
        - Interconnection Slave
      description: "Обновление статуса запроса на синхронизацию файла"
      operationId: updateFileSyncRequestStatus
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/FileSyncRequestStatusDto'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
      security: []

  /storage/v2/api/admin/interconnection/sync/user/search:
    get:
      tags:
        - User Link
      description: "Поиск пользователя на внешнем контуре"
      operationId: findUsers
      parameters:
        - name: value
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncUser'

  /storage/v2/api/admin/interconnection/sync/user/link:
    post:
      tags:
        - User Link
      description: "Ручная линковка пользователя"
      operationId: linkUser
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserLink'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK

  /storage/v2/api/users/interconnection/sync/files:
    post:
      tags:
        - File Sync Request
      description: "Постраничное получение всех запросов на синхронизацию файлов"
      operationId: getRequests
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperFileSyncRequest'

  /storage/v2/api/users/interconnection/sync/files/delete:
    post:
      tags:
        - File Sync Request
      description: "Удаление запросов на синхронизацию файлов"
      operationId: deleteRequests
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK

  /storage/v2/api/users/interconnection/sync/files/create:
    post:
      tags:
        - File Sync Request
      description: "Создание запросов на синхронизацию файлов"
      operationId: createRequest
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK

  /storage/v2/api/marks:
    post:
      tags:
        - Marks
      description: "Добавление метки"
      operationId: createMark
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Mark'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Mark'
    put:
      tags:
        - Marks
      description: "Изменение  метки"
      operationId: editMark
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Mark'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Mark'
    delete:
      tags:
        - Marks
      description: "Удаление меток по id"
      operationId: deleteMark
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
    get:
      tags:
        - Marks
      description: "Получение меток по id"
      operationId: getOneMark
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mark'


  /storage/v2/api/marks/paged:
    post:
      tags:
        - Marks
      description: "Получение списка меток с пагинацией"
      operationId: getListMark
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperMark'
  /storage/v2/api/marks/exists:
    get:
      tags:
        - Marks
      description: "Наличие меток"
      operationId: markExists
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: boolean

  /storage/v2/api/marks/users:
    post:
      tags:
        - Marks
      description: "Добавление меток пользователям"
      operationId: setMarksUser
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: markId
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
              default: 0
        - name: comment
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CreateMarkRegularUser'

  /storage/v2/api/marks/groups:
    post:
      tags:
        - Marks
      description: "Добавление меток группам пользователей"
      operationId: setMarksGroup
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: markId
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
              default: 0
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'

  /storage/v2/api/marks/files:
    post:
      tags:
        - Marks
      description: "Добавление меток к текущему файлу"
      operationId: setFile
      parameters:
        - name: fileId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: markId
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
              default: 0
        - name: comment
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CreateMarkFileTreeNode'

  /storage/v2/api/marks/exchange/counterparts:
    post:
      tags:
        - Marks
      description: "Обновление метки у контрагента"
      operationId: updateExchangeCounterparts
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mark'
    get:
      tags:
        - Marks
      description: "Получение списка меток для эксченж контрагентов"
      operationId: getExchangeCounterpartsListMark
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mark'

  /storage/v2/api/marks/exchange/files:
    post:
      tags:
        - Marks
      description: "Обновление метки у файла"
      operationId: updateExchangeFiles
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mark'
    get:
      tags:
        - Marks
      description: "Получение списка меток для эксченж файлов"
      operationId: getExchangeFilesListMark
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mark'

  /storage/v2/api/marks/counterpart/groups:
    post:
      tags:
        - Marks
      description: "Добавление меток группам контрагентов"
      operationId: setCounterpartGroup
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: markId
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
              default: 0
        - name: comment
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CreateMarkCounterpartGroup'

  /storage/v2/api/marks/request:
    get:
      tags:
        - Mark Request
      description: "Получение меток по id"
      operationId: getMarkRequests
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarkRequest'

  /storage/v2/api/marks/request/count:
    get:
      tags:
        - Mark Request
      description: "Количество запросов"
      operationId: count
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int32

  /storage/v2/api/marks/request/paged:
    post:
      tags:
        - Mark Request
      description: "Постраничный список запросов"
      operationId: list
      parameters:
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/MarkRequestStatus'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageWrapperMarkRequest'

  /storage/v2/api/marks/request/approve:
    put:
      tags:
        - Mark Request
      description: "Подтверждение запроса"
      operationId: approve
      parameters:
        - name: markRequestId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: commentAdmin
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MarkRequest'

  /storage/v2/api/marks/request/reject:
    put:
      tags:
        - Mark Request
      description: "Отклонение запроса"
      operationId: reject
      parameters:
        - name: markRequestId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: commentAdmin
          in: query
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MarkRequest'

  /it/top/{count}/largeFiles/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: "2 (ИТ) ТОП-5 файлов самого большого размера (сортировка) \n"
      operationId: getTopFilesBySize_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/top/{count}/awaitingVerification/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 12 (ИТ) ТОП-10 файлов ожидающих утверждения
      operationId: getTopAwaitingVerification_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/top/{count}/activeUsers/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 1 (ИТ) ТОП-5 самых активных пользователей (сортировка по количеству заходов на портал)
      operationId: getTopUsersByLogins_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/systemInfo/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 9 (ИТ) Средняя загрузка оперативной памяти и процессора
      operationId: getSystemInfo_1
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/storageInfo/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 8 (ИТ) Количество свободного места в хранилище
      operationId: getStorageInfo_1
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/storageDynamics/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 10 (ИТ) Динамика роста хранилища в ГБ в День/неделю месяц
      operationId: getStorageDynamics_1
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/next/{count}/expiringFiles/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: "7 (ИТ) Файлы, которые будут скоро уничтожены"
      operationId: getNextDeletedFiles_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/last/{count}/uploadedFiles/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 6 (ИТ) Последние загруженные файлы
      operationId: getLastStoredFiles_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /it/last/{count}/fileVerificationTimes/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 13 (ИТ) Последние 5 сроков ожидания пользователем утверждения файлов
      operationId: getLastFileVerificationTimes_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /is/top/{reasonsCount}/declinedReasonsByLast/{daysCount}/days/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: "4 (ИБ) ТОП - 5 причин запрещения файлов по дням (вирусы, вручную, настройки)"
      operationId: getTopDeclinedReasonsByDay_1
      parameters:
        - name: reasonsCount
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: daysCount
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /is/top/{count}/userWithMostDeclinedFiles/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: |
        5 (ИБ) ТОП – 5 пользователей с наибольшим количеством запрещенных файлов
      operationId: getTopUsersByDeclines_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /is/top/{count}/declinedFilesByMonth/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 11 (ИБ) ТОП - 20 запрещенных файлов за месяц
      operationId: getTopDeclinedByMonth_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable
  /is/last/{count}/declinedFiles/{type}/{dest}:
    get:
      tags:
        - Dashboard Export
      description: 3 (ИБ) Последние запрещенные файлы
      operationId: getLastDeclinedFiles_1
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - pdf
        - name: dest
          in: path
          required: true
          schema:
            type: string
            enum:
              - download
              - email
      responses:
        "401":
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessageDto'
                  - type: string
        "403":
          description: Forbidden
          content:
            'application/json':
              schema:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
        "416":
          description: Requested range not satisfiable

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: oauth2
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token
  schemas:
    ErrorMessageDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - QUOTA
            - CONTAINS_FILE
          nullable: true
        errorMessage:
          type: string
        errorData:
          type: array
          items:
            type: string
    CheckResumableUploadResponseDto:
      type: object
      properties:
        offsets:
          type: array
          items:
            $ref: '#/components/schemas/OffsetAndPartNumberDto'
    OffsetAndPartNumberDto:
      type: object
      properties:
        partNumber:
          type: integer
          format: int64
          nullable: true
        offset:
          type: integer
          format: int64
          nullable: true
    PermissionsTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        createFiles:
          type: boolean
          nullable: true
        createFolders:
          type: boolean
          nullable: true
        modifyFolders:
          type: boolean
          nullable: true
        modifyFiles:
          type: boolean
          nullable: true
        previewFiles:
          type: boolean
          nullable: true
        downloadFiles:
          type: boolean
          nullable: true
        editFiles:
          type: boolean
          nullable: true
        editFolders:
          type: boolean
          nullable: true
        administer:
          type: boolean
          nullable: true
        enabled:
          type: boolean
          nullable: true
        builtin:
          type: boolean
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        readOnly:
          type: boolean
          nullable: true
        permissionsMap:
          type: object
          additionalProperties:
            type: boolean
        disable:
          type: boolean
          nullable: true
        createFilesAndEnabled:
          type: boolean
          nullable: true
        modifyFoldersAndEnable:
          type: boolean
          nullable: true
        createFoldersAndEnable:
          type: boolean
          nullable: true
        modifyFilesAndEnable:
          type: boolean
          nullable: true
        administerAndEnable:
          type: boolean
          nullable: true
        isNotEqualsPermissions:
          type: boolean
          writeOnly: true
          nullable: true
        isEqualsPermissions:
          type: boolean
          writeOnly: true
          nullable: true
        permissions:
          type: object
          additionalProperties:
            type: boolean
        permissionsList:
          type: array
          items:
            type: string
    ShareNodeRequestDto:
      required:
        - permissionsTemplateId
      type: object
      properties:
        fileTreeNodeHash:
          type: string
        scenarioId:
          type: integer
          format: int64
          nullable: true
        userId:
          type: integer
          format: int64
          nullable: true
        permissionsTemplateId:
          type: integer
          format: int64
          nullable: true
        downloadsLimit:
          type: integer
          format: int32
          nullable: true
        expiry:
          type: string
          format: date-time
          nullable: true
        shareByExternalLink:
          type: boolean
          nullable: true
        previewOnly:
          type: boolean
          nullable: true
      description: permissionsTemplateId файла и id группы или получателя(кому шарим)  и хэш ноды
    Authority:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        tag:
          type: string
          enum:
            - ADMIN_MANAGEMENT
            - CHARTS
            - CONTERPART_MANAGEMENT
            - DESC_SECURITY
            - DESK_CHECKING
            - DESK_COUNTERPARTS
            - FILES
            - GENERAL
            - GROUPS_POLICY
            - INTEGRATION
            - JOURNAL
            - LICENSES
            - NOTIFICATIONS
            - PERMISSIONS
            - POLICIES_QUOTAS
            - POLICIES_SECURITY
            - REPORTS
            - SCE_USER
            - SCENARIOS
            - USER_MANAGEMENT
            - SCE_USER_DOWNLOAD
            - SCE_USER_FILE_EDIT
            - SCE_USER_UPLOAD
            - SCE_USER_PUBLIC_LINK
            - MARKS_LIST
            - MARKS_REQUEST_USER
            - MARKS_LOG_REQUEST
            - MARKS_INTEGRATION_EXCHANGE
            - TEMPLATE_POLICIES
            - CONTROL_HASH
          nullable: true
        authorityType:
          type: string
          enum:
            - ADMIN
            - USER
          nullable: true
        description:
          type: string
        orderPosition:
          type: integer
          format: int32
          nullable: true
    CheckRoutine:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        supportedScenarioTypes:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioType'
        checkTypes:
          type: array
          items:
            type: string
            enum:
              - EXT
              - QUOTA
              - SIZE
              - ARCHIVE
              - VIRUS
              - ICAP
              - HASH_CONTROL
              - DOMAIN
        className:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        available:
          type: boolean
          nullable: true
    CheckScenario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        defaultScenario:
          type: boolean
          nullable: true
        type:
          $ref: '#/components/schemas/ScenarioType'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/CheckStage'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        parametersAsJson:
          $ref: '#/components/schemas/JsonNode'
    CheckStage:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        routines:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageRoutine'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        usedScenariosNames:
          type: array
          items:
            type: string
    CheckStageRoutine:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        routine:
          $ref: '#/components/schemas/CheckRoutine'
        name:
          type: string
        failureFatal:
          type: boolean
          nullable: true
        icapSettings:
          type: array
          items:
            $ref: '#/components/schemas/IcapSettingsEntity'
        template:
          type: boolean
          nullable: true
        parametersAsJson:
          $ref: '#/components/schemas/JsonNode'
    FileTreeNode:
      type: object
      properties:
        userEmail:
          type: string
        folderType:
          $ref: '#/components/schemas/FolderType'
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FROZEN
            - BLOCKED
            - USER_BLOCKED_BY_ADMIN
            - PENDING
            - PENDING_APPROVE_MARKS
          nullable: true
        statusBeforeFreezing:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FROZEN
            - BLOCKED
            - USER_BLOCKED_BY_ADMIN
            - PENDING
            - PENDING_APPROVE_MARKS
          nullable: true
        ownerId:
          type: integer
          format: int64
          nullable: true
        owner:
          $ref: '#/components/schemas/RegularUser'
        comment:
          type: string
        name:
          type: string
        nodeOwner:
          $ref: '#/components/schemas/User'
        parentId:
          type: integer
          format: int64
          nullable: true
        parent:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        availableSince:
          type: string
          format: date-time
          nullable: true
        timeToLive:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        markedToTrash:
          type: string
          format: date-time
          nullable: true
        markedToDeleteFromStorage:
          type: string
          format: date-time
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNodeTag'
        shares:
          type: array
          items:
            $ref: '#/components/schemas/SharedNode'
        sharedVia:
          type: array
          items:
            $ref: '#/components/schemas/SharedNode'
        expiryDate:
          type: string
          format: date-time
          nullable: true
        leftDownload:
          type: integer
          format: int32
          nullable: true
        downloaded:
          type: integer
          format: int32
          nullable: true
        viewed:
          type: boolean
          nullable: true
        newFilesNum:
          type: integer
          format: int64
          nullable: true
        path:
          type: string
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        sizeBytes:
          type: integer
          format: int64
          nullable: true
        newSharedNode:
          $ref: '#/components/schemas/SharedNode'
        newSharedNodeDto:
          $ref: '#/components/schemas/SharedNode'
        lastParentNodeId:
          type: integer
          format: int64
          nullable: true
        lastParentNode:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        trashedById:
          type: integer
          format: int64
          nullable: true
        prefix:
          type: integer
          format: int32
          nullable: true
        versions:
          type: array
          items:
            $ref: '#/components/schemas/StoredFile'
        oldVersion:
          $ref: '#/components/schemas/StoredFile'
        incomingOriginName:
          type: string
        userRequesterFolderId:
          type: integer
          format: int64
          nullable: true
        userRequesterFolder:
          $ref: '#/components/schemas/FileTreeNode'
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlDate:
          type: string
          format: date-time
          nullable: true
        external:
          type: boolean
          nullable: true
        immutable:
          type: boolean
          nullable: true
        encrypted:
          type: boolean
          nullable: true
        ready:
          type: boolean
          nullable: true
        forbiddenToModify:
          type: boolean
          nullable: true
        availableTo:
          type: array
          items:
            $ref: '#/components/schemas/User'
        withPreview:
          type: boolean
          nullable: true
        displayName:
          type: string
        state:
          type: string
          enum:
            - AWAITING_ARCHIVING
            - AWAITING_TRANSFER
            - AWAITING_UPDATE
            - ARCHIVING
            - DECLINED
            - DELETED
            - NEW
            - OLD_VERSION
            - PUBLISHED
            - PUBLISHING
            - REENCRYPT_IN_PROGRESS
            - REENCRYPT_PENDING
            - SYSTEM_VERIFICATION
            - UPDATE_VERIFICATION_PENDING
            - UPLOADED
            - UPLOAD_PENDING
            - VERIFICATION_PENDING
            - VERIFIED
          nullable: true
        fileName:
          type: string
        canDownload:
          type: boolean
          nullable: true
        fileType:
          type: string
          enum:
            - ZIP
            - REGULAR
          nullable: true
        storedFileName:
          type: string
        ownerEmail:
          type: string
        type:
          $ref: '#/components/schemas/FileTreeNodeType'
        credentials:
          type: string
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        mimeType:
          type: string
        publicSharedNodeDto:
          $ref: '#/components/schemas/PublicSharedNode'
        permissionsTemplateDto:
          $ref: '#/components/schemas/PermissionsTemplate'
        publicUploadRequestInfo:
          $ref: '#/components/schemas/PublicUploadRequestInfo'
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    FileTreeNodeTag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        taggedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        creatorId:
          type: integer
          format: int64
          nullable: true
        creator:
          $ref: '#/components/schemas/User'
    Group:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
          enum:
            - SUPER_USER
            - LOCAL
            - COUNTERPART
            - COUNTERPART_GROUP
            - GROUP
            - UNAUTHORIZED
            - EXCHANGE
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastLdapSync:
          type: string
          format: date-time
          nullable: true
        frozenAt:
          type: string
          format: date-time
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSource:
          $ref: '#/components/schemas/LdapSource'
        ldapDn:
          type: string
        usedSpaceBytes:
          type: integer
          format: int64
          nullable: true
        diskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        countriesBlacklist:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DISABLED
            - DELETED
            - DESYNCHRONIZED
            - BLOCKED
          nullable: true
        countriesBLCheckEnabled:
          type: boolean
          nullable: true
        isDisabledChangePassword:
          type: boolean
          nullable: true
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        canCreatingPublicLink:
          type: boolean
          nullable: true
        expiryPublicLinks:
          type: integer
          format: int32
          nullable: true
        effectiveDiskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        requiresSecondFactor:
          type: boolean
          nullable: true
        isMobileTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        tag:
          type: string
        storagePolicyPlain:
          type: boolean
          nullable: true
        storagePolicyAes:
          type: boolean
          nullable: true
        storagePolicyZip:
          type: boolean
          nullable: true
        storagePolicyGost:
          type: boolean
          nullable: true
        builtin:
          type: boolean
          nullable: true
        allowPublicShare:
          type: boolean
          nullable: true
        publicShareMaxTime:
          type: integer
          nullable: true
        allowPublicUpload:
          type: boolean
          nullable: true
        description:
          type: string
        loginEnabled:
          type: boolean
          nullable: true
        ldap:
          type: boolean
          nullable: true
        displayName:
          type: string
        canReceiveShares:
          type: boolean
          nullable: true
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        isSpaceFull:
          type: boolean
          writeOnly: true
          nullable: true
        isSpaceNotFull:
          type: boolean
          writeOnly: true
          nullable: true
        countriesBlacklistList:
          type: array
          items:
            type: string
        scenarios:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CheckScenario'
        diskQuotaMegaBytes:
          maximum: 8796093022207
          type: integer
          format: int64
          nullable: true
        isTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    IcapSettingsEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        enabled:
          type: boolean
          nullable: true
        name:
          type: string
        icapHost:
          type: string
        icapPort:
          type: integer
          format: int32
          nullable: true
        icapService:
          type: string
        fileMaxSize:
          type: integer
          format: int64
          nullable: true
        whiteListExtension:
          type: integer
          format: int64
          nullable: true
        blackListExtension:
          type: integer
          format: int64
          nullable: true
    JsonNode:
      type: object
    LdapHost:
      required:
        - host
        - port
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        host:
          pattern: "^[\\wа-яА-Я.-]+$"
          type: string
        port:
          type: integer
          format: int32
          nullable: true
    LdapSource:
      required:
        - baseDn
        - emailAttr
        - groupMappingType
        - lastLdapSyncBeforeDeletion
        - loginAttr
        - name
        - password
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        hostsAndPorts:
          type: array
          items:
            $ref: '#/components/schemas/LdapHost'
        baseDn:
          type: string
        sslEnabled:
          type: boolean
          nullable: true
        ldapType:
          type: string
          enum:
            - ACTIVE_DIRECTORY
            - EDIRECTORY
          nullable: true
        username:
          type: string
        password:
          type: string
        emailAttr:
          maxLength: 64
          minLength: 0
          type: string
        loginAttr:
          maxLength: 64
          minLength: 0
          type: string
        customAttr:
          maxLength: 64
          minLength: 0
          type: string
        internalPhone:
          maxLength: 64
          minLength: 0
          type: string
        prefix:
          type: string
        groupMappingType:
          type: string
          enum:
            - OU
            - GROUP
          nullable: true
        lastLdapSyncBeforeDeletion:
          minimum: 0
          type: integer
          format: int64
          nullable: true
        enabled:
          type: boolean
          nullable: true
        active:
          type: boolean
          nullable: true
        deleted:
          type: boolean
          nullable: true
    Parameter:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - INTEGER
            - REAL
            - STRING_ARRAY
            - INTEGER_ARRAY
            - REAL_ARRAY
          nullable: true
    PersonalData:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        internalPhone:
          type: string
        position:
          type: string
        organization:
          type: string
        customInfo:
          type: string
    PublicSharedNode:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        publicSharedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        publicSharedFileTreeNode:
          $ref: '#/components/schemas/FileTreeNode'
        sharedById:
          type: integer
          format: int64
          nullable: true
        sharedBy:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        expiredMinutes:
          type: string
          format: date-time
          nullable: true
        notification:
          type: boolean
          nullable: true
        publicLink:
          type: string
        expired:
          type: string
          format: date-time
          nullable: true
        countDownload:
          type: integer
          format: int32
          nullable: true
    RegularUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
          enum:
            - SUPER_USER
            - LOCAL
            - COUNTERPART
            - COUNTERPART_GROUP
            - GROUP
            - UNAUTHORIZED
            - EXCHANGE
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastLdapSync:
          type: string
          format: date-time
          nullable: true
        frozenAt:
          type: string
          format: date-time
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSource:
          $ref: '#/components/schemas/LdapSource'
        ldapDn:
          type: string
        usedSpaceBytes:
          type: integer
          format: int64
          nullable: true
        diskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        countriesBlacklist:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DISABLED
            - DELETED
            - DESYNCHRONIZED
            - BLOCKED
          nullable: true
        countriesBLCheckEnabled:
          type: boolean
          nullable: true
        isDisabledChangePassword:
          type: boolean
          nullable: true
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        canCreatingPublicLink:
          type: boolean
          nullable: true
        expiryPublicLinks:
          type: integer
          format: int32
          nullable: true
        effectiveDiskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        customInfoFieldName:
          type: string
        secret:
          type: string
        hasMobileSecretCode:
          type: boolean
          nullable: true
        isMobileTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        isAbleToLoginFromMobile:
          type: boolean
          nullable: true
        isAbleToLoginFromDesctop:
          type: boolean
          nullable: true
        login:
          type: string
        email:
          type: string
        passwordHash:
          type: string
        personalData:
          $ref: '#/components/schemas/PersonalData'
        lastLogin:
          type: string
          format: date-time
          nullable: true
        isTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        password:
          type: string
        passwordSetType:
          type: string
          enum:
            - PLAIN_PASSWORD
            - CREATION_LINK
            - DISABLED
          nullable: true
        passwordInMail:
          type: boolean
          nullable: true
        displayName:
          type: string
        canReceiveShares:
          type: boolean
          nullable: true
        disabled:
          type: boolean
          nullable: true
        logName:
          type: string
        availableStoragePolicies:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - PLAIN
              - ZIP
              - AES
              - X509
              - GOST
        mobileTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        admin:
          type: boolean
          nullable: true
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        ldap:
          type: boolean
          nullable: true
        isSpaceFull:
          type: boolean
          writeOnly: true
          nullable: true
        isSpaceNotFull:
          type: boolean
          writeOnly: true
          nullable: true
        countriesBlacklistList:
          type: array
          items:
            type: string
        requiresSecondFactor:
          type: boolean
          nullable: true
        canCreatingPublicUploadLink:
          type: boolean
          nullable: true
        autosync:
          type: boolean
          nullable: true
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        tag:
          type: string
          enum:
            - user
            - admin
            - security
            - pre_auth
            - onlyoffice
          nullable: true
        description:
          type: string
        builtIn:
          type: boolean
          nullable: true
        authorities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Authority'
    AddressMask:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        mask:
          type: string
        subnet:
          type: string
        ip:
          type: string
    SharedNode:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          enum:
            - ACTIVE
            - FROZEN
            - BLOCKED
            - PENDING
          nullable: true
        hash:
          type: string
        sharedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        sharedById:
          type: integer
          format: int64
          nullable: true
        sharedBy:
          $ref: '#/components/schemas/User'
        sharedToId:
          type: integer
          format: int64
          nullable: true
        sharedTo:
          $ref: '#/components/schemas/User'
        downloadsCount:
          type: integer
          format: int32
          nullable: true
        downloadsLimit:
          type: integer
          format: int32
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
        byExternalLink:
          type: boolean
          nullable: true
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        permissionsTemplateId:
          type: integer
          format: int64
          nullable: true
        comment:
          type: string
        sharedNodeStatus:
          type: string
          enum:
            - ACTIVE
            - FROZEN
            - BLOCKED
            - PENDING
          nullable: true
        remainingTime:
          type: integer
          format: int64
          nullable: true
        trueDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        permissionsTemplateDto:
          $ref: '#/components/schemas/PermissionsTemplate'
    SharedNodeInfo:
      type: object
      properties:
        sharedNodeInfosDownload:
          type: array
          items:
            $ref: '#/components/schemas/SharedNodeInfoDownload'
        accepted:
          type: boolean
          nullable: true
        sharedTo:
          $ref: '#/components/schemas/User'
        downloaded:
          type: integer
          format: int32
          nullable: true
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        fileTreeNodeHash:
          type: string
        fileTreeNodeName:
          type: string
    SharedNodeInfoDownload:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/RegularUser'
        downloaded:
          type: integer
          format: int32
          nullable: true
    StoredFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        state:
          type: string
          enum:
            - AWAITING_ARCHIVING
            - AWAITING_TRANSFER
            - AWAITING_UPDATE
            - ARCHIVING
            - DECLINED
            - DELETED
            - NEW
            - OLD_VERSION
            - PUBLISHED
            - PUBLISHING
            - REENCRYPT_IN_PROGRESS
            - REENCRYPT_PENDING
            - SYSTEM_VERIFICATION
            - UPDATE_VERIFICATION_PENDING
            - UPLOADED
            - UPLOAD_PENDING
            - VERIFICATION_PENDING
            - VERIFIED
          nullable: true
        checkResult:
          type: string
          enum:
            - OK
            - BAD_EXTENSION
            - NOT_WHITELISTED_EXTENSION
            - QUOTA_EXCEEDED
            - FILE_SIZE_EXCEEDED
            - ARCH_PASSWORD
            - VIRUS
            - VIRUS_ICAP
            - MANUALLY_DECLINED
            - MANUALLY_ACCEPT
            - HASH_CONTROL
          nullable: true
        requester:
          $ref: '#/components/schemas/RegularUser'
        uploader:
          $ref: '#/components/schemas/User'
        uploaderType:
          $ref: '#/components/schemas/UploaderType'
        uploaderIp:
          type: string
        fileName:
          type: string
        mime:
          type: string
        originalSize:
          type: integer
          format: int64
          nullable: true
        compressedSize:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        verifiedBy:
          $ref: '#/components/schemas/User'
        verifierNotes:
          type: string
        downloadsLimit:
          type: integer
          format: int32
          deprecated: true
          nullable: true
        downloads:
          type: integer
          format: int64
          nullable: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        credentials:
          type: string
        awaitingArchiving:
          $ref: '#/components/schemas/FileTreeNode'
        message:
          type: string
        shared:
          type: array
          items:
            $ref: '#/components/schemas/User'
        getCurrentSize:
          type: integer
          format: int64
          writeOnly: true
          nullable: true
        fileSizeBytes:
          type: integer
          format: int64
          nullable: true
        mimeType:
          type: string
        size:
          type: integer
          format: int64
          nullable: true
        storedFileName:
          type: string
        ownerEmail:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
          enum:
            - SUPER_USER
            - LOCAL
            - COUNTERPART
            - COUNTERPART_GROUP
            - GROUP
            - UNAUTHORIZED
            - EXCHANGE
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastLdapSync:
          type: string
          format: date-time
          nullable: true
        frozenAt:
          type: string
          format: date-time
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSource:
          $ref: '#/components/schemas/LdapSource'
        ldapDn:
          type: string
        usedSpaceBytes:
          type: integer
          format: int64
          nullable: true
        diskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        countriesBlacklist:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DISABLED
            - DELETED
            - DESYNCHRONIZED
            - BLOCKED
          nullable: true
        countriesBLCheckEnabled:
          type: boolean
          nullable: true
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        canCreatingPublicLink:
          type: boolean
          nullable: true
        expiryPublicLinks:
          type: integer
          format: int32
          nullable: true
        effectiveDiskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        displayName:
          type: string
        canReceiveShares:
          type: boolean
          nullable: true
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        ldap:
          type: boolean
          nullable: true
        email:
          type: string
        isSpaceFull:
          type: boolean
          writeOnly: true
          nullable: true
        isSpaceNotFull:
          type: boolean
          writeOnly: true
          nullable: true
        logName:
          type: string
        countriesBlacklistList:
          type: array
          items:
            type: string
        availableStoragePolicies:
          type: array
          items:
            type: string
            enum:
              - PLAIN
              - ZIP
              - AES
              - X509
              - GOST
        canCreatingPublicUploadLink:
          type: boolean
          nullable: true
    IntegrationExchangeUserDto:
      type: object
      properties:
        login:
          maxLength: 255
          minLength: 3
          type: string
        password:
          maxLength: 255
          minLength: 3
          type: string
          writeOnly: true
        enabled:
          type: boolean
          nullable: true
        autoCreateCounterpart:
          type: boolean
          nullable: true
    IntegrationExchangeUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        login:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        enabled:
          type: boolean
          nullable: true
        autoCreateCounterpart:
          type: boolean
          nullable: true
    HashDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        hashFile:
          $ref: '#/components/schemas/HashFileDto'
        crc32:
          type: string
        md5:
          type: string
        sha1:
          type: string
        sha256:
          type: string
        sha512:
          type: string
        sha3256:
          type: string
        sha3512:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
    HashFileDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
    HashSettingDto:
      type: object
      properties:
        algorithm:
          type: string
          enum:
            - CRC32
            - MD5
            - SHA1
            - SHA256
            - SHA512
            - SHA3256
            - SHA3512
          nullable: true
        enabled:
          type: boolean
          nullable: true
    CounterpartGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
          enum:
            - SUPER_USER
            - LOCAL
            - COUNTERPART
            - COUNTERPART_GROUP
            - GROUP
            - UNAUTHORIZED
            - EXCHANGE
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastLdapSync:
          type: string
          format: date-time
          nullable: true
        frozenAt:
          type: string
          format: date-time
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSource:
          $ref: '#/components/schemas/LdapSource'
        ldapDn:
          type: string
        usedSpaceBytes:
          type: integer
          format: int64
          nullable: true
        diskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        countriesBlacklist:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DISABLED
            - DELETED
            - DESYNCHRONIZED
            - BLOCKED
          nullable: true
        countriesBLCheckEnabled:
          type: boolean
          nullable: true
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        canCreatingPublicLink:
          type: boolean
          nullable: true
        expiryPublicLinks:
          type: integer
          format: int32
          nullable: true
        effectiveDiskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        counterparts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RegularUser'
        name:
          maxLength: 256
          minLength: 3
          type: string
        owner:
          $ref: '#/components/schemas/RegularUser'
        displayName:
          type: string
        canReceiveShares:
          type: boolean
          nullable: true
        logName:
          type: string
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        ldap:
          type: boolean
          nullable: true
        isSpaceFull:
          type: boolean
          writeOnly: true
          nullable: true
        isSpaceNotFull:
          type: boolean
          writeOnly: true
          nullable: true
        countriesBlacklistList:
          type: array
          items:
            type: string
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    CounterpartGroupUpdate:
      type: object
      properties:
        counterpartsIds:
          type: array
          items:
            type: integer
            format: int64
        originName:
          type: string
        newName:
          type: string
        ownerId:
          type: integer
          format: int64
    UserAvatarUploadRequestDto:
      type: object
      properties:
        # <input type="file" name="avatar" />
        avatar:
          type: string
          # возможно формат будет бинарный, но это не точно,
          # на сейчас формат base64
          # format: binary
    UserExpirePublicLinkRequestDto:
      type: object
      properties:
        expireMinuts:
          type: integer
          format: int32
          nullable: true
    Counters:
      type: object
      properties:
        countPasswordChangeRequest:
          type: integer
          format: int64
          nullable: true
        countMarkRequest:
          type: integer
          format: int64
          nullable: true
        countRegistrations:
          type: integer
          format: int64
          nullable: true
        countScenarios:
          type: object
          additionalProperties:
            type: integer
            format: int64
    UserPasswordChangeRequestDto:
      required:
        - currentPassword
        - newPassword
      type: object
      properties:
        currentPassword:
          type: string
          nullable: false
        newPassword:
          type: string
          nullable: false
    UserLanguageChangeRequestDto:
      type: object
      properties:
        newLanguage:
          type: string
    Template:
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/CommonTemplateTag'
        templateType:
          type: string
          enum:
            - THYMELEAF
            - SUBSTRING
          nullable: true
        type:
          type: string
        title:
          type: string
        subject:
          type: string
        body:
          type: string
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        enabled:
          type: boolean
          nullable: true
        switchable:
          type: boolean
          nullable: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/TemplateParameter'
    TemplateParameter:
      type: object
      properties:
        value:
          type: string
        displayName:
          type: string
    ConnectionResult:
      type: object
      properties:
        result:
          type: string
          enum:
            - OK
            - DISABLED
            - CONNECTION_SSL_ERROR
            - CONNECTION_ERROR
            - CREDENTIALS_ERROR
            - UNKNOWN_ERROR
            - UNKNOWN
            - WRONG_HOST
            - IN_PROGRESS
            - DELAYED_DUE_REENCRYPTING
          nullable: true
        message:
          type: string
        exception:
          type: string
        success:
          type: boolean
          nullable: true
    IntegrationStatusLdapSourceConnectionResult:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/LdapSource'
        connectionResult:
          $ref: '#/components/schemas/ConnectionResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    CoreSettings:
      required:
        - counterpartCustomInfoFieldName
        - regularUserCustomInfoFieldName
      type: object
      properties:
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        regularUserCustomInfoFieldName:
          type: string
        counterpartCustomInfoFieldName:
          type: string
        appSource:
          type: string
        appRoot:
          type: string
        appConfigurated:
          type: boolean
          nullable: true
        storagePath:
          type: string
        imageStoragePath:
          type: string
        logDumpStoragePath:
          type: string
        imageSize:
          type: integer
          format: int32
          nullable: true
        clamscanPath:
          type: string
        aescryptPath:
          type: string
        opensslPath:
          type: string
        encryptionKey:
          type: string
        oldEncryptionKey:
          type: string
        encryptionEnabled:
          type: boolean
          nullable: true
        oldEncryptionEnabled:
          type: boolean
          nullable: true
        reEncrypting:
          type: boolean
          nullable: true
        defaultPasswdLen:
          type: integer
          nullable: true
        defaultPasswdComplexity:
          type: string
          enum:
            - LETTERS
            - LETTERS_NUMBERS
            - LETTERS_NUMBERS_PUNCTUATION
          nullable: true
        defaultPasswdCaseVariating:
          type: boolean
          nullable: true
        isStorageAutocleanEnabled:
          type: boolean
          nullable: true
        storageAutocleanTimer:
          minimum: 12
          type: integer
          format: int32
          nullable: true
        isTrashAutocleanEnabled:
          type: boolean
          nullable: true
        trashAutocleanTimer:
          minimum: 12
          type: integer
          format: int32
          nullable: true
        userFilesAutocleanDelay:
          minimum: 1
          type: integer
          format: int32
          nullable: true
        emailsWhitelist:
          type: array
          items:
            type: string
        emailsBlacklist:
          type: array
          items:
            type: string
        showRegistration:
          type: boolean
          nullable: true
        showPasswordRestore:
          type: boolean
          nullable: true
        allowUsersFromInternet:
          type: boolean
          nullable: true
        registrationPolicy:
          type: string
          enum:
            - AUTO
            - MANUAL
            - E_MAIL_NEED_TO_BE_CONFIRMED
          nullable: true
        maxLoginAttempts:
          maximum: 99
          minimum: 3
          type: integer
          format: int32
          nullable: true
        loginBlockDuration:
          maximum: 99
          minimum: 3
          type: integer
          format: int32
          nullable: true
        mailBaseTemplate:
          type: string
        mailBaseTemplateDefault:
          type: string
        mailEditorConfig:
          $ref: '#/components/schemas/JsonNode'
        notifyUserShareCounterpartByExternalLink:
          type: boolean
          nullable: true
        userInactivityCheck:
          type: boolean
        manualPasswordVerification:
          type: boolean
        userInactivityCheckPeriod:
          type: integer
          format: int32
          minimum: 1
          maximum: 99
    GroupUpdateScenariosDto:
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
    GroupQuotaSettingsDto:
      type: object
      properties:
        diskQuotaMegaBytes:
          maximum: 9223372036854775807
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          maximum: 2147483647
          minimum: -1
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          maximum: 2147483647
          minimum: -1
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          maximum: 2147483647
          minimum: -1
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          maximum: 2147483647
          minimum: -1
          type: integer
          format: int32
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
    PasswordChangeRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        user:
          $ref: '#/components/schemas/RegularUser'
        status:
          $ref: '#/components/schemas/PasswordChangeRequestStatus'
          nullable: true
        description:
          type: string
    GroupUpdateManyDto:
      type: object
      properties:
        diskQuotaMegaBytes:
          type: integer
          format: int64
          nullable: true
        storagePolicyAes:
          type: boolean
          nullable: true
        storagePolicyPlain:
          type: boolean
          nullable: true
        storagePolicyZip:
          type: boolean
          nullable: true
        storagePolicyGost:
          type: boolean
          nullable: true
        requiresSecondFactor:
          type: boolean
          nullable: true
        requiresMobileSecondFactor:
          type: boolean
          nullable: true
        allowPublicShare:
          type: boolean
          nullable: true
        publicShareMaxTime:
          type: integer
          nullable: true
        allowPublicUpload:
          type: boolean
          nullable: true
        ids:
          type: array
          items:
            type: integer
            format: int64
    CustomFilterObject:
      type: object
      properties:
        field:
          type: string
        operation:
          type: string
          enum:
            - EQ
            - LIKE
            - BETWEEN
          nullable: true
        value:
          type: object
    CustomSort:
      type: object
      properties:
        field:
          type: string
        direction:
          type: string
          enum:
            - ASC
            - DESC
          nullable: true
    DateFilter:
      type: object
      properties:
        name:
          type: string
        from:
          type: string
          format: date-time
          nullable: true
        till:
          type: string
          format: date-time
          nullable: true
    PageRequest:
      type: object
      properties:
        dateFilters:
          type: array
          items:
            $ref: '#/components/schemas/DateFilter'
        page:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int32
          nullable: true
        filter:
          type: array
          items:
            type: string
        sort:
          type: array
          items:
            type: string
        search:
          $ref: '#/components/schemas/Search'
        logsToExport:
          type: string
          enum:
            - REGISTRATION
            - ADMIN_ACTION
            - ADMIN_FILES
            - QUARANTINE
            - LOGIN_EVENTS
            - APPLIED_POLICIES
            - ADMIN_COUNTERPARTS
          nullable: true
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
          nullable: true
        sort:
          $ref: '#/components/schemas/Sort'
        paged:
          type: boolean
          nullable: true
        unpaged:
          type: boolean
          nullable: true
        pageNumber:
          type: integer
          format: int32
          nullable: true
        pageSize:
          type: integer
          format: int32
          nullable: true
    Search:
      type: object
      properties:
        value:
          type: string
        headers:
          type: array
          items:
            type: string
    Sort:
      type: object
      properties:
        empty:
          type: boolean
          nullable: true
        unsorted:
          type: boolean
          nullable: true
        sorted:
          type: boolean
          nullable: true
    SpecificationObject:
      type: object
    PageWrapperShortInfoRegularUser:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/RegularUser'
    StaffReplyDto:
      type: object
      properties:
        notes:
          type: string
    QuarantineDecisionDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
        comment:
          type: string
    QuarantineResponseDto:
      type: object
      properties:
        accepted:
          type: array
          items:
            type: integer
            format: int64
        notAccepted:
          type: array
          items:
            type: integer
            format: int64
        errorMessage:
          type: string
    UserGostCertRequestDto:
      type: object
      properties:
        certificate:
          type: string
    UserGostCert:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        certificate:
          type: string
    CreateResumableUploadRequestDto:
      type: object
      properties:
        fileName:
          type: string
        parentHash:
          type: string
    CompleteResumableUploadRequestDto:
      type: object
      properties:
        fileName:
          type: string
        fullFileName:
          type: string
        parentFolderHash:
          type: string
        partNumbers:
          type: array
          items:
            type: integer
            format: int64
        fileSize:
          type: integer
          format: int64
          nullable: true
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        zipName:
          type: string
        fileNamesForZipping:
          uniqueItems: true
          type: array
          items:
            type: string
        numberOfList:
          type: integer
          format: int32
          nullable: true
        masterFileId:
          type: integer
          format: int64
          nullable: true
        marks:
          type: array
          items:
            type: integer
            format: int64
        commentForMarks:
          type: string
          nullable: true
        gostMasterKey:
          type: string
          nullable: true
        iv:
          type: string
          nullable: true
    SharePublicNodeRequestDto:
      type: object
      properties:
        notification:
          type: boolean
          nullable: true
        hash:
          type: string
        expireMinutes:
          type: integer
          nullable: true
        countDownload:
          type: integer
          nullable: true
    ContentInShareFolder:
      type: object
      properties:
        fromUserId:
          type: integer
          format: int64
          nullable: true
        pageRequest:
          $ref: '#/components/schemas/PageRequest'
    PageWrapperFileTreeNode:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNode'
    ReassignPermissionsDto:
      required:
        - newPermissionTemplateId
        - oldPermissionTemplateId
      type: object
      properties:
        oldPermissionTemplateId:
          type: integer
          format: int64
          nullable: true
        newPermissionTemplateId:
          type: integer
          format: int64
          nullable: true
    PageWrapperPermissionsTemplate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsTemplate'
    ContentRequest:
      type: object
      properties:
        hash:
          type: string
        pageRequest:
          $ref: '#/components/schemas/PageRequest'
    UserRegistrationParametersDto:
      type: object
      properties:
        login:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        captchaToken:
          type: string
        captchaText:
          type: string
        middleName:
          type: string
    CounterpartRequestDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        position:
          type: string
        organization:
          type: string
        internalPhone:
          maxLength: 128
          minLength: 0
          type: string
        customInfo:
          type: string
        password:
          type: string
        infoMessage:
          type: string
        reason:
          type: string
        token:
          type: string
        personalDataDto:
          $ref: '#/components/schemas/PersonalData'
    TokenDto:
      type: object
      properties:
        hash:
          type: string
    OnlyOfficeCallbackRequestDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
          nullable: true
        key:
          type: string
        url:
          type: string
    OnlyOfficeCallbackResponseDto:
      type: object
      properties:
        error:
          type: integer
          format: int32
          nullable: true
    OnlyOfficeNewFileRequest:
      type: object
      properties:
        folderHash:
          type: string
        fileName:
          type: string
        fileType:
          type: string
          enum:
            - WORD
            - CELL
            - SLIDE
          nullable: true
    OnlyOfficeNewFileResponse:
      type: object
      properties:
        fileHash:
          type: string
        id:
          type: integer
          format: int64
          nullable: true
    ClientInfo:
      type: object
      properties:
        ip:
          type: string
        device:
          type: string
        os:
          type: string
        osVersion:
          type: string
        agent:
          type: string
        agentVersion:
          type: string
        userAgent:
          type: string
    LogEntry:
      required:
        - stamp
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        event:
          type: string
          enum:
            - EXPORT_EVENTS
            - FILES_NOT_DOWNLOADED_DURING_MULTIPLE_DOWNLOADING
            - ROLE_CREATED
            - ROLE_MODIFIED
            - ROLE_REMOVED
            - PERMISSIONS_TEMPLATE_CREATED
            - PERMISSIONS_TEMPLATE_DELETED
            - PERMISSIONS_TEMPLATE_UPDATED
            - PERMISSIONS_TEMPLATE_RENAME
            - PERMISSIONS_TEMPLATE_REASSIGNED
            - PERMISSIONS_TEMPLATE_TOGGLE
            - REGISTRATION_NEW
            - REGISTRATION_ACCEPTED
            - REGISTRATION_DECLINED
            - USER_CREATED
            - USER_CREATED_BY_ADMIN
            - USER_CREATED_WITH_TWO_FA
            - USER_UPDATED
            - USER_PASSWORD_UPDATED
            - USER_DISABLED
            - USER_DELETED
            - USER_REQUESTED_FILES
            - USER_CANCELED_COUNTERPART_REQUEST
            - USER_SHARE_FILE_TO_COUNTERPART
            - USER_SHARE_FILE_TO_COUNTERPART_GROUP
            - USER_SHARE_FOLDER_TO_COUNTERPART
            - USER_SHARE_FOLDER_TO_COUNTERPART_GROUP
            - USER_UNSHARE_FILE_TO_COUNTERPART
            - USER_UNSHARE_FILE_TO_COUNTERPART_GROUP
            - USER_UNSHARE_FOLDER_TO_COUNTERPART
            - USER_UNSHARE_FOLDER_TO_COUNTERPART_GROUP
            - USER_GROUPS_UPDATED
            - USER_REGISTERED
            - USER_REGISTRATION_REQUEST
            - USER_REGISTRATION_ACCEPTED
            - USER_REGISTRATION_DECLINED
            - USER_REGISTRATION_TOKEN
            - USER_SHARE
            - USER_SHARE_REJECTED
            - COUNTERPART_REGISTER_REQUEST_ACCEPTED
            - COUNTERPART_REGISTER_REQUEST_REJECTED
            - COUNTERPART_FILE_UPLOAD
            - COUNTERPART_FILE_UPLOAD_FAILED
            - COUNTERPART_FILE_DOWNLOAD
            - COUNTERPART_GROUP_CHANGE
            - COUNTERPART_GROUP_CREATED
            - COUNTERPART_GROUP_DELETE
            - COUNTERPART_ACCEPTED
            - COUNTERPART_REJECTED
            - COUNTERPART_CREATED
            - COUNTERPART_ADDED
            - COUNTERPART_REGISTER_REQUEST
            - COUNTERPART_FILES_REQUEST
            - COUNTERPART_REQUEST_DELETED
            - COUNTERPART_REQUEST_CLOSED_BY_COUNTERPART
            - COUNTERPART_TRANSFER
            - COUNTERPART_DELETED
            - COUNTERPART_DELETED_FOR_USER
            - COUNTERPART_SHARE
            - COUNTERPART_SHARE_REJECTED
            - COUNTERPART_TRANSFER_REJECTED
            - COUNTERPART_FILE_SHARE_BY_EXTERNAL_LINK
            - COUNTERPART_GROUP_FILE_SHARE_BY_EXTERNAL_LINK
            - COUNTERPART_UNSHARE_NODE_AFTER_FILE_DOWNLOAD_LIMIT_EXCEEDED
            - CHECK_MANUAL
            - SEND_DIGIT_CODE
            - SETTING_CHANGED
            - ICAP_DELETE
            - TEMPLATE_CHANGED
            - GROUP_TWO_FACTOR_AUTH_ENABLED
            - GROUP_CREATED
            - GROUP_UPDATED
            - GROUP_QUOTA_UPDATED
            - GROUP_DELETED
            - ROUTINE_CREATED
            - ROUTINE_UPDATED
            - ROUTINE_DELETED
            - LDAP_USER_DISABLED
            - LDAP_USER_ENABLED
            - LDAP_USER_CONFLICTING
            - LDAP_DN_CHANGED
            - LDAP_CATALOG_CREATED
            - LDAP_CATALOG_DELETED
            - LDAP_CATALOG_DISABLED
            - LDAP_CATALOG_ENABLED
            - LDAP_CATALOG_GROUP_ENABLED
            - LDAP_CATALOG_GROUP_DISABLED
            - LDAP_SYNC
            - LDAP_CONNECTION_ADDED
            - LDAP_CONNECTION_CHANGED
            - LDAP_CONNECTION_REMOVED
            - LDAP_SYNC_SETTINGS_CHANGED
            - LDAP_NEW_USERS_SYNCED
            - SCENARIO_ADDED
            - SCENARIO_CHANGED
            - SCENARIO_REMOVED
            - LICENSE_ADDED
            - LICENSE_REMOVED
            - SYSTEM_ERROR
            - SYS_INFO_UPDATE
            - MAIL_INTEGRATION_IS_DISABLED_USER_NOTIFICATION
            - MAIL_INTEGRATION_IS_DISABLED_ADMIN_NOTIFICATION
            - MAIL_INTEGRATION_IS_DISABLED_ADMIN_NOTIFICATION_CPART_EVENT
            - MAIL_INTEGRATION_NO_CONNECT_USER_NOTIFICATION
            - MAIL_INTEGRATION_NO_CONNECT_ADMIN_NOTIFICATION
            - MAIL_INTEGRATION_NO_CONNECT_ADMIN_NOTIFICATION_CPART_EVENT
            - SCENARIO_INSTANCE_FROZEN
            - SCENARIO_INSTANCE_UNFROZEN
            - INTEGRATION_FAIL
            - INTEGRATION_EXCHANGE
            - OWNER_CHANGED
            - CREATE_NEW_EXPORT_EVENT
            - HASHCONTROL_SETTINGS_UPDATED
            - HASHCONTROL_HASHES_ADDED
            - HASHCONTROL_HASHES_UPDATED
            - HASHCONTROL_HASHES_DELETED
            - HASHCONTROL_FILE_UPLOADED
            - HASHCONTROL_FILE_DELETED
            - STORAGE_RESERVE_EXCEEDED
            - TWO_FACTOR_AUTHENTICATION_ACTIVATED
            - MOBILE_TWO_FACTOR_AUTHENTICATION_ACTIVATED
            - RESET_PASSWORD_GENERATE_UPDATE_LINK
            - PUBLIC_UPLOAD_TRANSFER_REJECTED
            - SCE_SYNC_USER
            - SCE_FILES_REQUESTS
          nullable: true
        message:
          type: string
        stamp:
          type: string
          format: date-time
          nullable: true
        info:
          $ref: '#/components/schemas/LogEntryInfo'
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
    LogEntryInfo:
      type: object
      properties:
        type:
          type: string
        email:
          type: string
        adminId:
          type: integer
          format: int64
          nullable: true
        userId:
          type: integer
          format: int64
          nullable: true
        counterpartId:
          type: integer
          format: int64
          nullable: true
        adminEmail:
          type: string
        userEmail:
          type: string
        counterpartEmail:
          type: string
        id:
          type: integer
          format: int64
          nullable: true
        issuerMail:
          type: string
        issuerId:
          type: integer
          format: int64
          nullable: true
        issuerIsAdmin:
          type: boolean
          nullable: true
        fileName:
          type: string
        transferredTo:
          type: string
        path:
          type: string
        message:
          type: string
        ip:
          type: string
        tag:
          type: string
        changedSettings:
          type: array
          items:
            $ref: '#/components/schemas/MutableTripleStringStringString'
        name:
          type: string
        login:
          type: string
        sourceId:
          type: integer
          format: int64
          nullable: true
        sourceName:
          type: string
        group:
          type: string
        groupId:
          type: integer
          format: int64
          nullable: true
        oldName:
          type: string
        dn:
          type: string
        parameters:
          type: string
        hashOfLogDump:
          type: string
        receiverId:
          type: integer
          format: int64
          nullable: true
        registrationRequested:
          type: string
          format: date-time
          nullable: true
        registrationReviewed:
          type: string
          format: date-time
          nullable: true
        userDisplayName:
          type: string
        registrationEventType:
          type: string
          enum:
            - REJECTED
            - APPROVED
            - PENDING
          nullable: true
        incomingFolderHash:
          type: string
        removedCounterpartsFromGroup:
          type: array
          items:
            type: string
        newCounterpartsInGroup:
          type: array
          items:
            type: string
        newGroupName:
          type: string
        oldGroupName:
          type: string
        nodeNames:
          type: array
          items:
            type: string
    MutableTripleStringStringString:
      type: object
      properties:
        left:
          type: string
        middle:
          type: string
        right:
          type: string
    PageWrapperLogEntry:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
    LoginEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        stamp:
          type: string
          format: date-time
          nullable: true
        login:
          type: string
        message:
          type: string
        info:
          $ref: '#/components/schemas/LoginJson'
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
        type:
          type: string
          enum:
            - SUCCESS
            - FAILED
            - LOGOUT
          nullable: true
    LoginJson:
      type: object
      properties:
        type:
          type: string
    PageWrapperLoginEvent:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/LoginEvent'
    FileTreeNodeEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        stamp:
          type: string
          format: date-time
          nullable: true
        fileName:
          type: string
        event:
          type: string
          enum:
            - SUB_FILE_IN_ZIP_CREATED
            - FILE_CREATED
            - FILE_TTL_CHANGED
            - FOLDER_CREATED
            - CREATED_ZIP
            - ZIPPING
            - ZIPPING_SUCCESS
            - CREATED_ENCRYPTED
            - ENCRYPTING
            - TAG_CREATED
            - PERMISSIONS_TEMPLATE_CREATED
            - PERMISSIONS_TEMPLATE_DELETED
            - PERMISSIONS_TEMPLATE_UPDATED
            - PERMISSIONS_TEMPLATE_REASSIGNED
            - UPLOADED
            - UPLOAD_FAILED
            - UPDATED
            - UPDATED_UPLOADED
            - UPDATE_ACCEPTED
            - UPDATED_DECLINED
            - USER_CHOSE_SCENARIO
            - PERMISSION_GRANTED
            - CHECK_MANUAL
            - CHECK_STARTED
            - CHECK_FINISHED
            - POLICY_APPLIED
            - COUNTERPART_UNSHARE_NODE_AFTER_FILE_DOWNLOAD_LIMIT_EXCEEDED
            - SHARE_ACCEPTED
            - SHARE_DECLINED
            - USER_SHARE_ACCEPTED
            - USER_SHARE_DECLINED
            - ACCEPTED
            - DECLINED
            - FILE_RENAMED
            - FOLDER_RENAMED
            - FILE_COMMENT_CHANGED
            - FOLDER_COMMENT_CHANGED
            - FILE_TRASHED
            - FOLDER_TRASHED
            - FOLDER_RESTORED
            - FILE_RESTORED
            - FILE_REMOVED
            - FOLDER_REMOVED
            - AVAILABLE
            - FILE_COPIED
            - AVAILABLE_AFTER_COPYING
            - OVER_CAPACITY
            - TRANSFER_ACCEPTED
            - TRANSFER_DECLINED
            - USER_REQUESTED_FILES
            - COUNTERPART_TRANSFER
            - PASSWORD
            - DOWNLOADED_BY_PUBLIC_LINK
            - DOWNLOADED_BY_EXTERNAL_LINK
            - DOWNLOADED
            - DOWNLOADED_BY_ANOTHER_USER
            - PREVIEW_FILE_DOWNLOADED
            - FILE_MOVED
            - FOLDER_MOVED
            - PASSWD_RECIEVED
            - PASSWD_DECLINED
            - DECLINE_SHARE
            - SHARE_MANUAL
            - SENDER
            - FILE_SHARED
            - FILE_PUBLIC_SHARED
            - FILE_PUBLIC_UNSHARED
            - FOLDER_SHARED
            - FILE_SHARED_TO_COUNTERPART
            - FOLDER_SHARED_TO_COUNTERPART
            - FILE_SHARED_TO_COUNTERPART_GROUP
            - FOLDER_SHARED_TO_COUNTERPART_GROUP
            - FILE_UNSHARED
            - FOLDER_UNSHARED
            - FILE_UNSHARED_FROM_COUNTERPART
            - FILE_UNSHARED_FROM_COUNTERPART_GROUP
            - FOLDER_UNSHARED_FROM_COUNTERPART
            - FOLDER_UNSHARED_FROM_COUNTERPART_GROUP
            - FILE_SHARED_INFO_ACCEPTED_TO_COUNTERPART
            - FILE_SHARED_INFO_ACCEPTED_TO_COUNTERPART_GROUP
            - FILE_IN_FOLDER_SHARED_INFO_ACCEPTED_TO_COUNTERPART
            - FILE_IN_FOLDER_SHARED_INFO_ACCEPTED_TO_COUNTERPART_GROUP
            - FILE_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART
            - FILE_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART_GROUP
            - FOLDER_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART
            - FOLDER_IN_FOLDER_SHARED_INFO_DELETE_FROM_COUNTERPART_GROUP
            - DOWNLOAD_DECLINED
            - DOWNLOAD_COUNTER_INCREASED
            - IN_QUARANTINE
            - COUNTERPART_REQUEST_DELETED
            - COUNTERPART_REQUEST_CLOSED_BY_COUNTERPART
            - MAIL_INTEGRATION_IS_DISABLED_USER_NOTIFICATION_ON_NODE_EVENT
            - MAIL_INTEGRATION_IS_DISABLED_ADMIN_NOTIFICATION_ON_NODE_EVENT
            - MAIL_INTEGRATION_NO_CONNECT_USER_NOTIFICATION_ON_NODE_EVENT
            - MAIL_INTEGRATION_NO_CONNECT_ADMIN_NOTIFICATION_ON_NODE_EVENT
            - DOWNLOADED_BY_ADMIN
            - TRASHED_BY_AUTOCLEAN
            - DELETED_BY_AUTOCLEAN
            - DOWNLOADED_EXPIRE_COUNT
            - DOWNLOADED_EXPIRE_TIME
            - PUBLIC_UPLOAD_REQUEST_CREATED
            - PUBLIC_UPLOAD_REQUEST_DELETED
            - PUBLIC_UPLOAD_FILE_TRANSFERRED
          nullable: true
        info:
          $ref: '#/components/schemas/InfoJson'
        message:
          type: string
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
    InfoJson:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        email:
          type: string
        issuerId:
          type: integer
          format: int64
          nullable: true
        issuerMail:
          type: string
        receiverId:
          type: integer
          format: int64
          nullable: true
        receiverEmail:
          type: string
        userId:
          type: integer
          format: int64
          nullable: true
        userEmail:
          type: string
        adminEmail:
          type: string
        counterpartId:
          type: integer
          format: int64
          nullable: true
        counterpartEmail:
          type: string
        size:
          type: integer
          format: int64
          nullable: true
        ownerId:
          type: integer
          format: int64
          nullable: true
        nodeId:
          type: integer
          format: int64
          nullable: true
        nodeHash:
          type: string
        type:
          type: string
        message:
          type: string
        ip:
          type: string
        fileName:
          type: string
        path:
          type: string
        oldPath:
          type: string
        state:
          type: string
        unsharedFrom:
          type: string
        nodeType:
          $ref: '#/components/schemas/FileTreeNodeType'
        sharedVia:
          type: array
          items:
            type: integer
            format: int64
        usersSharedTo:
          type: array
          items:
            type: string
    PageWrapperFileTreeNodeEvent:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNodeEvent'
    ExportResponseDto:
      type: object
      properties:
        message:
          type: string
    IntegrationExchangeShareRequest:
      type: object
      properties:
        sender:
          type: string
        subject:
          type: string
        date:
          type: integer
          format: int64
          nullable: true
        bodyFormat:
          type: string
          enum:
            - HTML
            - TEXT
            - RTF
          nullable: true
        recipients:
          type: array
          items:
            type: string
    IntegrationExchangeShareResult:
      type: object
      properties:
        message:
          type: string
    IntegrationExchangeRecipients:
      type: object
      properties:
        sender:
          type: string
        recipients:
          type: array
          items:
            type: string
    IntegrationExchangeRecipientsResult:
      type: object
      properties:
        email:
          type: string
        result:
          type: string
          enum:
            - OK
            - QUARANTINE
            - REJECTED
            - NOT_FOUND
          nullable: true
    IntegrationExchangeFilesResult:
      type: object
      properties:
        result:
          type: string
          enum:
            - OK
            - REJECTED
          nullable: true
    FileUploadResultDto:
      type: object
      properties:
        message:
          type: string
        total:
          type: string
        processed:
          type: string
    PageWrapperShortInfoGroup:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    CreateFileDto:
      type: object
      properties:
        parentHash:
          type: string
        folder:
          $ref: '#/components/schemas/FileTreeNode'
    RestoreVersionsDto:
      type: object
      properties:
        fileTreeFileId:
          type: integer
          format: int64
          nullable: true
        versionId:
          type: integer
          format: int64
          nullable: true
    MoveToTrashDto:
      required:
        - hash
      type: object
      properties:
        hash:
          type: string
        shareNodeId:
          type: integer
          format: int64
          nullable: true
    TrashManyFilesRequestDto:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/MoveToTrashDto'
    FilesMoveToTrashResponseDto:
      type: object
      properties:
        deletedFiles:
          type: array
          items:
            type: string
        retainedFiles:
          type: array
          items:
            type: string
        message:
          type: string
    UpdateTagsRequestDto:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNodeTag'
        taggedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        shareNodeId:
          type: integer
          format: int64
          nullable: true
    RestoreManyFilesRequestDto:
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
        restoringPolicyDto:
          $ref: '#/components/schemas/RestoringPolicyDto'
    RestoringPolicyDto:
      type: object
      properties:
        restorePolicy:
          type: string
          enum:
            - ROOT
            - LASTPARENT
          nullable: true
    RestoreManyFilesResponseDto:
      type: object
      properties:
        fileTreeNodes:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNode'
    FileTreeCounterpartUploadRequestShortDto:
      type: object
      properties:
        userRequesterEmail:
          type: string
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlDate:
          type: string
          format: date-time
          nullable: true
        comment:
          type: string
        hash:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: true
    RenameRequestDto:
      required:
        - fileTreeNodeHash
        - newName
      type: object
      properties:
        fileTreeNodeHash:
          type: string
        shareNodeId:
          type: integer
          format: int64
          nullable: true
        newName:
          maxLength: 255
          minLength: 0
          type: string
    MoveConflictDto:
      type: object
      properties:
        fileId:
          type: integer
          format: int64
          nullable: true
        fileHash:
          type: string
        fileName:
          type: string
        path:
          type: string
        newName:
          type: string
        toDelete:
          type: boolean
          nullable: true
        skip:
          type: boolean
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
    MoveConflictPairDto:
      type: object
      properties:
        conflictFromNewParentFolder:
          $ref: '#/components/schemas/MoveConflictDto'
        conflictFromMovingFolder:
          $ref: '#/components/schemas/MoveConflictDto'
    MoveNodeRequestDto:
      required:
        - fileHash
        - newParentHash
      type: object
      properties:
        fileHash:
          type: string
        shareNodeId:
          type: integer
          format: int64
          nullable: true
        newParentHash:
          type: string
        newName:
          type: string
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/MoveConflictPairDto'
    MultipleMoveFilesRequestDto:
      type: object
      properties:
        newParentFolderHash:
          type: string
        requests:
          type: array
          items:
            $ref: '#/components/schemas/MoveNodeRequestDto'
    MultipleMoveFilesResponseDto:
      type: object
      properties:
        moved:
          type: array
          items:
            type: string
        retained:
          type: array
          items:
            type: string
        message:
          type: string
    UserSpaceBytes:
      type: object
      properties:
        totalBytes:
          type: integer
          format: int64
          nullable: true
        trashCanBytes:
          type: integer
          format: int64
          nullable: true
        myFilesBytes:
          type: integer
          format: int64
          nullable: true
        unusedBytes:
          type: integer
          format: int64
          nullable: true
    FolderRequest:
      type: object
      properties:
        parentHash:
          type: string
        name:
          type: string
    FileTreeNodeClientDto:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        parentHash:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/FileTreeNodeType'
        children:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNodeClientDto'
        shared:
          type: boolean
          nullable: true
    CopyFilesRequestDto:
      type: object
      properties:
        dtos:
          type: array
          items:
            $ref: '#/components/schemas/CopyHashAndNewNameDto'
        parentHash:
          type: string
        folderType:
          $ref: '#/components/schemas/FolderType'
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/MoveConflictPairDto'
    CopyHashAndNewNameDto:
      type: object
      properties:
        hash:
          type: string
        newName:
          type: string
    Authority_FolderContent:
      type: object
      properties:
        tag:
          type: string
        description:
          type: string
        orderPosition:
          type: integer
          format: int32
          nullable: true
    CheckRoutine_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        supportedScenarioTypes:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioType'
        checkTypes:
          type: array
          items:
            type: string
            enum:
              - EXT
              - QUOTA
              - SIZE
              - ARCHIVE
              - VIRUS
              - ICAP
              - HASH_CONTROL
              - DOMAIN
        className:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter_FolderContent'
        available:
          type: boolean
          nullable: true
    CheckScenario_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        defaultScenario:
          type: boolean
          nullable: true
        type:
          type: string
          enum:
            - STORED_FILE
            - UPDATE_FILE
            - STORED_FILE_UPLOAD_BY_COUNTERPART
            - COUNTERPART_REQUEST
            - EXCHANGE
            - COUNTERPART_SHARE
            - COUNTERPART_TRANSFER
            - PUBLIC_SHARE
            - USER_SHARE
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/CheckStage_FolderContent'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group_FolderContent'
        parameters:
          $ref: '#/components/schemas/JsonNode_FolderContent'
        parametersAsJson:
          $ref: '#/components/schemas/JsonNode_FolderContent'
        parametersAsString:
          type: string
          writeOnly: true
    CheckStageRoutine_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        routine:
          $ref: '#/components/schemas/CheckRoutine_FolderContent'
        name:
          type: string
        failureFatal:
          type: boolean
          nullable: true
        icapSettings:
          type: array
          items:
            $ref: '#/components/schemas/IcapSettingsEntity_FolderContent'
        parameters:
          $ref: '#/components/schemas/JsonNode_FolderContent'
        template:
          type: boolean
          nullable: true
        parametersAsJson:
          $ref: '#/components/schemas/JsonNode_FolderContent'
    CheckStage_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        routines:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageRoutine_FolderContent'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        usedScenariosNames:
          type: array
          items:
            type: string
    FileTreeNodeTag_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        taggedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        creatorId:
          type: integer
          format: int64
          nullable: true
        creator:
          $ref: '#/components/schemas/User'
    FileTreeNode_FolderContent:
      type: object
      properties:
        userEmail:
          type: string
        folderType:
          $ref: '#/components/schemas/FolderType'
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FROZEN
            - BLOCKED
            - USER_BLOCKED_BY_ADMIN
            - PENDING
            - PENDING_APPROVE_MARKS
          nullable: true
        statusBeforeFreezing:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FROZEN
            - BLOCKED
            - USER_BLOCKED_BY_ADMIN
            - PENDING
            - PENDING_APPROVE_MARKS
          nullable: true
        ownerId:
          type: integer
          format: int64
          nullable: true
        owner:
          $ref: '#/components/schemas/RegularUser'
        comment:
          type: string
        name:
          type: string
        nodeOwner:
          $ref: '#/components/schemas/User'
        parentId:
          type: integer
          format: int64
          nullable: true
        parent:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        availableSince:
          type: string
          format: date-time
          nullable: true
        timeToLive:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        markedToTrash:
          type: string
          format: date-time
          nullable: true
        markedToDeleteFromStorage:
          type: string
          format: date-time
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNodeTag_FolderContent'
        shares:
          type: array
          items:
            $ref: '#/components/schemas/SharedNode_FolderContent'
        sharedVia:
          type: array
          items:
            $ref: '#/components/schemas/SharedNode_FolderContent'
        expiryDate:
          type: string
          format: date-time
          nullable: true
        leftDownload:
          type: integer
          format: int32
          nullable: true
        downloaded:
          type: integer
          format: int32
          nullable: true
        isDeletedFolder:
          type: boolean
          nullable: true
        viewed:
          type: boolean
          nullable: true
        newFilesNum:
          type: integer
          format: int64
          nullable: true
        path:
          type: string
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        newSharedNode:
          $ref: '#/components/schemas/SharedNode_FolderContent'
        newSharedNodeDto:
          $ref: '#/components/schemas/SharedNode_FolderContent'
        lastParentNodeId:
          type: integer
          format: int64
          nullable: true
        lastParentNode:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        trashedById:
          type: integer
          format: int64
          nullable: true
        prefix:
          type: integer
          format: int32
          nullable: true
        versions:
          type: array
          items:
            $ref: '#/components/schemas/StoredFile_FolderContent'
        oldVersion:
          $ref: '#/components/schemas/StoredFile_FolderContent'
        incomingOriginName:
          type: string
        userRequesterFolderId:
          type: integer
          format: int64
          nullable: true
        userRequesterFolder:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlDate:
          type: string
          format: date-time
          nullable: true
        external:
          type: boolean
          nullable: true
        immutable:
          type: boolean
          nullable: true
        encrypted:
          type: boolean
          nullable: true
        ready:
          type: boolean
          nullable: true
        forbiddenToModify:
          type: boolean
          nullable: true
        availableTo:
          type: array
          items:
            $ref: '#/components/schemas/User'
        withPreview:
          type: boolean
          nullable: true
        displayName:
          type: string
        state:
          type: string
          enum:
            - AWAITING_ARCHIVING
            - AWAITING_TRANSFER
            - AWAITING_UPDATE
            - ARCHIVING
            - DECLINED
            - DELETED
            - NEW
            - OLD_VERSION
            - PUBLISHED
            - PUBLISHING
            - REENCRYPT_IN_PROGRESS
            - REENCRYPT_PENDING
            - SYSTEM_VERIFICATION
            - UPDATE_VERIFICATION_PENDING
            - UPLOADED
            - UPLOAD_PENDING
            - VERIFICATION_PENDING
            - VERIFIED
          nullable: true
        fileName:
          type: string
        canDownload:
          type: boolean
          nullable: true
        fileType:
          type: string
          enum:
            - ZIP
            - REGULAR
          nullable: true
        storedFileName:
          type: string
        ownerEmail:
          type: string
        type:
          $ref: '#/components/schemas/FileTreeNodeType'
        trashedNodeType:
          $ref: '#/components/schemas/FileTreeNodeType'
        credentials:
          type: string
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        mimeType:
          type: string
        publicSharedNodeDto:
          $ref: '#/components/schemas/PublicSharedNode_FolderContent'
        permissionsTemplateDto:
          $ref: '#/components/schemas/PermissionsTemplate'
        publicUploadRequestInfo:
          $ref: '#/components/schemas/PublicUploadRequestInfo'
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    Group_FolderContent:
      type: object
      properties:
        type:
          type: string
          enum:
            - SUPER_USER
            - LOCAL
            - COUNTERPART
            - COUNTERPART_GROUP
            - GROUP
            - UNAUTHORIZED
            - EXCHANGE
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastLdapSync:
          type: string
          format: date-time
          nullable: true
        frozenAt:
          type: string
          format: date-time
          nullable: true
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSource:
          $ref: '#/components/schemas/LdapSource_FolderContent'
        ldapDn:
          type: string
        usedSpaceBytes:
          type: integer
          format: int64
          nullable: true
        diskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        filesDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        filesAccessTtlHours:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestTtlHours:
          type: integer
          format: int32
          nullable: true
        filesLimitInCounterpartUploadRequest:
          type: integer
          format: int32
          nullable: true
        counterpartUploadRequestType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        shareToCounterpartType:
          type: string
          enum:
            - BY_AUTHORIZATION
            - USER_SELECTABLE
            - BY_EXTERNAL_LINK
          nullable: true
        requestPermissionTemplate:
          type: string
          enum:
            - PREVIEW
            - DOWNLOAD
            - USER_SELECTABLE
          nullable: true
        countriesBlacklist:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DISABLED
            - DELETED
            - DESYNCHRONIZED
            - BLOCKED
          nullable: true
        countriesBLCheckEnabled:
          type: boolean
          nullable: true
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        canCreatingPublicLink:
          type: boolean
          nullable: true
        expiryPublicLinks:
          type: integer
          format: int32
          nullable: true
        effectiveDiskQuotaBytes:
          type: integer
          format: int64
          nullable: true
        requiresSecondFactor:
          type: boolean
          nullable: true
        isMobileTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
        tag:
          type: string
        storagePolicyPlain:
          type: boolean
          nullable: true
        storagePolicyAes:
          type: boolean
          nullable: true
        storagePolicyZip:
          type: boolean
          nullable: true
        storagePolicyGost:
          type: boolean
          nullable: true
        builtin:
          type: boolean
          nullable: true
        allowPublicShare:
          type: boolean
          nullable: true
        publicShareMaxTime:
          type: integer
          nullable: true
        loginEnabled:
          type: boolean
          nullable: true
        ldap:
          type: boolean
          nullable: true
        displayName:
          type: string
        canReceiveShares:
          type: boolean
          nullable: true
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        isSpaceFull:
          type: boolean
          writeOnly: true
          nullable: true
        isSpaceNotFull:
          type: boolean
          writeOnly: true
          nullable: true
        countriesBlacklistList:
          type: array
          items:
            type: string
        scenarios:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CheckScenario_FolderContent'
        diskQuotaMegaBytes:
          maximum: 8796093022207
          type: integer
          format: int64
          nullable: true
        isTwoFactorAuthenticationEnabled:
          type: boolean
          nullable: true
    IcapSettingsEntity_FolderContent:
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
        name:
          type: string
        icapHost:
          type: string
        icapPort:
          type: integer
          format: int32
          nullable: true
        icapService:
          type: string
        fileMaxSize:
          type: integer
          format: int64
          nullable: true
        whiteListExtension:
          type: integer
          format: int64
          nullable: true
        blackListExtension:
          type: integer
          format: int64
          nullable: true
    JsonNode_FolderContent:
      type: object
    LdapHost_FolderContent:
      required:
        - host
        - port
      type: object
      properties:
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        host:
          pattern: "^[\\wа-яА-Я.-]+$"
          type: string
        port:
          type: integer
          format: int32
          nullable: true
    LdapSource_FolderContent:
      required:
        - baseDn
        - emailAttr
        - groupMappingType
        - lastLdapSyncBeforeDeletion
        - loginAttr
        - password
        - username
      type: object
      properties:
        hostsAndPorts:
          type: array
          items:
            $ref: '#/components/schemas/LdapHost_FolderContent'
        baseDn:
          type: string
        sslEnabled:
          type: boolean
          nullable: true
        ldapType:
          type: string
          enum:
            - ACTIVE_DIRECTORY
            - EDIRECTORY
          nullable: true
        username:
          type: string
        password:
          type: string
        emailAttr:
          maxLength: 64
          minLength: 0
          type: string
        loginAttr:
          maxLength: 64
          minLength: 0
          type: string
        customAttr:
          maxLength: 64
          minLength: 0
          type: string
        internalPhone:
          maxLength: 64
          minLength: 0
          type: string
        prefix:
          type: string
        groupMappingType:
          type: string
          enum:
            - OU
            - GROUP
          nullable: true
        lastLdapSyncBeforeDeletion:
          minimum: 0
          type: integer
          format: int64
          nullable: true
        enabled:
          type: boolean
          nullable: true
        active:
          type: boolean
          nullable: true
        deleted:
          type: boolean
          nullable: true
    PageWrapperFileTreeNode_FolderContent:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNode_FolderContent'
    Parameter_FolderContent:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - INTEGER
            - REAL
            - STRING_ARRAY
            - INTEGER_ARRAY
            - REAL_ARRAY
          nullable: true
    PersonalData_FolderContent:
      type: object
      properties:
        firstName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        lastName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        middleName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        internalPhone:
          type: string
        position:
          type: string
        organization:
          type: string
        customInfo:
          type: string
    PublicSharedNode_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        publicSharedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        publicSharedFileTreeNode:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        sharedById:
          type: integer
          format: int64
          nullable: true
        sharedBy:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        expiredMinutes:
          type: string
          format: date-time
          nullable: true
        notification:
          type: boolean
          nullable: true
        publicLink:
          type: string
        expired:
          type: string
          format: date-time
          nullable: true
    SharedNodeInfoDownload_FolderContent:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/RegularUser'
        downloaded:
          type: integer
          format: int32
          nullable: true
    SharedNodeInfo_FolderContent:
      type: object
      properties:
        sharedNodeInfosDownload:
          type: array
          items:
            $ref: '#/components/schemas/SharedNodeInfoDownload_FolderContent'
        accepted:
          type: boolean
          nullable: true
        sharedTo:
          $ref: '#/components/schemas/User'
        downloaded:
          type: integer
          format: int32
          nullable: true
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        fileTreeNodeHash:
          type: string
        fileTreeNodeName:
          type: string
    SharedNode_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          enum:
            - ACTIVE
            - FROZEN
            - BLOCKED
            - PENDING
          nullable: true
        hash:
          type: string
        sharedFileTreeNodeId:
          type: integer
          format: int64
          nullable: true
        sharedById:
          type: integer
          format: int64
          nullable: true
        sharedBy:
          $ref: '#/components/schemas/User'
        sharedToId:
          type: integer
          format: int64
          nullable: true
        sharedTo:
          $ref: '#/components/schemas/User'
        downloadsCount:
          type: integer
          format: int32
          nullable: true
        downloadsLimit:
          type: integer
          format: int32
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
        byExternalLink:
          type: boolean
          nullable: true
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        permissionsTemplateId:
          type: integer
          format: int64
          nullable: true
        comment:
          type: string
        sharedNodeStatus:
          type: string
          enum:
            - ACTIVE
            - FROZEN
            - BLOCKED
            - PENDING
          nullable: true
        remainingTime:
          type: integer
          format: int64
          nullable: true
        trueDownloadsLimit:
          type: integer
          format: int32
          nullable: true
        permissionsTemplateDto:
          $ref: '#/components/schemas/PermissionsTemplate'
    StoredFile_FolderContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        hash:
          type: string
        storagePolicy:
          $ref: '#/components/schemas/StoragePolicy'
        state:
          type: string
          enum:
            - AWAITING_ARCHIVING
            - AWAITING_TRANSFER
            - AWAITING_UPDATE
            - ARCHIVING
            - DECLINED
            - DELETED
            - NEW
            - OLD_VERSION
            - PUBLISHED
            - PUBLISHING
            - REENCRYPT_IN_PROGRESS
            - REENCRYPT_PENDING
            - SYSTEM_VERIFICATION
            - UPDATE_VERIFICATION_PENDING
            - UPLOADED
            - UPLOAD_PENDING
            - VERIFICATION_PENDING
            - VERIFIED
          nullable: true
        checkResult:
          type: string
          enum:
            - OK
            - BAD_EXTENSION
            - NOT_WHITELISTED_EXTENSION
            - QUOTA_EXCEEDED
            - FILE_SIZE_EXCEEDED
            - ARCH_PASSWORD
            - VIRUS
            - VIRUS_ICAP
            - MANUALLY_DECLINED
            - MANUALLY_ACCEPT
            - HASH_CONTROL
          nullable: true
        requester:
          $ref: '#/components/schemas/RegularUser'
        uploader:
          $ref: '#/components/schemas/User'
        uploaderType:
          $ref: '#/components/schemas/UploaderType'
        uploaderIp:
          type: string
        fileName:
          type: string
        mime:
          type: string
        originalSize:
          type: integer
          format: int64
          nullable: true
        compressedSize:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        modifiedAt:
          type: string
          format: date-time
          nullable: true
        verifiedBy:
          $ref: '#/components/schemas/User'
        verifierNotes:
          type: string
        downloadsLimit:
          type: integer
          format: int32
          deprecated: true
          nullable: true
        downloads:
          type: integer
          format: int64
          nullable: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        credentials:
          type: string
        awaitingArchiving:
          $ref: '#/components/schemas/FileTreeNode_FolderContent'
        message:
          type: string
        shared:
          type: array
          items:
            $ref: '#/components/schemas/User'
        getCurrentSize:
          type: integer
          format: int64
          writeOnly: true
          nullable: true
        fileSizeBytes:
          type: integer
          format: int64
          nullable: true
        mimeType:
          type: string
        size:
          type: integer
          format: int64
          nullable: true
        storedFileName:
          type: string
        ownerEmail:
          type: string
    NodeCommentChangeRequestDto:
      required:
        - fileTreeNodeHash
      type: object
      properties:
        fileTreeNodeHash:
          type: string
        shareNodeId:
          type: integer
          format: int64
          nullable: true
        comment:
          maxLength: 512
          minLength: 0
          type: string
    StoredFileTreeNodeResponseDto:
      type: object
      properties:
        hash:
          type: string
    FilesDto:
      type: object
      properties:
        filesNames:
          type: array
          items:
            type: string
    UploadLinkRequestDto:
      required:
        - url
      type: object
      properties:
        url:
          type: string
        referer:
          type: string
        cookies:
          type: string
    ExchangeRequest:
      type: object
      properties:
        userEMail:
          type: string
        counterpartEMail:
          type: string
        fileName:
          type: string
        file:
          type: file
          nullable: true
      description: "Сам файл, имя пользователя который скачал файл и email контрагента которому передать файл (может быть null)"
    DragAndDropFolderTreeDTO:
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        parentHash:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/DragAndDropFolderTreeDTO'
    FileUploadCheckDto:
      type: object
      properties:
        index:
          type: integer
          format: int64
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
    FileUploadCheckRequestDto:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadCheckDto'
    FileUploadCheckResponseDto:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadCheckResultDto'
    FileUploadCheckResultDto:
      type: object
      properties:
        index:
          type: integer
          format: int64
          nullable: true
        canUpload:
          type: boolean
          nullable: true
        message:
          type: string
    PageWrapperRegularUser:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/RegularUser'
    CounterpartRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        counterpart:
          $ref: '#/components/schemas/RegularUser'
        counterpartRequestDetails:
          $ref: '#/components/schemas/CounterpartRequestDetails'
        requester:
          $ref: '#/components/schemas/User'
        requestedAt:
          type: string
          format: date-time
          nullable: true
        requesterNotes:
          type: string
        reviewer:
          $ref: '#/components/schemas/User'
        reviewedAt:
          type: string
          format: date-time
          nullable: true
        reviewerNotes:
          type: string
        counterpartRequestStatus:
          type: string
          enum:
            - ACCEPTED
            - REJECTED
            - PENDING
            - DISABLED
          nullable: true
        counterpartRequestDetailsDto:
          $ref: '#/components/schemas/CounterpartRequestDetails'
        counterpartGroups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CounterpartGroup'
    CounterpartsRequestResultDto:
      type: object
      properties:
        approved:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartRequestDetails'
        skipped:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartRequestDetails'
        pending:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartRequestDetails'
        failed:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartRequestDetails'
    CounterpartUploadRequestDto:
      required:
        - limit
      type: object
      properties:
        requestId:
          type: integer
          format: int64
          nullable: true
        notes:
          type: string
        limit:
          minimum: 1
          type: integer
          format: int32
          nullable: true
        requestTtlHours:
          minimum: 0
          type: integer
          format: int32
          nullable: true
        requestByExternalLink:
          type: boolean
          nullable: true
        comment:
          maxLength: 256
          minLength: 0
          type: string
        markIds:
          type: array
          items:
            type: integer
            format: int64
        commentForMark:
          type: string
    CounterpartExportRequestDto:
      type: object
      properties:
        counterpartIds:
          uniqueItems: false
          type: array
          items:
            type: integer
            format: int64
    CounterpartGroupRequestDto:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/CounterpartGroup'
        counterpartsIds:
          type: array
          items:
            type: integer
            format: int64
    PageWrapperCounterpartRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartRequest'
    PageWrapperCounterpartGroup:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartGroup'
    CounterpartGroupDeleteRequestBody:
      type: object
      properties:
        name:
          type: string
        ownerId:
          type: integer
          format: int64
          nullable: true
    CounterpartGroupDeleteRequestDto:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartGroupDeleteRequestBody'
    PageWrapperCheckScenario:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckScenario'
    TemplateForCheckStageRoutineDto:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
        parameters:
          $ref: '#/components/schemas/JsonNode'
    PageWrapperCheckStageRoutine:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageRoutine'
    PageWrapperRoutineReportDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/RoutineReportDto'
    RoutineReportDto:
      type: object
      properties:
        date:
          type: string
        adminEmail:
          type: string
        scenarioName:
          type: string
        stageName:
          type: string
        routineName:
          type: string
        subject:
          type: string
        type:
          type: string
        status:
          type: string
    UserGroupUpdateDto:
      type: object
      properties:
        groups:
          type: array
          items:
            type: integer
            format: int64
    UpdateLoginFromClientRequestDto:
      type: object
      properties:
        dtos:
          type: array
          items:
            $ref: '#/components/schemas/UserIdAndLoginAuthTypeRequestDto'
    UserIdAndLoginAuthTypeRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          nullable: true
        isAbleToLoginFromClient:
          type: boolean
          nullable: true
    UserExportCsvDto:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: integer
            format: int64
    PageWrapperGroup:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    TemplateFormDto:
      type: object
      properties:
        letter:
          $ref: '#/components/schemas/Template'
    FilePreviewSettings:
      required:
        - isExcelPreviewEnabled
        - isImagePreviewEnabled
        - isPdfPreviewEnabled
        - isPresentationPreviewEnabled
        - isPreviewEnabled
        - isTextPreviewEnabled
        - isWatermarkEnabled
        - isWordPreviewEnabled
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        isPreviewEnabled:
          type: boolean
          nullable: true
        isWordPreviewEnabled:
          type: boolean
          nullable: true
        isExcelPreviewEnabled:
          type: boolean
          nullable: true
        isTextPreviewEnabled:
          type: boolean
          nullable: true
        isImagePreviewEnabled:
          type: boolean
          nullable: true
        isPdfPreviewEnabled:
          type: boolean
          nullable: true
        isPresentationPreviewEnabled:
          type: boolean
          nullable: true
        isWatermarkEnabled:
          type: boolean
          nullable: true
    StorageReserveSettings:
      type: object
      properties:
        storageValue:
          maximum: 99999
          minimum: 1
          type: integer
          format: int32
          nullable: true
        adminEmails:
          type: array
          items:
            type: string
    SiemSettings:
      required:
        - siemHost
        - siemPort
      type: object
      properties:
        siemHost:
          type: string
        siemPort:
          type: integer
          format: int32
          nullable: true
        siemOutputFormat:
          type: string
        enabled:
          type: boolean
          nullable: true
    IntegrationStatusSiemSettingsSiemConnectResult:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/SiemSettings'
        connectionResult:
          $ref: '#/components/schemas/SiemConnectResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    SiemConnectResult:
      type: object
      properties:
        result:
          type: string
          enum:
            - OK
            - DISABLED
            - CONNECTION_SSL_ERROR
            - CONNECTION_ERROR
            - CREDENTIALS_ERROR
            - UNKNOWN_ERROR
            - UNKNOWN
            - WRONG_HOST
            - IN_PROGRESS
            - DELAYED_DUE_REENCRYPTING
          nullable: true
        message:
          type: string
        exception:
          type: string
        success:
          type: boolean
          nullable: true
    Watermark:
      required:
        - customText
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        fontSize:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          nullable: true
        horizontalRepeat:
          type: boolean
          nullable: true
        verticalRepeat:
          type: boolean
          nullable: true
        verticalRepeatInterval:
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          nullable: true
        horizontalPosition:
          maximum: 100
          minimum: 0
          type: number
          format: float
          nullable: true
        verticalPosition:
          maximum: 100
          minimum: 0
          type: number
          format: float
          nullable: true
        rotationAngle:
          type: integer
          format: int32
          nullable: true
        color:
          type: string
        opacity:
          maximum: 1
          minimum: 0
          type: number
          format: float
          nullable: true
        customText:
          maxLength: 256
          minLength: 0
          type: string
        withDateOnWatermark:
          type: boolean
          nullable: true
        withNameOnWatermark:
          type: boolean
          nullable: true
        withEmailOnWatermark:
          type: boolean
          nullable: true
        withIpOnWatermark:
          type: boolean
          nullable: true
        withLinkOnWatermark:
          type: boolean
          nullable: true
        mark:
          $ref: '#/components/schemas/Mark'
    WatermarkRequestDto:
      type: object
      properties:
        watermarks:
          type: array
          items:
            $ref: '#/components/schemas/Watermark'
    MailSettings:
      required:
        - from
        - host
        - password
        - port
        - username
      type: object
      properties:
        from:
          type: string
        host:
          type: string
        port:
          type: integer
          format: int32
          nullable: true
        authEnabled:
          type: boolean
          nullable: true
        username:
          type: string
        password:
          type: string
        sslEnabled:
          type: boolean
          nullable: true
        starttlsEnabled:
          type: boolean
          nullable: true
        enabled:
          type: boolean
          nullable: true
    IntegrationStatusMailSettingsMailTestResult:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/MailSettings'
        connectionResult:
          $ref: '#/components/schemas/MailTestResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    MailTestResult:
      type: object
      properties:
        result:
          type: string
          enum:
            - OK
            - DISABLED
            - CONNECTION_SSL_ERROR
            - CONNECTION_ERROR
            - CREDENTIALS_ERROR
            - UNKNOWN_ERROR
            - UNKNOWN
            - WRONG_HOST
            - IN_PROGRESS
            - DELAYED_DUE_REENCRYPTING
          nullable: true
        message:
          type: string
        exception:
          type: string
        success:
          type: boolean
          nullable: true
    LoggingSettings:
      type: object
      properties:
        rotateBytes:
          type: integer
          format: int64
          nullable: true
        maxCount:
          type: integer
          format: int32
          nullable: true
        ldapLogLevel:
          type: string
        icapLogLevel:
          type: string
        clamavLogLevel:
          type: string
        generalLogLevel:
          type: string
    SyncResult:
      type: object
      properties:
        ldapSourceId:
          type: integer
          format: int64
          nullable: true
        ldapSourceName:
          type: string
        ldapSourceStatus:
          $ref: '#/components/schemas/ConnectionResult'
        exceptionMessage:
          type: string
        groupsSynchronized:
          type: integer
          format: int32
          nullable: true
        usersSynchronized:
          type: integer
          format: int32
          nullable: true
        groupsDeleted:
          type: integer
          format: int32
          nullable: true
        usersDisabled:
          type: integer
          format: int32
          nullable: true
    SyncStatus:
      type: object
      properties:
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        syncResult:
          $ref: '#/components/schemas/SyncResult'
        log:
          type: object
          additionalProperties:
            type: string
        inProgress:
          type: boolean
          nullable: true
    IntegrationStatus:
      type: object
      properties:
        settings:
          type: object
        connectionResult:
          $ref: '#/components/schemas/ConnectionResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    PageWrapperIntegrationStatus:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationStatus'
    IcapConnectResult:
      type: object
      properties:
        result:
          type: string
          enum:
            - OK
            - DISABLED
            - CONNECTION_SSL_ERROR
            - CONNECTION_ERROR
            - CREDENTIALS_ERROR
            - UNKNOWN_ERROR
            - UNKNOWN
            - WRONG_HOST
            - IN_PROGRESS
            - DELAYED_DUE_REENCRYPTING
          nullable: true
        message:
          type: string
        exception:
          type: string
        success:
          type: boolean
          nullable: true
    IntegrationStatusIcapSettingsEntityIcapConnectResult:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/IcapSettingsEntity'
        connectionResult:
          $ref: '#/components/schemas/IcapConnectResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    PageWrapperAdminAccessSetting:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminAccessSetting'
    AdminAccessSetting:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        accessType:
            $ref: '#/components/schemas/AccessType'
        targetUserType:
            $ref: '#/components/schemas/TargetUserType'
        masks:
          type: array
          items:
            $ref: '#/components/schemas/AddressMask'
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
    UserRestrictions:
      type: object
      properties:
        authority:
          $ref: '#/components/schemas/Authority'
        isAllowed:
          type: boolean
          nullable: true
    IpAddress:
      type: object
      properties:
        plainValue:
          type: string
    Subnet:
      type: object
      properties:
        plainValue:
          type: string
    SubnetMask:
      type: object
      properties:
        plainValue:
          type: string
    WhiteListMember:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/IpAddress'
        subnet:
          $ref: '#/components/schemas/Subnet'
        mask:
          $ref: '#/components/schemas/SubnetMask'
    PageWrapperRole:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    UpdateResumableUploadResponseDto:
      type: object
      properties:
        newOffset:
          type: integer
          format: int64
          nullable: true
    UpdateTtlRequestDto:
      type: object
      properties:
        nodeId:
          type: integer
          format: int64
          nullable: true
        ttl:
          type: string
          format: date-time
          nullable: true
    GroupsUpdateRequestDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
        group:
          $ref: '#/components/schemas/Group'
    StreamingResponseBody:
      type: object
    MonoResponseEntityByteArray:
      type: object
    PasswordSettings:
      type: object
      properties:
        defaultPasswdComplexity:
          type: string
          enum:
            - LETTERS
            - LETTERS_NUMBERS
            - LETTERS_NUMBERS_PUNCTUATION
          nullable: true
        defaultPasswdLen:
          type: integer
          nullable: true
        defaultPasswdCaseVariating:
          type: boolean
          nullable: true
        manualPasswordVerification:
          type: boolean
          nullable: true
    PageWrapperUserRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserRequest'
    UserRequest:
      required:
        - requestedAt
        - requester
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        requester:
          $ref: '#/components/schemas/RegularUser'
        requestedAt:
          type: string
          format: date-time
          nullable: true
        reviewerNotes:
          type: string
        reviewedAt:
          type: string
          format: date-time
          nullable: true
        requestStatus:
          type: string
          enum:
            - PENDING
            - CONFIRMED
            - REJECTED
            - PRE_PASSWORD_UPDATE
          nullable: true
        token:
          type: string
        verificationMail:
          type: boolean
          nullable: true
    UserRegistrationSettingsResultDto:
      type: object
      properties:
        showRegistration:
          type: boolean
          nullable: true
        showRestore:
          type: boolean
          nullable: true
        allowUsersFromInternet:
          type: boolean
          nullable: true
        registrationPolicy:
          type: string
          enum:
            - AUTO
            - MANUAL
            - E_MAIL_NEED_TO_BE_CONFIRMED
          nullable: true
    Logo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        bytes:
          type: string
          format: byte
          #nullable: true
        type:
          type: string
    LicenseDto:
      type: object
      properties:
        customerName:
          type: string
        customerInn:
          type: string
        unlimited:
          type: boolean
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
        userQuantity:
          type: integer
          format: int64
          nullable: true
        mobileQuantity:
          type: integer
          format: int64
          nullable: true
        windowsQuantity:
          type: integer
          format: int64
          nullable: true
        storageEncryption:
          type: boolean
          nullable: true
        icapIntegration:
          type: boolean
          nullable: true
        siemIntegration:
          type: boolean
          nullable: true
        exchangeIntegration:
          type: boolean
          nullable: true
        onlineEditing:
          type: boolean
          nullable: true
        brandCustomizing:
          type: boolean
          nullable: true
        isMarksWorkAllowed:
          type: boolean
          nullable: true
    PageWrapperHashDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/HashDto'
    PageWrapperHashSettingDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/HashSettingDto'
    PageWrapperHashFileDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/HashFileDto'
    FileTreeNodeShareInfo:
      type: object
      properties:
        sharedTo:
          $ref: '#/components/schemas/User'
        sharedViaNodeHash:
          type: string
        sharedViaNodeName:
          type: string
        fileTreeNodeStatus:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FROZEN
            - BLOCKED
            - USER_BLOCKED_BY_ADMIN
            - PENDING
            - PENDING_APPROVE_MARKS
          nullable: true
        sharedNodeStatus:
          type: string
          enum:
            - ACTIVE
            - PENDING
          nullable: true
        downloadsLimit:
          type: integer
          format: int32
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        downloadsCount:
          type: integer
          format: int32
          nullable: true
    UserFilesContentDto:
      type: object
      properties:
        node:
          $ref: '#/components/schemas/FileTreeNodeClientDto'
    FilePreviewDto:
      type: object
      properties:
        isPreviewReady:
          type: boolean
          nullable: true
        pdfLink:
          type: string
        totalPages:
          type: integer
          format: int32
          nullable: true
        byPage:
          type: array
          items:
            $ref: '#/components/schemas/FilePreviewImageDto'
    FilePreviewImageDto:
      type: object
      properties:
        thumbnailLink:
          type: string
        originalImageLink:
          type: string
        pageNumber:
          type: integer
          format: int32
          nullable: true
    PageWrapperStoredFile:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/StoredFile'
    StatRecord:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        day:
          type: string
          format: date-time
          nullable: true
        storageSize:
          type: integer
          format: int32
          nullable: true
        usersUploadedFilesCount:
          type: integer
          format: int32
          nullable: true
        counterpartsUploadedFilesCount:
          type: integer
          format: int32
          nullable: true
        usersDownloadedFilesCount:
          type: integer
          format: int32
          nullable: true
        counterpartsDownloadedFilesCount:
          type: integer
          format: int32
          nullable: true
        usersSharedFilesCount:
          type: integer
          format: int32
          nullable: true
        counterpartsSharedFilesCount:
          type: integer
          format: int32
          nullable: true
        virusViolationsCount:
          type: integer
          format: int32
          nullable: true
        icapViolationsCount:
          type: integer
          format: int32
          nullable: true
        extensionsViolationsCount:
          type: integer
          format: int32
          nullable: true
        countryViolationsCount:
          type: integer
          format: int32
          nullable: true
        totalSharedFilesCount:
          type: integer
          format: int32
          nullable: true
        totalUploadedFilesCount:
          type: integer
          format: int32
          nullable: true
        totalDownloadedFilesCount:
          type: integer
          format: int32
          nullable: true
    TopUserUploads:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        uploadsCount:
          type: integer
          format: int64
          nullable: true
    TopUserSents:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        sentsCount:
          type: integer
          format: int64
          nullable: true
    TopUserDownloads:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        downloadsCount:
          type: integer
          format: int64
          nullable: true
    TopSharedFile:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/StoredFile'
        shareCount:
          type: integer
          format: int64
          nullable: true
    TopFileSize:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/StoredFile'
        sizeBytes:
          type: integer
          format: int64
          nullable: true
    TopGroupUploads:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/Group'
        uploadsCount:
          type: integer
          format: int64
          nullable: true
        topValue:
          type: integer
          format: int64
          writeOnly: true
          nullable: true
    TopGroupSents:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/Group'
        sentsCount:
          type: integer
          format: int64
          nullable: true
        topValue:
          type: integer
          format: int64
          writeOnly: true
          nullable: true
    TopGroupDownloads:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/Group'
        downloadsCount:
          type: integer
          format: int64
          nullable: true
        topValue:
          type: integer
          format: int64
          writeOnly: true
          nullable: true
    TopDownloadedFile:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/StoredFile'
        downloadsCount:
          type: integer
          format: int64
          nullable: true
    TopFileItem:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/StoredFile'
    TopUserLogIns:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        loginsCount:
          type: integer
          format: int64
          nullable: true
    InterfaceInfo:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/Stat'
        rx:
          $ref: '#/components/schemas/Stat'
    Stat:
      type: object
      properties:
        bytes:
          type: integer
          format: int64
          nullable: true
        packets:
          type: integer
          format: int64
          nullable: true
        errs:
          type: integer
          format: int64
          nullable: true
        drop:
          type: integer
          format: int64
          nullable: true
        fifo:
          type: integer
          format: int64
          nullable: true
        frame:
          type: integer
          format: int64
          nullable: true
        compressed:
          type: integer
          format: int64
          nullable: true
        multicast:
          type: integer
          format: int64
          nullable: true
        bitsPerSecond:
          type: integer
          format: int64
          nullable: true
    SystemInfo:
      type: object
      properties:
        cpuUsage:
          type: number
          format: double
          nullable: true
        memTotalkB:
          type: integer
          format: int64
          nullable: true
        memFreekB:
          type: integer
          format: int64
          nullable: true
        memAvailablekB:
          type: integer
          format: int64
          nullable: true
        interfaceInfo:
          $ref: '#/components/schemas/InterfaceInfo'
    StorageInfo:
      type: object
      properties:
        filesystem:
          type: string
        storageTotalSpacekB:
          type: integer
          format: int64
          nullable: true
        storageUsedSpacekB:
          type: integer
          format: int64
          nullable: true
        appStorageDirectory:
          type: string
        appUsedSpacekB:
          type: integer
          format: int64
          nullable: true
        storageAvailableSpacekB:
          type: integer
          format: int64
          nullable: true
    StorageDynamics:
      type: object
      properties:
        gainDaykB:
          type: integer
          format: int64
          nullable: true
        gainWeekkB:
          type: integer
          format: int64
          nullable: true
        gainMonthkB:
          type: integer
          format: int64
          nullable: true
    DesktopSettings:
      type: object
      properties:
        localSyncFolder:
          type: string
        synchronizationIsActive:
          type: boolean
          nullable: true
    TopFileVerificationTime:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/StoredFile'
        verificationTimeSec:
          type: integer
          format: int64
          nullable: true
    TopDeclineReason:
      type: object
      properties:
        checkResult:
          type: string
          enum:
            - OK
            - BAD_EXTENSION
            - NOT_WHITELISTED_EXTENSION
            - QUOTA_EXCEEDED
            - FILE_SIZE_EXCEEDED
            - ARCH_PASSWORD
            - VIRUS
            - VIRUS_ICAP
            - MANUALLY_DECLINED
            - MANUALLY_ACCEPT
            - HASH_CONTROL
          nullable: true
        count:
          type: integer
          format: int32
          nullable: true
    TopDeclineReasonByDay:
      type: object
      properties:
        day:
          type: string
          format: date-time
          nullable: true
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/TopDeclineReason'
    TopUserDeclines:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        declinesCount:
          type: integer
          format: int64
          nullable: true
    StoredFilesSizeForGroup:
      type: object
      properties:
        size:
          type: integer
          format: int64
          nullable: true
        group:
          $ref: '#/components/schemas/Group'
    StoredFilesSizeWrapperStoredFilesSizeForGroup:
      type: object
      properties:
        storedFilesSize:
          type: array
          items:
            $ref: '#/components/schemas/StoredFilesSizeForGroup'
        totalSize:
          type: integer
          format: int64
          nullable: true
    StoredFilesSizeForUser:
      type: object
      properties:
        size:
          type: integer
          format: int64
          nullable: true
        user:
          $ref: '#/components/schemas/User'
    StoredFilesSizeWrapperStoredFilesSizeForUser:
      type: object
      properties:
        storedFilesSize:
          type: array
          items:
            $ref: '#/components/schemas/StoredFilesSizeForUser'
        totalSize:
          type: integer
          format: int64
          nullable: true
    EmailOccupationResultDto:
      type: object
      properties:
        isBusy:
          type: boolean
          nullable: true
        message:
          type: string
    CounterpartCustomInfoFieldNameDto:
      type: object
      properties:
        fieldName:
          type: string
    CheckScenarioInstanceShare:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/ScenarioType'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageInstance'
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        scenarioName:
          type: string
        stagesNames:
          type: array
          items:
            type: string
        sharedNode:
          $ref: '#/components/schemas/SharedNode'
        sharedNodeInfo:
          $ref: '#/components/schemas/SharedNodeInfo'
        sharedBy:
          $ref: '#/components/schemas/User'
        sharedTo:
          $ref: '#/components/schemas/User'
        downloadsLimit:
          type: integer
          format: int32
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
        requestByExternalLink:
          type: boolean
          nullable: true
        permissionsTemplate:
          $ref: '#/components/schemas/PermissionsTemplate'
        permissionsTemplateId:
          type: integer
          format: int64
          nullable: true
        recipients:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RegularUser'
        scenarioSubject:
          type: string
        sharedNodeInfoForScenarioDto:
          $ref: '#/components/schemas/SharedNodeInfo'
    CheckStageInstance:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        routines:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageRoutineInstance'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        staff:
          $ref: '#/components/schemas/User'
        notes:
          type: string
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        usedScenariosNames:
          type: array
          items:
            type: string
    CheckStageRoutineInstance:
      type: object
      properties:
        routine:
          $ref: '#/components/schemas/CheckRoutine'
        name:
          type: string
        failureFatal:
          type: boolean
          nullable: true
        parameters:
          $ref: '#/components/schemas/JsonNode'
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        icapSettings:
          type: array
          items:
            $ref: '#/components/schemas/IcapSettingsEntity'
        parametersAsString:
          type: string
    PageWrapperCheckScenarioInstanceShare:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckScenarioInstanceShare'
    Authority_Embedded:
      type: object
      properties:
        tag:
          type: string
        description:
          type: string
        orderPosition:
          type: integer
          format: int32
          nullable: true
    CheckRoutine_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        supportedScenarioTypes:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioType'
        checkTypes:
          type: array
          items:
            type: string
            enum:
              - EXT
              - QUOTA
              - SIZE
              - ARCHIVE
              - VIRUS
              - ICAP
              - HASH_CONTROL
              - DOMAIN
        className:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter_Embedded'
        available:
          type: boolean
          nullable: true
    CheckScenarioInstance_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/ScenarioType'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageInstance_Embedded'
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        scenarioName:
          type: string
        subScenarioIds:
          type: array
          items:
            type: integer
            format: int64
        stagesNames:
          type: array
          items:
            type: string
        recipients:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RegularUser_Embedded'
        scenarioSubject:
          type: string
        issuers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RegularUser_Embedded'
        sharedToName:
          type: string
        sharedByName:
          type: string
        fileTreeFile:
          $ref: '#/components/schemas/FileTreeNode'
        sharedNodeName:
          type: string
        fileName:
          type: string
        userEmail:
          type: string
        oldVersion:
          type: string
        newVersion:
          type: string
        counterpartEmail:
          type: string
        requesterEmail:
          type: string
        counterpartPosition:
          type: string
        counterpartLastName:
          type: string
        counterpartFirstName:
          type: string
        counterpartMiddleName:
          type: string
        counterpartOrganization:
          type: string
    CheckStageInstance_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        routines:
          type: array
          items:
            $ref: '#/components/schemas/CheckStageRoutineInstance_Embedded'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_Embedded'
        staff:
          $ref: '#/components/schemas/User_Embedded'
        notes:
          type: string
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        usedScenariosNames:
          type: array
          items:
            type: string
    CheckStageRoutineInstance_Embedded:
      type: object
      properties:
        routine:
          $ref: '#/components/schemas/CheckRoutine_Embedded'
        name:
          type: string
        failureFatal:
          type: boolean
          nullable: true
        parameters:
          $ref: '#/components/schemas/JsonNode_Embedded'
        status:
          $ref: '#/components/schemas/CheckStatus'
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        icapSettings:
          type: array
          items:
            $ref: '#/components/schemas/IcapSettingsEntity_Embedded'
        parametersAsString:
          type: string
    IcapSettingsEntity_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        enabled:
          type: boolean
          nullable: true
        name:
          type: string
        icapHost:
          type: string
        icapPort:
          type: integer
          format: int32
          nullable: true
        icapService:
          type: string
        fileMaxSize:
          type: integer
          format: int64
          nullable: true
        whiteListExtension:
          type: integer
          format: int64
          nullable: true
        blackListExtension:
          type: integer
          format: int64
          nullable: true
    JsonNode_Embedded:
      type: object
    PageWrapperCheckScenarioInstance_Embedded:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckScenarioInstance_Embedded'
    Parameter_Embedded:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - INTEGER
            - REAL
            - STRING_ARRAY
            - INTEGER_ARRAY
            - REAL_ARRAY
          nullable: true
    PersonalData_Embedded:
      type: object
      properties:
        firstName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        lastName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        middleName:
          pattern: "^[a-zA-Zа-яА-Я-]+$"
          type: string
        internalPhone:
          type: string
        position:
          type: string
        organization:
          type: string
        customInfo:
          type: string
    RegularUser_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          $ref: '#/components/schemas/UserType'
        countriesBlacklist:
          type: string
        login:
          type: string
        email:
          type: string
        personalData:
          $ref: '#/components/schemas/PersonalData_Embedded'
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
    Role_Embedded:
      required:
        - authorities
        - description
        - tag
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        tag:
          type: string
          enum:
            - user
            - admin
            - security
            - pre_auth
            - onlyoffice
          nullable: true
        description:
          type: string
        builtIn:
          type: boolean
          nullable: true
        authorities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Authority_Embedded'
    User_Embedded:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        type:
          $ref: '#/components/schemas/UserType'
        countriesBlacklist:
          type: string
        byExternalLinkCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartUploadRequestType:
          type: boolean
          nullable: true
        chooseCounterpartPermissionRequest:
          type: boolean
          nullable: true
        counterpartPermissionRequestPreviewOnly:
          type: boolean
          nullable: true
        byExternalLinkShareToCounterpartType:
          type: boolean
          nullable: true
        chooseShareToCounterpartType:
          type: boolean
          nullable: true
        email:
          type: string
    CaptchaTokenDto:
      type: object
      properties:
        token:
          type: string
    PageWrapperTemplate:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    IntegrationStatusShortInfo:
      type: object
      properties:
        settings:
          type: object
        connectionResult:
          $ref: '#/components/schemas/ConnectionResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    CheckResumableUploadRequestDto:
      type: object
      properties:
        fileName:
          type: string
        parentHash:
          type: string
        partNumbers:
          type: array
          items:
            type: integer
            format: int64
    UnshareNodeRequestDto:
      required:
        - fileTreeNodeHash
        - receiverId
      type: object
      properties:
        fileTreeNodeHash:
          type: string
        receiverId:
          type: integer
          format: int64
          nullable: true
    DeleteManyFilesRequestDto:
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
    CounterpartCloseUploadRequestsDto:
      type: object
      properties:
        hashes:
          uniqueItems: true
          type: array
          items:
            type: string
    UserDeletionRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          nullable: true
        newFilesOwnerId:
          type: integer
          format: int64
          nullable: true
    DeleteManyGroupsDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
    DeleteWhitelistSettingsDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
    ShortLink:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
        shortUrl:
          type: string
        link:
          type: string
    StoragePolicy:
      type: string
      enum:
        - PLAIN
        - ZIP
        - AES
        - X509
        - GOST
      nullable: true
    CommonTemplateTag:
      type: string
      enum:
        - automaticFilesDeletionAfter24HoursNotice
        - automaticTrashedFilesDeletionNotice
        - automaticMoveTrashFilesDeletionNotice
        - automaticMoveTrashFilesDeletionNoticeForAdmins
        - automaticTrashedFilesDeletionNoticeForAdmins
        - addFileNodeInfos
        - addFileNodeInfosAfterAddToGroup
        - adminRegistrationRequest
        - automaticFilesDeletionNotice
        - counterpartExternalShare
        - counterpartTokenRequest
        - counterpartTransfer
        - deletedFileNodeInfos
        - deletedFileNodeInfosAfterRemoveFromGroup
        - deletedFolderNodeInfos
        - externalRequest
        - fileUploadByExternalLink
        - invitationFileDownload
        - invitationFileUpdate
        - invitationFileUpload
        - invitationNewFolder
        - invitationNewFolderExternal
        - newCounterpartRequest
        - newPassword
        - newUser
        - newUserRequest
        - notificationCounterpartReviewed
        - notificationFileCapacity
        - notificationFileInManual
        - notificationFileReviewed
        - notificationFileUpdateInManual
        - notificationFileUpdateReviewed
        - notificationNewLogForAdmin
        - notificationSubFileInManual
        - notificationSubFileReviewed
        - notificationUnShareNode
        - registrationReviewed
        - registrationToken
        - resetPassword
        - resultOfScenario
        - shareTemplateModified
        - shareTemplateReassign
        - storageReserveExceeded
        - tokenPasswordUpdateRequest
        - counterpartShare
        - ldapUserAccessGranted
        - ldapUserAccessClosed
        - invitationFileUploadCancel
        - notificationFileInManualCounterpart
        - userRegisteredWithTwoFactorAuth
        - userManuallyRegisteredWithTwoFactorAuth
        - tokenPasswordUpdateRequestTwoFactorAuth
        - twoFactorAuthenticationActivated
        - sendDigitCode
        - requestClosedByCountrpart
        - fileDownloaded
        - fileDownloadedByExternalLink
        - fileDownloadedByAnotherUser
        - tokenPasswordUpdateRequestCounterpart
        - existCounterpartAdded
        - ownerChanged
        - unshareAfterDownloadLimitExceeded
        - shareFolderToCounterpart
        - userRegisteredWithMobileTwoFactorAuth
        - mobileTwoFactorAuthenticationActivated
        - publicUploadRequest
        - userAccessClosed
      nullable: true
    AccessType:
      type: string
      enum:
        - WHITELIST
        - RESTRICTED
      nullable: true
    TargetUserType:
      type: string
      enum:
        - ADMIN
        - USER
        - COUNTERPART
        - PUBLIC_LINK
      nullable: true
    ScenarioType:
      type: string
      enum:
        - STORED_FILE
        - UPDATE_FILE
        - STORED_FILE_UPLOAD_BY_COUNTERPART
        - COUNTERPART_REQUEST
        - EXCHANGE
        - COUNTERPART_SHARE
        - COUNTERPART_TRANSFER
        - PUBLIC_SHARE
        - USER_SHARE
        - PUBLIC_UPLOAD_TRANSFER
        - FILE_SYNC
      nullable: true
    UserType:
      type: string
      enum:
        - SUPER_USER
        - LOCAL
        - COUNTERPART
        - COUNTERPART_GROUP
        - GROUP
        - UNAUTHORIZED
        - EXCHANGE
      nullable: true
    CheckStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - CANCELLED
        - FAILED
        - FAILED_AUTO
        - PASSED
        - ACCEPTED
        - FROZEN
        - BLOCKED
        - USER_BLOCKED_BY_ADMIN
        - DECLINED
      nullable: true
    UserGostCertResponseDto:
      type: object
      properties:
        isContainsUserCert:
          type: boolean
          nullable: true
        certString:
          type: string
        userKey:
          type: string
    CryptoSettings:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        containerName:
          type: string
        containerPass:
          type: string
        isActive:
          type: boolean
          nullable: true
    GostSessionKey:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        userId:
          type: integer
          nullable: true
        storedFileId:
          type: integer
          nullable: true
        sessionKey:
          type: string
        certHash:
          type: string
    SessionKeysAndServerCertDto:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/GostSessionKey'
        currentCertificate:
          type: string
        previousCertificate:
          type: string
    OldAndNewEncryptionKeys:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        userId:
          type: integer
          nullable: true
    UpdateSessionKeysDto:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/GostSessionKey'
    PublicUploadRequestDto:
      type: object
      properties:
        folderHash:
          type: string
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlMinutes:
          type: integer
          format: int32
          nullable: true
        comment:
          type: string
    FolderType:
      type: string
      enum:
        - ROOT
        - REGULAR
        - TRASH
        - REQUESTED
        - SHARED
        - SHARED_ROOT
        - SHARED_USER
        - INCOMING
        - CUSTOM_UPLOAD
        - COUNTERPART_UPLOAD_REQUEST
        - EXTERNAL
        - MAIL
        - PUBLIC
        - SYNC_FILE
      nullable: true
    FileTreeNodeType:
      type: string
      enum:
        - FILE
        - FOLDER
        - FOLDER_SHARED_USER
        - SHARED
        - TRASHED
        - FOLDER_FOR_COUNTERPART
        - MAIL
        - PUBLIC_UPLOAD
      nullable: true
    UploaderType:
      type: string
      enum:
        - EMPLOYEE
        - COUNTERPART
        - SYSTEM_LOG
        - PUBLIC
      nullable: true
    PublicUploadReques:
      type: object
      properties:
        folderHash:
          type: string
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlHours:
          type: integer
          format: int32
          nullable: true
        comment:
          type: string
    PublicUploadRequestInfo:
      type: object
      properties:
        requesterId:
          type: integer
          format: int64
          nullable: true
        userRequesterEmail:
          type: string
        filesLimit:
          type: integer
          format: int32
          nullable: true
        requestTtlDate:
          type: string
          format: date-time
          nullable: true
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: true
        link:
          type: string
    UserInterconnectionSettings:
      type: object
      properties:
        master:
          type: boolean
          nullable: true
        direction:
          $ref: '#/components/schemas/SyncDirection'
    InterconnectionSettings:
      type: object
      properties:
        master:
          type: boolean
          nullable: true
        token:
          type: string
        address:
          type: string
        withSSL:
          type: boolean
          nullable: true
        direction:
          $ref: '#/components/schemas/SyncDirection'
    SyncDirection:
      type: string
      enum:
        - TO_EXTERNAL
        - TO_INTERNAL
        - BIDIRECTIONAL
      nullable: true
    IntegrationStatusInterconnectionSettingsConnectionResult:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/InterconnectionSettings'
        connectionResult:
          $ref: '#/components/schemas/InterconnectionSettingsConnectResult'
        timestamp:
          type: string
          format: date-time
          nullable: true
    InterconnectionSettingsConnectResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ConnectionResult'
        message:
          type: string
        exception:
          type: string
        success:
          type: boolean
          nullable: true
    SyncUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        login:
          type: string
        email:
          type: string
    FileSyncRequestStatusDto:
      type: object
      properties:
        hash:
          type: string
        status:
          $ref: '#/components/schemas/FileSyncRequestStatus'
    FileSyncRequestStatus:
      type: string
      enum:
        - PENDING
        - SYNCHRONIZATION
        - VERIFICATION
        - SUBMITTED
        - REJECTE
      nullable: true
    UserLink:
      type: object
      properties:
        localId:
          type: integer
          format: int64
          nullable: true
        remoteId:
          type: integer
          format: int64
          nullable: true
        remoteLogin:
          type: string
        remoteEmail:
          type: string
        autosync:
          type: boolean
          nullable: true
    PageWrapperFileSyncRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FileSyncRequest'
    FileSyncRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/FileSyncRequestStatus'
    Mark:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        description:
          type: string
        isExchangeCounterpart:
          type: boolean
          nullable: true
        isExchangeFiles:
          type: boolean
          nullable: true
    PageWrapperMark:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    CreateMarkRegularUser:
      type: object
      properties:
        isAutoCreated:
          type: boolean
          nullable: true
        elements:
          type: array
          items:
            $ref: '#/components/schemas/RegularUser'
    CreateMarkFileTreeNode:
      type: object
      properties:
        isAutoCreated:
          type: boolean
          nullable: true
        elements:
          type: array
          items:
            $ref: '#/components/schemas/FileTreeNode'
    CreateMarkCounterpartGroup:
      type: object
      properties:
        isAutoCreated:
          type: boolean
          nullable: true
        elements:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartGroup'
    MarkRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        createdBy:
          $ref: '#/components/schemas/RegularUser'
        elementId:
          type: integer
          format: int64
          nullable: true
        elementType:
          $ref: '#/components/schemas/MarkRequestElementType'
        elementName:
          type: string
        commentUser:
          type: string
        commentAdmin:
          type: string
        status:
          $ref: '#/components/schemas/MarkRequestStatus'
        marks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
        oldMarks:
          type: array
          items:
            $ref: '#/components/schemas/Mark'
    MarkRequestElementType:
      type: string
      enum:
        - COUNTERPART
        - COUNTERPART_GROUP
        - COUNTERPART_FILE_UPLOAD
        - USER_FILE_UPLOAD
        - GROUP
        - USER
      nullable: true
    MarkRequestStatus:
      type: string
      enum:
        - NEW
        - REJECTED
        - APPROVED
        - AUTO_APPROVED
        - EXCEPTNEW
      nullable: true
    PasswordChangeRequestStatus:
      type: string
      enum:
        - NEW
        - APPROVED
        - REJECTED
      nullable: true
    PageWrapperPasswordRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarkRequest'

    PageWrapperPasswordChangeRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/PasswordChangeRequest'


    PageWrapperMarkRequest:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
          nullable: true
        totalPages:
          type: integer
          format: int32
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        numberOfElements:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarkRequest'
    LabelsSettings:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        manualAddLabelsOnFileUpload:
          type: boolean
          nullable: true
        manualAddLabelsOnElementCreation:
          type: boolean
          nullable: true
        manualChangeElementLabels:
          type: boolean
          nullable: true
        manualCreateCounterpartFileRequest:
          type: boolean
          nullable: true
        manualAddCounterpartLabelsByUser:
          type: boolean
          nullable: true
        manualAddCounterpartGroupLabelsByUser:
          type: boolean
          nullable: true
    LockCopyingSettings:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        lockCopyingPicture:
          type: boolean
          nullable: true
        lockCopyingText:
          type: boolean
          nullable: true
        lockCopyingAudio:
          type: boolean
          nullable: true
        lockCopyingVideo:
          type: boolean
          nullable: true
        lockCopyingFile:
          type: boolean
          nullable: true
        lockCopyingFolder:
          type: boolean
          nullable: true
    LockScreenshotSettings:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        lockScreenshotScreencast:
          type: boolean
          nullable: true
security:
  - bearerAuth: []